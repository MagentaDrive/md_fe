{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { r as registerInstance, h, a as Host, g as getElement } from './index-f2e5998d.js';\nimport { c as classnames } from './index-713f92a5.js';\nvar listItemCss = \":host(scale-list-item){--display:block;--font-size:var(--scl-font-size-16);--line-height:var(--scl-font-line-height-150);--spacing-left:calc(0.25ch + var(--scl-spacing-16));--font-size-marker-ordered:var(--scl-font-size-16);--font-weight-marker-ordered:var(--scl-font-weight-bold);--font-size-marker-ordered-nested:var(--scl-font-size-12);--line-height-marker-ordered-nested:var(--scl-font-line-height-150);--spacing-top-marker-ordered-nested:calc(\\n    var(--scl-spacing-16) - var(--scl-spacing-12)\\n  );--spacing-right-no-marker:var(--scl-spacing-8);display:var(--display)}.list-item{position:relative;font-size:var(--font-size);line-height:var(--line-height);padding-left:var(--spacing-left)}.list-item:before{content:'';position:absolute;top:0;left:0}.list-item--unordered:before{top:0.5em;border:var(--scl-spacing-1) solid currentColor;display:block;transform:scale(0.66);background:currentColor;box-sizing:border-box;border-radius:50%;width:var(--scl-spacing-8);height:var(--scl-spacing-8)}.list-item--nested.list-item--unordered:before{border:var(--scl-spacing-1) solid currentColor;background:transparent}.list-item--ordered:before{content:attr(data-index) '.';font-size:var(--font-size-marker-ordered);font-weight:var(--font-weight-marker-ordered)}.list-item--nested.list-item--ordered:before{font-size:var(--font-size-marker-ordered-nested);line-height:var(--line-height-marker-ordered-nested);padding-top:var(--spacing-top-marker-ordered-nested)}.list-item--no-marker{display:inline-flex;align-items:center;padding-left:0}.list-item--no-marker:before{display:none}.list-item--no-marker>::slotted(*){margin-right:var(--spacing-right-no-marker)}\";\n\nvar ListItem = /*#__PURE__*/function () {\n  function ListItem(hostRef) {\n    var _this = this;\n\n    _classCallCheck(this, ListItem);\n\n    registerInstance(this, hostRef);\n    /** Whether this is a child of an ordered scale-list, gets set automatically by its parent */\n\n    this.ordered = false;\n    /** If `false`, no marker or left padding will be visible */\n\n    this.marker = true;\n    this.hasNestedChild = false;\n    this.isNested = false;\n\n    this.handleSlotChange = function (_ref) {\n      var target = _ref.target;\n      _this.hasNestedChild = target.assignedNodes().length > 0;\n      _this.isNested = _this.isNestedCheck();\n    };\n\n    this.isNestedCheck = function () {\n      return _this.el.closest('scale-list[slot=\"nested\"]') != null;\n    };\n  }\n\n  _createClass(ListItem, [{\n    key: \"componentWillLoad\",\n    value: function componentWillLoad() {\n      this.isNested = this.isNestedCheck();\n    }\n  }, {\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      if (!this.el.hasAttribute('role')) {\n        this.el.setAttribute('role', 'listitem');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return h(Host, null, this.styles && h(\"style\", null, this.styles), h(\"div\", {\n        class: this.getCssClassMap(),\n        \"data-index\": this.index,\n        part: classnames('base', this.ordered ? 'ordered' : 'unordered', this.isNested && 'nested', !this.marker && 'no-marker')\n      }, h(\"slot\", null), h(\"div\", {\n        class: \"list-item__nested-list\",\n        part: \"nested-list\",\n        hidden: !this.hasNestedChild\n      }, h(\"slot\", {\n        name: \"nested\",\n        onSlotchange: this.handleSlotChange\n      }))));\n    }\n  }, {\n    key: \"getCssClassMap\",\n    value: function getCssClassMap() {\n      var orderType = this.ordered ? 'ordered' : 'unordered';\n      return classnames('list-item', this.isNested && 'list-item--nested', \"list-item--\".concat(orderType), !this.marker && 'list-item--no-marker');\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return getElement(this);\n    }\n  }]);\n\n  return ListItem;\n}();\n\nListItem.style = listItemCss;\nexport { ListItem as scale_list_item };","map":null,"metadata":{},"sourceType":"module"}