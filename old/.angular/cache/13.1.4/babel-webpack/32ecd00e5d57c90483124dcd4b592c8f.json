{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport _classCallCheck from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport { r as registerInstance, h, a as Host, g as getElement } from './index-f2e5998d.js';\nimport { c as classnames } from './index-713f92a5.js';\nimport { h as hasShadowDom, i as isScaleIcon } from './utils-524c237e.js';\nvar buttonCss = \":host{--width:auto;--spacing-x:var(--scl-spacing-24);--spacing-x-icon-only:var(--scl-spacing-8);--min-height:var(--scl-spacing-40);--radius:var(--scl-radius-8);--transition:all var(--scl-motion-duration-fast)\\n    var(--scl-motion-easing-standard);--box-shadow-focus:0 0 0 var(--scl-spacing-2) var(--scl-color-focus);--font-weight:var(--scl-font-weight-bold);--font-size:var(--scl-font-size-16);--line-height:var(--scl-font-line-height-150);--spacing-icon-x:var(--scl-spacing-8);--vertical-align:middle;--font-size-small:var(--scl-font-size-12);--line-height-small:var(--scl-font-line-height-133);--min-height-small:var(--scl-spacing-32);--radius-primary:var(--radius);--background-primary:var(--scl-color-primary);--background-primary-hover:var(--scl-color-primary-hover);--background-primary-active:var(--scl-color-primary-active);--background-primary-disabled:var(--scl-color-background-disabled);--color-primary:var(--scl-color-white);--color-primary-disabled:var(--scl-color-grey-40);--radius-secondary:var(--radius);--border-width-secondary:var(--scl-spacing-1);--background-secondary:transparent;--color-secondary:var(--scl-color-text-standard);--color-secondary-hover:var(--scl-color-primary-hover);--color-secondary-active:var(--scl-color-primary-active);--color-secondary-disabled:var(--scl-color-background-disabled);--radius-ghost:var(--radius);--border-width-ghost:var(--scl-spacing-1);--spacing-x-ghost:var(--scl-spacing-8);--color-ghost:var(--scl-color-primary);--color-ghost-hover:var(--scl-color-primary-hover);--color-ghost-active:var(--scl-color-primary-active);--color-ghost-disabled:var(--scl-color-text-disabled)}.button{box-sizing:border-box;display:inline-flex;align-items:center;position:relative;border:0;outline:none;cursor:pointer;user-select:none;font-family:inherit;word-spacing:inherit;letter-spacing:inherit;justify-content:center;text-decoration:none;font-weight:var(--font-weight);font-size:var(--font-size);line-height:var(--line-height);min-height:var(--min-height);width:var(--width);padding-left:var(--spacing-x);padding-right:var(--spacing-x);vertical-align:var(--vertical-align);transition:var(--transition)}.button:not(.button--disabled):focus{box-shadow:var(--box-shadow-focus)}.button.button--icon-before ::slotted(*){margin-right:var(--spacing-icon-x)}.button.button--icon-after ::slotted(*){margin-left:var(--spacing-icon-x)}.button:after{top:0;left:0;width:100%;border:var(--scl-spacing-1) solid transparent;height:100%;content:'';display:block;position:absolute;box-sizing:border-box;pointer-events:none;border-radius:var(--radius)}.button--size-small{font-size:var(--font-size-small);line-height:var(--line-height-small);min-height:var(--min-height-small)}.button--icon-only{padding-left:var(--spacing-x-icon-only);padding-right:var(--spacing-x-icon-only)}.button--disabled{cursor:not-allowed}.button--variant-primary{text-align:center;border-radius:var(--radius);background:var(--background-primary);color:var(--color-primary)}.button--variant-primary:not(.button--disabled):hover{background:var(--background-primary-hover)}.button--variant-primary:not(.button--disabled):active{background:var(--background-primary-active)}.button--disabled.button--variant-primary{background:var(--background-primary-disabled);color:var(--color-primary-disabled)}.button--variant-secondary{background:var(--background-secondary);text-align:center;border-radius:var(--radius-secondary);border:var(--border-width-secondary) solid currentColor;color:var(--color-secondary)}.button--variant-secondary:not(.button--disabled):hover{color:var(--color-secondary-hover)}.button--variant-secondary:not(.button--disabled):active{color:var(--color-secondary-active)}.button--disabled.button--variant-secondary{color:var(--color-secondary-disabled)}.button--variant-ghost{background:transparent;text-align:center;border-radius:var(--radius-ghost);border:var(--border-width-ghost) solid transparent;color:var(--color-ghost);padding-left:var(--spacing-x-ghost);padding-right:var(--spacing-x-ghost)}.button--variant-ghost:not(.button--disabled):hover{color:var(--color-ghost-hover)}.button--variant-ghost:not(.button--disabled):active{color:var(--color-ghost-active)}.button--disabled.button--variant-ghost{color:var(--color-ghost-disabled)}\";\nvar DEFAULT_ICON_SIZE = 24;\nvar buttonIconSizeMap = {\n  small: 16 // large: 24,\n\n};\n\nvar Button = /*#__PURE__*/function () {\n  function Button(hostRef) {\n    var _this = this;\n\n    _classCallCheck(this, Button);\n\n    registerInstance(this, hostRef);\n    /** (optional) The size of the button */\n\n    this.size = 'large';\n    /** (optional) Button variant */\n\n    this.variant = 'primary';\n    /** (optional) If `true`, the button is disabled */\n\n    this.disabled = false;\n    /** (optional) Set to `true` when the button contains only an icon */\n\n    this.iconOnly = false;\n    /** (optional) Icon position related to the label */\n\n    this.iconPosition = 'before';\n    /** (optional) The target attribute for the <a> tag */\n\n    this.target = '_self';\n    /**\n     * Hack to make the button behave has expected when inside forms.\n     * @see https://github.com/ionic-team/ionic-framework/blob/master/core/src/components/button/button.tsx#L155-L175\n     */\n\n    this.handleClick = function (ev) {\n      // No need to check for `disabled` because disabled buttons won't emit clicks\n      if (hasShadowDom(_this.hostElement)) {\n        var form = _this.hostElement.closest('form');\n\n        if (form) {\n          ev.preventDefault();\n          var fakeButton = document.createElement('button');\n\n          if (_this.type) {\n            fakeButton.type = _this.type;\n          }\n\n          fakeButton.style.display = 'none';\n          form.appendChild(fakeButton);\n          fakeButton.click();\n          fakeButton.remove();\n        }\n      }\n    };\n  }\n  /**\n   * Prevent clicks from being emitted from the host\n   * when the component is `disabled`.\n   */\n\n\n  _createClass(Button, [{\n    key: \"handleHostClick\",\n    value: function handleHostClick(event) {\n      if (this.disabled === true) {\n        event.stopImmediatePropagation();\n      }\n    }\n  }, {\n    key: \"setFocus\",\n    value: function () {\n      var _setFocus = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.focusableElement.focus();\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function setFocus() {\n        return _setFocus.apply(this, arguments);\n      }\n\n      return setFocus;\n    }()\n  }, {\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      this.setIconPositionProp();\n    }\n  }, {\n    key: \"componentDidLoad\",\n    value: function componentDidLoad() {\n      this.setChildrenIconSize();\n    }\n    /**\n     * Detect whether the last node is an element (not text).\n     * If so, it's probably an icon, so we set `iconPosition` to `after`.\n     */\n\n  }, {\n    key: \"setIconPositionProp\",\n    value: function setIconPositionProp() {\n      var nodes = Array.from(this.hostElement.childNodes).filter(function (node) {\n        // ignore empty text nodes, which are probably due to formatting\n        return !(node.nodeType === 3 && node.nodeValue.trim() === '');\n      });\n      var lastNode = nodes.length > 1 ? nodes[nodes.length - 1] : null;\n\n      if (!this.iconOnly && lastNode && isScaleIcon(lastNode)) {\n        this.iconPosition = 'after';\n      }\n    }\n    /**\n     * Set any children icon's size according the button size.\n     */\n\n  }, {\n    key: \"setChildrenIconSize\",\n    value: function setChildrenIconSize() {\n      var _this2 = this;\n\n      if (this.size != null && buttonIconSizeMap[this.size] != null) {\n        var icons = Array.from(this.hostElement.children).filter(isScaleIcon);\n        icons.forEach(function (icon) {\n          if (icon.size === DEFAULT_ICON_SIZE) {\n            icon.size = buttonIconSizeMap[_this2.size];\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var basePart = classnames('base', this.variant && \"variant-\".concat(this.variant), this.iconOnly && 'icon-only', !this.iconOnly && this.iconPosition, this.disabled && 'disabled');\n      return h(Host, null, this.styles && h(\"style\", null, this.styles), this.href ? h(\"a\", {\n        ref: function ref(el) {\n          return _this3.focusableElement = el;\n        },\n        class: this.getCssClassMap(),\n        href: this.href,\n        download: this.download,\n        target: this.target,\n        rel: this.target === '_blank' ? 'noopener noreferrer' : undefined,\n        part: basePart,\n        tabIndex: this.innerTabindex\n      }, h(\"slot\", null)) : h(\"button\", {\n        ref: function ref(el) {\n          return _this3.focusableElement = el;\n        },\n        class: this.getCssClassMap(),\n        onClick: this.handleClick,\n        disabled: this.disabled,\n        type: this.type,\n        part: basePart,\n        tabIndex: this.innerTabindex\n      }, h(\"slot\", null)));\n    }\n  }, {\n    key: \"getCssClassMap\",\n    value: function getCssClassMap() {\n      return classnames('button', this.size && \"button--size-\".concat(this.size), this.variant && \"button--variant-\".concat(this.variant), this.iconOnly && \"button--icon-only\", !this.iconOnly && this.iconPosition && \"button--icon-\".concat(this.iconPosition), this.disabled && !this.href && \"button--disabled\");\n    }\n  }, {\n    key: \"hostElement\",\n    get: function get() {\n      return getElement(this);\n    }\n  }]);\n\n  return Button;\n}();\n\nButton.style = buttonCss;\nexport { Button as scale_button };","map":null,"metadata":{},"sourceType":"module"}