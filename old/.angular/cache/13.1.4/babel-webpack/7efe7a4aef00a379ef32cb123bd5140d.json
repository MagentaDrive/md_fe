{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { r as registerInstance, c as createEvent, h, a as Host, g as getElement } from './index-f2e5998d.js';\nimport { e as emitEvent } from './utils-524c237e.js';\nimport { s as statusNote } from './status-note-d227f142.js';\nvar checkboxCss = \":host,scale-checkbox{--spacing-x:var(--scl-spacing-8);--transition:all var(--scl-motion-duration-fast)\\n    var(--scl-motion-easing-standard);--color-text:var(--scl-color-text-standard);--color-error:var(--scl-color-text-error);--color-disabled:var(--scl-color-background-disabled);--color-standard:var(--scl-color-background-standard);--background-disabled:var(--scl-color-white);--color-primary:var(--scl-color-primary, #e20074);--color-focus:var(--scl-color-focus);--color-primary-hover:var(--scl-color-primary-hover, #f90984);--color-primary-active:var(--scl-color-primary-active, #cb0068);--width-control:var(--scl-spacing-16);--height-control:var(--scl-spacing-16);--transition-control:var(--transition);--spacing-control:var(--scl-spacing-2);--spacing-left-control:var(--scl-spacing-4);--radius-control:var(--scl-radius-4);--border-width-control:var(--scl-spacing-1);--transition-helper-text:var(--transition);--spacing-left-helper-text:calc(var(--width-control) + var(--spacing-x));--font-size-helper-text:var(--scl-font-size-12);--font-weight-helper-text:var(--scl-font-weight-bold);--line-height-helper-text:var(--scl-font-line-height-133);--color-helper-text:var(--scl-color-blue-70);--font-weight-label:var(--scl-font-weight-medium);--transition-label:var(--transition);--color-icon-checked-disabled:var(--scl-color-grey-30);--color-icon-checked-active:var(--scl-color-white);--width-icon:var(--scl-spacing-12);--height-icon:var(--scl-spacing-12)}:host,scale-checkbox{display:flex;width:fit-content;padding:0 2px 0 2px;flex-direction:column;color:var(--color-text)}scale-checkbox [part='icon'],scale-checkbox [part='checkbox'],scale-checkbox [part='label'],scale-checkbox [part='helper-text']{transition:var(--transition)}scale-checkbox [part='input'],scale-checkbox.hideLabel [part='label']{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);white-space:nowrap;border-width:0}scale-checkbox [part='checkbox']{display:flex;flex:0 0 auto;justify-content:center;align-items:center;margin:var(--scl-spacing-2) 0;width:var(--width-control);height:var(--height-control);border-radius:var(--radius-control);border:var(--border-width-control) solid var(--color-text)}scale-checkbox [part='label']{font-weight:var(--font-weight-label);margin-left:var(--spacing-x)}scale-checkbox [part='icon']{width:var(--width-icon);height:var(--height-icon);color:var(--color-icon-checked-active)}scale-checkbox [part='icon'] svg{width:100%;height:100%}scale-checkbox [part='icon'] svg rect,scale-checkbox [part='icon'] svg path{stroke:currentColor;stroke-width:0.5px}scale-checkbox [part='container']{align-items:center;display:flex}scale-checkbox [part='helper-text']{font-size:var(--font-size-helper-text);font-weight:var(--font-weight-helper-text);color:var(--color-helper-text);padding-left:calc(\\n    var(--width-control) + var(--spacing-x) + var(--border-width-control) * 2\\n  )}scale-checkbox.checked [part='checkbox'],scale-checkbox.indeterminate [part='checkbox']{background:var(--color-primary);border-color:var(--color-primary);color:var(--color-icon-checked-active)}scale-checkbox [part='input']:focus~[part='container'] [part='checkbox']{box-shadow:0 0 0 var(--scl-spacing-2) var(--color-focus)}scale-checkbox [part='container']:hover{color:var(--color-primary-hover);cursor:pointer}scale-checkbox.checked [part='container']:hover [part='checkbox'],scale-checkbox.indeterminate [part='container']:hover [part='checkbox']{background:var(--color-primary-hover);border-color:var(--color-primary-hover)}scale-checkbox [part='input']:active~[part='container'],scale-checkbox [part='container']:active{color:var(--color-primary-active)}scale-checkbox [part='input']:active~[part='container'] [part='checkbox'],scale-checkbox.checked [part='container']:active [part='checkbox'],scale-checkbox.indeterminate [part='container']:active [part='checkbox']{background:var(--color-primary-active);border-color:var(--color-primary-active)}scale-checkbox.error [part='helper-text']{color:var(--color-error)}scale-checkbox.error [part='checkbox']{border-color:var(--color-error);box-shadow:0 0 0 var(--scl-spacing-1) var(--color-error)}scale-checkbox.disabled{cursor:not-allowed}scale-checkbox.disabled [part='container'],scale-checkbox.disabled [part='helper-text']{color:var(--color-disabled);pointer-events:none}scale-checkbox.checked.disabled [part='checkbox']{background:var(--color-disabled);border-color:var(--color-disabled)}scale-checkbox.checked.disabled [part='icon']{color:var(--color-icon-checked-disabled)}\";\nvar i = 0;\n\nvar Checkbox = /*#__PURE__*/function () {\n  function Checkbox(hostRef) {\n    var _this = this;\n\n    _classCallCheck(this, Checkbox);\n\n    registerInstance(this, hostRef);\n    this.scaleChange = createEvent(this, \"scale-change\", 7);\n    this.scaleChangeLegacy = createEvent(this, \"scaleChange\", 7);\n    /** (optional) Input label */\n\n    this.label = '';\n    /** (optional) Hides the specified label visually */\n\n    this.hideLabel = false;\n    /** @deprecated - invalid should replace status */\n\n    this.status = '';\n    /** (optional) Input status */\n\n    this.invalid = false;\n    /** (optional) Input disabled */\n\n    this.disabled = false;\n    /** (optional) Active switch */\n\n    this.checked = false;\n    /** (optional) indeterminate */\n\n    this.indeterminate = false;\n    /** (optional) Input value */\n\n    this.value = '';\n    this.id = i++;\n\n    this.handleChange = function (ev) {\n      if (_this.indeterminate) {\n        _this.indeterminate = false;\n        _this.checked = true;\n        ev.target.checked = true;\n      } else {\n        _this.checked = ev.target.checked;\n      }\n\n      var checked = _this.checked,\n          indeterminate = _this.indeterminate,\n          value = _this.value,\n          disabled = _this.disabled;\n      emitEvent(_this, 'scaleChange', {\n        checked: checked,\n        indeterminate: indeterminate,\n        value: value,\n        disabled: disabled\n      });\n    };\n  }\n\n  _createClass(Checkbox, [{\n    key: \"componentDidRender\",\n    value: function componentDidRender() {\n      if (this.status !== '') {\n        statusNote({\n          tag: 'deprecated',\n          message: 'Property \"status\" is deprecated. Please use the \"invalid\" property!',\n          type: 'warn',\n          source: this.host\n        });\n      }\n    }\n  }, {\n    key: \"handleDisabledChange\",\n    value: function handleDisabledChange() {\n      var checked = this.checked,\n          indeterminate = this.indeterminate,\n          value = this.value,\n          disabled = this.disabled;\n      emitEvent(this, 'scaleChange', {\n        checked: checked,\n        indeterminate: indeterminate,\n        value: value,\n        disabled: disabled\n      });\n    }\n  }, {\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      if (!this.inputId) {\n        this.inputId = 'input-checkbox-' + this.id;\n      }\n    }\n    /* Accessibility: rendering the icon *only* when checked, otherwise is always visible in HCM */\n\n  }, {\n    key: \"renderIcon\",\n    value: function renderIcon() {\n      if (this.indeterminate) {\n        return h(\"scale-icon-action-indeterminate\", {\n          part: \"icon\",\n          decorative: true\n        });\n      }\n\n      if (this.checked) {\n        return h(\"scale-icon-action-success\", {\n          part: \"icon\",\n          decorative: true\n        });\n      }\n    }\n  }, {\n    key: \"renderHelperText\",\n    value: function renderHelperText(text) {\n      if (this.helperText && this.helperText !== '') {\n        return h(\"div\", {\n          part: \"helper-text\",\n          id: text.id,\n          \"aria-live\": \"polite\",\n          \"aria-relevant\": \"additions removals\"\n        }, text.content);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var helperText = {\n        id: this.helperText ? \"helper-text-\".concat(this.id) : null,\n        content: this.helperText\n      };\n      return h(Host, {\n        class: {\n          checked: this.checked,\n          indeterminate: this.indeterminate,\n          disabled: this.disabled,\n          error: this.status === 'error' || this.invalid,\n          hideLabel: this.hideLabel\n        }\n      }, h(\"input\", {\n        type: \"checkbox\",\n        part: \"input\",\n        name: this.name || null,\n        id: this.inputId,\n        value: this.value,\n        checked: this.checked,\n        indeterminate: this.indeterminate,\n        \"aria-label\": this.ariaLabel,\n        \"aria-checked\": this.indeterminate ? 'mixed' : false,\n        \"aria-invalid\": this.status === 'error' || this.invalid,\n        \"aria-describedBy\": helperText.id,\n        disabled: this.disabled,\n        onChange: this.handleChange\n      }), h(\"label\", {\n        part: \"container\",\n        htmlFor: this.inputId\n      }, h(\"div\", {\n        part: \"checkbox\"\n      }, this.renderIcon()), h(\"div\", {\n        part: \"label\"\n      }, this.label || h(\"slot\", null))), this.renderHelperText(helperText));\n    }\n  }, {\n    key: \"host\",\n    get: function get() {\n      return getElement(this);\n    }\n  }], [{\n    key: \"watchers\",\n    get: function get() {\n      return {\n        \"disabled\": [\"handleDisabledChange\"]\n      };\n    }\n  }]);\n\n  return Checkbox;\n}();\n\nCheckbox.style = checkboxCss;\nvar iconCss = \"scale-icon{--display:inline-flex;--transition:all var(--scl-motion-duration-fast)\\n    var(--scl-motion-easing-standard);display:var(--display)}scale-icon path{transition:var(--transition)}@media screen and (forced-colors: active), (-ms-high-contrast: active){scale-icon svg,.scale-icon{color:white;stroke:white}}\";\n\nvar ActionIndeterminate = /*#__PURE__*/function () {\n  function ActionIndeterminate(hostRef) {\n    _classCallCheck(this, ActionIndeterminate);\n\n    registerInstance(this, hostRef);\n    /** (optional) The width and height in pixels */\n\n    this.size = 24;\n    /** (optional) Sets the icon color via the `fill` attribute */\n\n    this.fill = 'currentColor';\n    /** (optional) Alias for `fill` */\n\n    this.color = 'currentColor';\n    /** (optional) If `true`, the icon changes visually */\n\n    this.selected = false;\n    /** (optional) If `true` the SVG element will get `aria-hidden=\"true\"` */\n\n    this.decorative = false;\n  }\n\n  _createClass(ActionIndeterminate, [{\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      if (!this.hostElement.hasAttribute('styles')) {\n        this.hostElement.style.display = 'inline-flex';\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var ariaHidden = this.decorative ? {\n        'aria-hidden': 'true'\n      } : {};\n      return h(Host, null, h(\"svg\", Object.assign({\n        class: \"scale-icon\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: this.size,\n        height: this.size,\n        viewBox: \"0 0 24 24\"\n      }, ariaHidden), this.accessibilityTitle && h(\"title\", null, this.accessibilityTitle), h(\"g\", {\n        fill: this.fill === 'currentColor' ? this.color : this.fill\n      }, this.selected ? h(\"g\", null, h(\"rect\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"16\",\n        height: \"2\",\n        rx: \"0.75\",\n        \"fill-rule\": \"evenodd\",\n        x: \"4\",\n        y: \"11.25\"\n      })) : h(\"g\", null, h(\"rect\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"16\",\n        height: \"2\",\n        rx: \"0.75\",\n        \"fill-rule\": \"evenodd\",\n        x: \"4\",\n        y: \"11.25\"\n      })))));\n    }\n  }, {\n    key: \"hostElement\",\n    get: function get() {\n      return getElement(this);\n    }\n  }]);\n\n  return ActionIndeterminate;\n}();\n\nActionIndeterminate.style = iconCss;\nexport { Checkbox as scale_checkbox, ActionIndeterminate as scale_icon_action_indeterminate };","map":null,"metadata":{},"sourceType":"module"}