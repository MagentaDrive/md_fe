{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\assertThisInitialized.js\";\nimport _inherits from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\inherits.js\";\nimport _createSuper from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createSuper.js\";\nimport _wrapNativeSuper from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\wrapNativeSuper.js\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport _toConsumableArray from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\toConsumableArray.js\";\nimport _slicedToArray from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport { N as NAMESPACE, r as registerInstance, c as createEvent$1, h as h$1, a as Host$1, g as getElement$1 } from './index-f2e5998d.js';\nimport { s as statusNote } from './status-note-d227f142.js';\nimport { c as classnames } from './index-713f92a5.js';\nimport { e as emitEvent$1 } from './utils-524c237e.js';\nvar scopeId;\nvar contentRef;\nvar hostTagName;\nvar useNativeShadowDom = false;\nvar checkSlotFallbackVisibility = false;\nvar checkSlotRelocate = false;\nvar isSvgMode = false;\nvar queuePending = false;\nvar win = typeof window !== 'undefined' ? window : {};\nvar doc = win.document || {\n  head: {}\n};\nvar plt = {\n  $flags$: 0,\n  $resourcesUrl$: '',\n  jmp: function jmp(h) {\n    return h();\n  },\n  raf: function raf(h) {\n    return requestAnimationFrame(h);\n  },\n  ael: function ael(el, eventName, listener, opts) {\n    return el.addEventListener(eventName, listener, opts);\n  },\n  rel: function rel(el, eventName, listener, opts) {\n    return el.removeEventListener(eventName, listener, opts);\n  },\n  ce: function ce(eventName, opts) {\n    return new CustomEvent(eventName, opts);\n  }\n};\nvar supportsShadow = true;\n\nvar promiseResolve = function promiseResolve(v) {\n  return Promise.resolve(v);\n};\n\nvar supportsConstructibleStylesheets = /*@__PURE__*/function () {\n  try {\n    new CSSStyleSheet();\n    return typeof new CSSStyleSheet().replace === 'function';\n  } catch (e) {}\n\n  return false;\n}();\n\nvar addHostEventListeners = function addHostEventListeners(elm, hostRef, listeners, attachParentListeners) {\n  if (listeners) {\n    listeners.map(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 3),\n          flags = _ref2[0],\n          name = _ref2[1],\n          method = _ref2[2];\n\n      var target = getHostListenerTarget(elm, flags);\n      var handler = hostListenerProxy(hostRef, method);\n      var opts = hostListenerOpts(flags);\n      plt.ael(target, name, handler, opts);\n      (hostRef.$rmListeners$ = hostRef.$rmListeners$ || []).push(function () {\n        return plt.rel(target, name, handler, opts);\n      });\n    });\n  }\n};\n\nvar hostListenerProxy = function hostListenerProxy(hostRef, methodName) {\n  return function (ev) {\n    try {\n      {\n        if (hostRef.$flags$ & 256\n        /* isListenReady */\n        ) {\n          // instance is ready, let's call it's member method for this event\n          hostRef.$lazyInstance$[methodName](ev);\n        } else {\n          (hostRef.$queuedListeners$ = hostRef.$queuedListeners$ || []).push([methodName, ev]);\n        }\n      }\n    } catch (e) {\n      consoleError(e);\n    }\n  };\n};\n\nvar getHostListenerTarget = function getHostListenerTarget(elm, flags) {\n  if (flags & 4\n  /* TargetDocument */\n  ) return doc;\n  if (flags & 8\n  /* TargetWindow */\n  ) return win;\n  return elm;\n}; // prettier-ignore\n\n\nvar hostListenerOpts = function hostListenerOpts(flags) {\n  return (flags & 2\n  /* Capture */\n  ) !== 0;\n};\n\nvar CONTENT_REF_ID = 'r';\nvar ORG_LOCATION_ID = 'o';\nvar SLOT_NODE_ID = 's';\nvar TEXT_NODE_ID = 't';\nvar HYDRATE_ID = 's-id';\nvar HYDRATED_STYLE_ID = 'sty-id';\nvar HYDRATE_CHILD_ID = 'c-id';\nvar XLINK_NS = 'http://www.w3.org/1999/xlink';\n\nvar createTime = function createTime(fnName) {\n  var tagName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  {\n    return function () {\n      return;\n    };\n  }\n};\n\nvar uniqueTime = function uniqueTime(key, measureText) {\n  {\n    return function () {\n      return;\n    };\n  }\n};\n\nvar rootAppliedStyles = new WeakMap();\n\nvar registerStyle = function registerStyle(scopeId, cssText, allowCS) {\n  var style = styles.get(scopeId);\n\n  if (supportsConstructibleStylesheets && allowCS) {\n    style = style || new CSSStyleSheet();\n    style.replace(cssText);\n  } else {\n    style = cssText;\n  }\n\n  styles.set(scopeId, style);\n};\n\nvar addStyle = function addStyle(styleContainerNode, cmpMeta, mode, hostElm) {\n  var scopeId = getScopeId(cmpMeta);\n  var style = styles.get(scopeId); // if an element is NOT connected then getRootNode() will return the wrong root node\n  // so the fallback is to always use the document for the root node in those cases\n\n  styleContainerNode = styleContainerNode.nodeType === 11\n  /* DocumentFragment */\n  ? styleContainerNode : doc;\n\n  if (style) {\n    if (typeof style === 'string') {\n      styleContainerNode = styleContainerNode.head || styleContainerNode;\n      var appliedStyles = rootAppliedStyles.get(styleContainerNode);\n      var styleElm;\n\n      if (!appliedStyles) {\n        rootAppliedStyles.set(styleContainerNode, appliedStyles = new Set());\n      }\n\n      if (!appliedStyles.has(scopeId)) {\n        if (styleContainerNode.host && (styleElm = styleContainerNode.querySelector(\"[\".concat(HYDRATED_STYLE_ID, \"=\\\"\").concat(scopeId, \"\\\"]\")))) {\n          // This is only happening on native shadow-dom, do not needs CSS var shim\n          styleElm.innerHTML = style;\n        } else {\n          {\n            styleElm = doc.createElement('style');\n            styleElm.innerHTML = style;\n          }\n          styleContainerNode.insertBefore(styleElm, styleContainerNode.querySelector('link'));\n        }\n\n        if (appliedStyles) {\n          appliedStyles.add(scopeId);\n        }\n      }\n    } else if (!styleContainerNode.adoptedStyleSheets.includes(style)) {\n      styleContainerNode.adoptedStyleSheets = [].concat(_toConsumableArray(styleContainerNode.adoptedStyleSheets), [style]);\n    }\n  }\n\n  return scopeId;\n};\n\nvar attachStyles = function attachStyles(hostRef) {\n  var cmpMeta = hostRef.$cmpMeta$;\n  var elm = hostRef.$hostElement$;\n  var flags = cmpMeta.$flags$;\n  var endAttachStyles = createTime('attachStyles', cmpMeta.$tagName$);\n  var scopeId = addStyle(elm.shadowRoot ? elm.shadowRoot : elm.getRootNode(), cmpMeta);\n\n  if (flags & 10\n  /* needsScopedEncapsulation */\n  ) {\n    // only required when we're NOT using native shadow dom (slot)\n    // or this browser doesn't support native shadow dom\n    // and this host element was NOT created with SSR\n    // let's pick out the inner content for slot projection\n    // create a node to represent where the original\n    // content was first placed, which is useful later on\n    // DOM WRITE!!\n    elm['s-sc'] = scopeId;\n    elm.classList.add(scopeId + '-h');\n  }\n\n  endAttachStyles();\n};\n\nvar getScopeId = function getScopeId(cmp, mode) {\n  return 'sc-' + cmp.$tagName$;\n};\n/**\n * Default style mode id\n */\n\n/**\n * Reusable empty obj/array\n * Don't add values to these!!\n */\n\n\nvar EMPTY_OBJ = {};\n/**\n * Namespaces\n */\n\nvar SVG_NS = 'http://www.w3.org/2000/svg';\nvar HTML_NS = 'http://www.w3.org/1999/xhtml';\n\nvar isDef = function isDef(v) {\n  return v != null;\n};\n\nvar isComplexType = function isComplexType(o) {\n  // https://jsperf.com/typeof-fn-object/5\n  o = typeof o;\n  return o === 'object' || o === 'function';\n};\n/**\n * Production h() function based on Preact by\n * Jason Miller (@developit)\n * Licensed under the MIT License\n * https://github.com/developit/preact/blob/master/LICENSE\n *\n * Modified for Stencil's compiler and vdom\n */\n// const stack: any[] = [];\n// export function h(nodeName: string | d.FunctionalComponent, vnodeData: d.PropsType, child?: d.ChildType): d.VNode;\n// export function h(nodeName: string | d.FunctionalComponent, vnodeData: d.PropsType, ...children: d.ChildType[]): d.VNode;\n\n\nvar h = function h(nodeName, vnodeData) {\n  var child = null;\n  var key = null;\n  var slotName = null;\n  var simple = false;\n  var lastSimple = false;\n  var vNodeChildren = [];\n\n  var walk = function walk(c) {\n    for (var _i = 0; _i < c.length; _i++) {\n      child = c[_i];\n\n      if (Array.isArray(child)) {\n        walk(child);\n      } else if (child != null && typeof child !== 'boolean') {\n        if (simple = typeof nodeName !== 'function' && !isComplexType(child)) {\n          child = String(child);\n        }\n\n        if (simple && lastSimple) {\n          // If the previous child was simple (string), we merge both\n          vNodeChildren[vNodeChildren.length - 1].$text$ += child;\n        } else {\n          // Append a new vNode, if it's text, we create a text vNode\n          vNodeChildren.push(simple ? newVNode(null, child) : child);\n        }\n\n        lastSimple = simple;\n      }\n    }\n  };\n\n  for (var _len = arguments.length, children = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    children[_key - 2] = arguments[_key];\n  }\n\n  walk(children);\n\n  if (vnodeData) {\n    // normalize class / classname attributes\n    if (vnodeData.key) {\n      key = vnodeData.key;\n    }\n\n    if (vnodeData.name) {\n      slotName = vnodeData.name;\n    }\n\n    {\n      var classData = vnodeData.className || vnodeData.class;\n\n      if (classData) {\n        vnodeData.class = typeof classData !== 'object' ? classData : Object.keys(classData).filter(function (k) {\n          return classData[k];\n        }).join(' ');\n      }\n    }\n  }\n\n  if (typeof nodeName === 'function') {\n    // nodeName is a functional component\n    return nodeName(vnodeData === null ? {} : vnodeData, vNodeChildren, vdomFnUtils);\n  }\n\n  var vnode = newVNode(nodeName, null);\n  vnode.$attrs$ = vnodeData;\n\n  if (vNodeChildren.length > 0) {\n    vnode.$children$ = vNodeChildren;\n  }\n\n  {\n    vnode.$key$ = key;\n  }\n  {\n    vnode.$name$ = slotName;\n  }\n  return vnode;\n};\n\nvar newVNode = function newVNode(tag, text) {\n  var vnode = {\n    $flags$: 0,\n    $tag$: tag,\n    $text$: text,\n    $elm$: null,\n    $children$: null\n  };\n  {\n    vnode.$attrs$ = null;\n  }\n  {\n    vnode.$key$ = null;\n  }\n  {\n    vnode.$name$ = null;\n  }\n  return vnode;\n};\n\nvar Host = {};\n\nvar isHost = function isHost(node) {\n  return node && node.$tag$ === Host;\n};\n\nvar vdomFnUtils = {\n  forEach: function forEach(children, cb) {\n    return children.map(convertToPublic).forEach(cb);\n  },\n  map: function map(children, cb) {\n    return children.map(convertToPublic).map(cb).map(convertToPrivate);\n  }\n};\n\nvar convertToPublic = function convertToPublic(node) {\n  return {\n    vattrs: node.$attrs$,\n    vchildren: node.$children$,\n    vkey: node.$key$,\n    vname: node.$name$,\n    vtag: node.$tag$,\n    vtext: node.$text$\n  };\n};\n\nvar convertToPrivate = function convertToPrivate(node) {\n  if (typeof node.vtag === 'function') {\n    var vnodeData = Object.assign({}, node.vattrs);\n\n    if (node.vkey) {\n      vnodeData.key = node.vkey;\n    }\n\n    if (node.vname) {\n      vnodeData.name = node.vname;\n    }\n\n    return h.apply(void 0, [node.vtag, vnodeData].concat(_toConsumableArray(node.vchildren || [])));\n  }\n\n  var vnode = newVNode(node.vtag, node.vtext);\n  vnode.$attrs$ = node.vattrs;\n  vnode.$children$ = node.vchildren;\n  vnode.$key$ = node.vkey;\n  vnode.$name$ = node.vname;\n  return vnode;\n};\n/**\n * Production setAccessor() function based on Preact by\n * Jason Miller (@developit)\n * Licensed under the MIT License\n * https://github.com/developit/preact/blob/master/LICENSE\n *\n * Modified for Stencil's compiler and vdom\n */\n\n\nvar setAccessor = function setAccessor(elm, memberName, oldValue, newValue, isSvg, flags) {\n  if (oldValue !== newValue) {\n    var isProp = isMemberInElement(elm, memberName);\n    var ln = memberName.toLowerCase();\n\n    if (memberName === 'class') {\n      var classList = elm.classList;\n      var oldClasses = parseClassList(oldValue);\n      var newClasses = parseClassList(newValue);\n      classList.remove.apply(classList, _toConsumableArray(oldClasses.filter(function (c) {\n        return c && !newClasses.includes(c);\n      })));\n      classList.add.apply(classList, _toConsumableArray(newClasses.filter(function (c) {\n        return c && !oldClasses.includes(c);\n      })));\n    } else if (memberName === 'style') {\n      // update style attribute, css properties and values\n      {\n        for (var prop in oldValue) {\n          if (!newValue || newValue[prop] == null) {\n            if (prop.includes('-')) {\n              elm.style.removeProperty(prop);\n            } else {\n              elm.style[prop] = '';\n            }\n          }\n        }\n      }\n\n      for (var _prop in newValue) {\n        if (!oldValue || newValue[_prop] !== oldValue[_prop]) {\n          if (_prop.includes('-')) {\n            elm.style.setProperty(_prop, newValue[_prop]);\n          } else {\n            elm.style[_prop] = newValue[_prop];\n          }\n        }\n      }\n    } else if (memberName === 'key') ;else if (memberName === 'ref') {\n      // minifier will clean this up\n      if (newValue) {\n        newValue(elm);\n      }\n    } else if (!isProp && memberName[0] === 'o' && memberName[1] === 'n') {\n      // Event Handlers\n      // so if the member name starts with \"on\" and the 3rd characters is\n      // a capital letter, and it's not already a member on the element,\n      // then we're assuming it's an event listener\n      if (memberName[2] === '-') {\n        // on- prefixed events\n        // allows to be explicit about the dom event to listen without any magic\n        // under the hood:\n        // <my-cmp on-click> // listens for \"click\"\n        // <my-cmp on-Click> // listens for \"Click\"\n        // <my-cmp on-ionChange> // listens for \"ionChange\"\n        // <my-cmp on-EVENTS> // listens for \"EVENTS\"\n        memberName = memberName.slice(3);\n      } else if (isMemberInElement(win, ln)) {\n        // standard event\n        // the JSX attribute could have been \"onMouseOver\" and the\n        // member name \"onmouseover\" is on the window's prototype\n        // so let's add the listener \"mouseover\", which is all lowercased\n        memberName = ln.slice(2);\n      } else {\n        // custom event\n        // the JSX attribute could have been \"onMyCustomEvent\"\n        // so let's trim off the \"on\" prefix and lowercase the first character\n        // and add the listener \"myCustomEvent\"\n        // except for the first character, we keep the event name case\n        memberName = ln[2] + memberName.slice(3);\n      }\n\n      if (oldValue) {\n        plt.rel(elm, memberName, oldValue, false);\n      }\n\n      if (newValue) {\n        plt.ael(elm, memberName, newValue, false);\n      }\n    } else {\n      // Set property if it exists and it's not a SVG\n      var isComplex = isComplexType(newValue);\n\n      if ((isProp || isComplex && newValue !== null) && !isSvg) {\n        try {\n          if (!elm.tagName.includes('-')) {\n            var n = newValue == null ? '' : newValue; // Workaround for Safari, moving the <input> caret when re-assigning the same valued\n\n            if (memberName === 'list') {\n              isProp = false; // tslint:disable-next-line: triple-equals\n            } else if (oldValue == null || elm[memberName] != n) {\n              elm[memberName] = n;\n            }\n          } else {\n            elm[memberName] = newValue;\n          }\n        } catch (e) {}\n      }\n      /**\n       * Need to manually update attribute if:\n       * - memberName is not an attribute\n       * - if we are rendering the host element in order to reflect attribute\n       * - if it's a SVG, since properties might not work in <svg>\n       * - if the newValue is null/undefined or 'false'.\n       */\n\n\n      var xlink = false;\n      {\n        if (ln !== (ln = ln.replace(/^xlink\\:?/, ''))) {\n          memberName = ln;\n          xlink = true;\n        }\n      }\n\n      if (newValue == null || newValue === false) {\n        if (newValue !== false || elm.getAttribute(memberName) === '') {\n          if (xlink) {\n            elm.removeAttributeNS(XLINK_NS, memberName);\n          } else {\n            elm.removeAttribute(memberName);\n          }\n        }\n      } else if ((!isProp || flags & 4\n      /* isHost */\n      || isSvg) && !isComplex) {\n        newValue = newValue === true ? '' : newValue;\n\n        if (xlink) {\n          elm.setAttributeNS(XLINK_NS, memberName, newValue);\n        } else {\n          elm.setAttribute(memberName, newValue);\n        }\n      }\n    }\n  }\n};\n\nvar parseClassListRegex = /\\s/;\n\nvar parseClassList = function parseClassList(value) {\n  return !value ? [] : value.split(parseClassListRegex);\n};\n\nvar updateElement = function updateElement(oldVnode, newVnode, isSvgMode, memberName) {\n  // if the element passed in is a shadow root, which is a document fragment\n  // then we want to be adding attrs/props to the shadow root's \"host\" element\n  // if it's not a shadow root, then we add attrs/props to the same element\n  var elm = newVnode.$elm$.nodeType === 11\n  /* DocumentFragment */\n  && newVnode.$elm$.host ? newVnode.$elm$.host : newVnode.$elm$;\n  var oldVnodeAttrs = oldVnode && oldVnode.$attrs$ || EMPTY_OBJ;\n  var newVnodeAttrs = newVnode.$attrs$ || EMPTY_OBJ;\n  {\n    // remove attributes no longer present on the vnode by setting them to undefined\n    for (memberName in oldVnodeAttrs) {\n      if (!(memberName in newVnodeAttrs)) {\n        setAccessor(elm, memberName, oldVnodeAttrs[memberName], undefined, isSvgMode, newVnode.$flags$);\n      }\n    }\n  } // add new & update changed attributes\n\n  for (memberName in newVnodeAttrs) {\n    setAccessor(elm, memberName, oldVnodeAttrs[memberName], newVnodeAttrs[memberName], isSvgMode, newVnode.$flags$);\n  }\n};\n\nvar createElm = function createElm(oldParentVNode, newParentVNode, childIndex, parentElm) {\n  // tslint:disable-next-line: prefer-const\n  var newVNode = newParentVNode.$children$[childIndex];\n  var i = 0;\n  var elm;\n  var childNode;\n  var oldVNode;\n\n  if (!useNativeShadowDom) {\n    // remember for later we need to check to relocate nodes\n    checkSlotRelocate = true;\n\n    if (newVNode.$tag$ === 'slot') {\n      if (scopeId) {\n        // scoped css needs to add its scoped id to the parent element\n        parentElm.classList.add(scopeId + '-s');\n      }\n\n      newVNode.$flags$ |= newVNode.$children$ ? // slot element has fallback content\n      2\n      /* isSlotFallback */\n      : // slot element does not have fallback content\n      1\n      /* isSlotReference */\n      ;\n    }\n  }\n\n  if (newVNode.$text$ !== null) {\n    // create text node\n    elm = newVNode.$elm$ = doc.createTextNode(newVNode.$text$);\n  } else if (newVNode.$flags$ & 1\n  /* isSlotReference */\n  ) {\n    // create a slot reference node\n    elm = newVNode.$elm$ = doc.createTextNode('');\n  } else {\n    if (!isSvgMode) {\n      isSvgMode = newVNode.$tag$ === 'svg';\n    } // create element\n\n\n    elm = newVNode.$elm$ = doc.createElementNS(isSvgMode ? SVG_NS : HTML_NS, newVNode.$flags$ & 2\n    /* isSlotFallback */\n    ? 'slot-fb' : newVNode.$tag$);\n\n    if (isSvgMode && newVNode.$tag$ === 'foreignObject') {\n      isSvgMode = false;\n    } // add css classes, attrs, props, listeners, etc.\n\n\n    {\n      updateElement(null, newVNode, isSvgMode);\n    }\n\n    if (isDef(scopeId) && elm['s-si'] !== scopeId) {\n      // if there is a scopeId and this is the initial render\n      // then let's add the scopeId as a css class\n      elm.classList.add(elm['s-si'] = scopeId);\n    }\n\n    if (newVNode.$children$) {\n      for (i = 0; i < newVNode.$children$.length; ++i) {\n        // create the node\n        childNode = createElm(oldParentVNode, newVNode, i, elm); // return node could have been null\n\n        if (childNode) {\n          // append our new node\n          elm.appendChild(childNode);\n        }\n      }\n    }\n\n    {\n      if (newVNode.$tag$ === 'svg') {\n        // Only reset the SVG context when we're exiting <svg> element\n        isSvgMode = false;\n      } else if (elm.tagName === 'foreignObject') {\n        // Reenter SVG context when we're exiting <foreignObject> element\n        isSvgMode = true;\n      }\n    }\n  }\n\n  {\n    elm['s-hn'] = hostTagName;\n\n    if (newVNode.$flags$ & (2\n    /* isSlotFallback */\n    | 1\n    /* isSlotReference */\n    )) {\n      // remember the content reference comment\n      elm['s-sr'] = true; // remember the content reference comment\n\n      elm['s-cr'] = contentRef; // remember the slot name, or empty string for default slot\n\n      elm['s-sn'] = newVNode.$name$ || ''; // check if we've got an old vnode for this slot\n\n      oldVNode = oldParentVNode && oldParentVNode.$children$ && oldParentVNode.$children$[childIndex];\n\n      if (oldVNode && oldVNode.$tag$ === newVNode.$tag$ && oldParentVNode.$elm$) {\n        // we've got an old slot vnode and the wrapper is being replaced\n        // so let's move the old slot content back to it's original location\n        putBackInOriginalLocation(oldParentVNode.$elm$, false);\n      }\n    }\n  }\n  return elm;\n};\n\nvar putBackInOriginalLocation = function putBackInOriginalLocation(parentElm, recursive) {\n  plt.$flags$ |= 1\n  /* isTmpDisconnected */\n  ;\n  var oldSlotChildNodes = parentElm.childNodes;\n\n  for (var _i2 = oldSlotChildNodes.length - 1; _i2 >= 0; _i2--) {\n    var childNode = oldSlotChildNodes[_i2];\n\n    if (childNode['s-hn'] !== hostTagName && childNode['s-ol']) {\n      // // this child node in the old element is from another component\n      // // remove this node from the old slot's parent\n      // childNode.remove();\n      // and relocate it back to it's original location\n      parentReferenceNode(childNode).insertBefore(childNode, referenceNode(childNode)); // remove the old original location comment entirely\n      // later on the patch function will know what to do\n      // and move this to the correct spot in need be\n\n      childNode['s-ol'].remove();\n      childNode['s-ol'] = undefined;\n      checkSlotRelocate = true;\n    }\n\n    if (recursive) {\n      putBackInOriginalLocation(childNode, recursive);\n    }\n  }\n\n  plt.$flags$ &= ~1\n  /* isTmpDisconnected */\n  ;\n};\n\nvar addVnodes = function addVnodes(parentElm, before, parentVNode, vnodes, startIdx, endIdx) {\n  var containerElm = parentElm['s-cr'] && parentElm['s-cr'].parentNode || parentElm;\n  var childNode;\n\n  if (containerElm.shadowRoot && containerElm.tagName === hostTagName) {\n    containerElm = containerElm.shadowRoot;\n  }\n\n  for (; startIdx <= endIdx; ++startIdx) {\n    if (vnodes[startIdx]) {\n      childNode = createElm(null, parentVNode, startIdx, parentElm);\n\n      if (childNode) {\n        vnodes[startIdx].$elm$ = childNode;\n        containerElm.insertBefore(childNode, referenceNode(before));\n      }\n    }\n  }\n};\n\nvar removeVnodes = function removeVnodes(vnodes, startIdx, endIdx, vnode, elm) {\n  for (; startIdx <= endIdx; ++startIdx) {\n    if (vnode = vnodes[startIdx]) {\n      elm = vnode.$elm$;\n      callNodeRefs(vnode);\n      {\n        // we're removing this element\n        // so it's possible we need to show slot fallback content now\n        checkSlotFallbackVisibility = true;\n\n        if (elm['s-ol']) {\n          // remove the original location comment\n          elm['s-ol'].remove();\n        } else {\n          // it's possible that child nodes of the node\n          // that's being removed are slot nodes\n          putBackInOriginalLocation(elm, true);\n        }\n      } // remove the vnode's element from the dom\n\n      elm.remove();\n    }\n  }\n};\n\nvar updateChildren = function updateChildren(parentElm, oldCh, newVNode, newCh) {\n  var oldStartIdx = 0;\n  var newStartIdx = 0;\n  var idxInOld = 0;\n  var i = 0;\n  var oldEndIdx = oldCh.length - 1;\n  var oldStartVnode = oldCh[0];\n  var oldEndVnode = oldCh[oldEndIdx];\n  var newEndIdx = newCh.length - 1;\n  var newStartVnode = newCh[0];\n  var newEndVnode = newCh[newEndIdx];\n  var node;\n  var elmToMove;\n\n  while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n    if (oldStartVnode == null) {\n      // Vnode might have been moved left\n      oldStartVnode = oldCh[++oldStartIdx];\n    } else if (oldEndVnode == null) {\n      oldEndVnode = oldCh[--oldEndIdx];\n    } else if (newStartVnode == null) {\n      newStartVnode = newCh[++newStartIdx];\n    } else if (newEndVnode == null) {\n      newEndVnode = newCh[--newEndIdx];\n    } else if (isSameVnode(oldStartVnode, newStartVnode)) {\n      patch(oldStartVnode, newStartVnode);\n      oldStartVnode = oldCh[++oldStartIdx];\n      newStartVnode = newCh[++newStartIdx];\n    } else if (isSameVnode(oldEndVnode, newEndVnode)) {\n      patch(oldEndVnode, newEndVnode);\n      oldEndVnode = oldCh[--oldEndIdx];\n      newEndVnode = newCh[--newEndIdx];\n    } else if (isSameVnode(oldStartVnode, newEndVnode)) {\n      // Vnode moved right\n      if (oldStartVnode.$tag$ === 'slot' || newEndVnode.$tag$ === 'slot') {\n        putBackInOriginalLocation(oldStartVnode.$elm$.parentNode, false);\n      }\n\n      patch(oldStartVnode, newEndVnode);\n      parentElm.insertBefore(oldStartVnode.$elm$, oldEndVnode.$elm$.nextSibling);\n      oldStartVnode = oldCh[++oldStartIdx];\n      newEndVnode = newCh[--newEndIdx];\n    } else if (isSameVnode(oldEndVnode, newStartVnode)) {\n      // Vnode moved left\n      if (oldStartVnode.$tag$ === 'slot' || newEndVnode.$tag$ === 'slot') {\n        putBackInOriginalLocation(oldEndVnode.$elm$.parentNode, false);\n      }\n\n      patch(oldEndVnode, newStartVnode);\n      parentElm.insertBefore(oldEndVnode.$elm$, oldStartVnode.$elm$);\n      oldEndVnode = oldCh[--oldEndIdx];\n      newStartVnode = newCh[++newStartIdx];\n    } else {\n      // createKeyToOldIdx\n      idxInOld = -1;\n      {\n        for (i = oldStartIdx; i <= oldEndIdx; ++i) {\n          if (oldCh[i] && oldCh[i].$key$ !== null && oldCh[i].$key$ === newStartVnode.$key$) {\n            idxInOld = i;\n            break;\n          }\n        }\n      }\n\n      if (idxInOld >= 0) {\n        elmToMove = oldCh[idxInOld];\n\n        if (elmToMove.$tag$ !== newStartVnode.$tag$) {\n          node = createElm(oldCh && oldCh[newStartIdx], newVNode, idxInOld, parentElm);\n        } else {\n          patch(elmToMove, newStartVnode);\n          oldCh[idxInOld] = undefined;\n          node = elmToMove.$elm$;\n        }\n\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        // new element\n        node = createElm(oldCh && oldCh[newStartIdx], newVNode, newStartIdx, parentElm);\n        newStartVnode = newCh[++newStartIdx];\n      }\n\n      if (node) {\n        {\n          parentReferenceNode(oldStartVnode.$elm$).insertBefore(node, referenceNode(oldStartVnode.$elm$));\n        }\n      }\n    }\n  }\n\n  if (oldStartIdx > oldEndIdx) {\n    addVnodes(parentElm, newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].$elm$, newVNode, newCh, newStartIdx, newEndIdx);\n  } else if (newStartIdx > newEndIdx) {\n    removeVnodes(oldCh, oldStartIdx, oldEndIdx);\n  }\n};\n\nvar isSameVnode = function isSameVnode(vnode1, vnode2) {\n  // compare if two vnode to see if they're \"technically\" the same\n  // need to have the same element tag, and same key to be the same\n  if (vnode1.$tag$ === vnode2.$tag$) {\n    if (vnode1.$tag$ === 'slot') {\n      return vnode1.$name$ === vnode2.$name$;\n    }\n\n    {\n      return vnode1.$key$ === vnode2.$key$;\n    }\n  }\n\n  return false;\n};\n\nvar referenceNode = function referenceNode(node) {\n  // this node was relocated to a new location in the dom\n  // because of some other component's slot\n  // but we still have an html comment in place of where\n  // it's original location was according to it's original vdom\n  return node && node['s-ol'] || node;\n};\n\nvar parentReferenceNode = function parentReferenceNode(node) {\n  return (node['s-ol'] ? node['s-ol'] : node).parentNode;\n};\n\nvar patch = function patch(oldVNode, newVNode) {\n  var elm = newVNode.$elm$ = oldVNode.$elm$;\n  var oldChildren = oldVNode.$children$;\n  var newChildren = newVNode.$children$;\n  var tag = newVNode.$tag$;\n  var text = newVNode.$text$;\n  var defaultHolder;\n\n  if (text === null) {\n    {\n      // test if we're rendering an svg element, or still rendering nodes inside of one\n      // only add this to the when the compiler sees we're using an svg somewhere\n      isSvgMode = tag === 'svg' ? true : tag === 'foreignObject' ? false : isSvgMode;\n    } // element node\n\n    {\n      if (tag === 'slot') ;else {\n        // either this is the first render of an element OR it's an update\n        // AND we already know it's possible it could have changed\n        // this updates the element's css classes, attrs, props, listeners, etc.\n        updateElement(oldVNode, newVNode, isSvgMode);\n      }\n    }\n\n    if (oldChildren !== null && newChildren !== null) {\n      // looks like there's child vnodes for both the old and new vnodes\n      updateChildren(elm, oldChildren, newVNode, newChildren);\n    } else if (newChildren !== null) {\n      // no old child vnodes, but there are new child vnodes to add\n      if (oldVNode.$text$ !== null) {\n        // the old vnode was text, so be sure to clear it out\n        elm.textContent = '';\n      } // add the new vnode children\n\n\n      addVnodes(elm, null, newVNode, newChildren, 0, newChildren.length - 1);\n    } else if (oldChildren !== null) {\n      // no new child vnodes, but there are old child vnodes to remove\n      removeVnodes(oldChildren, 0, oldChildren.length - 1);\n    }\n\n    if (isSvgMode && tag === 'svg') {\n      isSvgMode = false;\n    }\n  } else if (defaultHolder = elm['s-cr']) {\n    // this element has slotted content\n    defaultHolder.parentNode.textContent = text;\n  } else if (oldVNode.$text$ !== text) {\n    // update the text content for the text only vnode\n    // and also only if the text is different than before\n    elm.data = text;\n  }\n};\n\nvar updateFallbackSlotVisibility = function updateFallbackSlotVisibility(elm) {\n  // tslint:disable-next-line: prefer-const\n  var childNodes = elm.childNodes;\n  var childNode;\n  var i;\n  var ilen;\n  var j;\n  var slotNameAttr;\n  var nodeType;\n\n  for (i = 0, ilen = childNodes.length; i < ilen; i++) {\n    childNode = childNodes[i];\n\n    if (childNode.nodeType === 1\n    /* ElementNode */\n    ) {\n      if (childNode['s-sr']) {\n        // this is a slot fallback node\n        // get the slot name for this slot reference node\n        slotNameAttr = childNode['s-sn']; // by default always show a fallback slot node\n        // then hide it if there are other slots in the light dom\n\n        childNode.hidden = false;\n\n        for (j = 0; j < ilen; j++) {\n          nodeType = childNodes[j].nodeType;\n\n          if (childNodes[j]['s-hn'] !== childNode['s-hn'] || slotNameAttr !== '') {\n            // this sibling node is from a different component OR is a named fallback slot node\n            if (nodeType === 1\n            /* ElementNode */\n            && slotNameAttr === childNodes[j].getAttribute('slot')) {\n              childNode.hidden = true;\n              break;\n            }\n          } else {\n            // this is a default fallback slot node\n            // any element or text node (with content)\n            // should hide the default fallback slot node\n            if (nodeType === 1\n            /* ElementNode */\n            || nodeType === 3\n            /* TextNode */\n            && childNodes[j].textContent.trim() !== '') {\n              childNode.hidden = true;\n              break;\n            }\n          }\n        }\n      } // keep drilling down\n\n\n      updateFallbackSlotVisibility(childNode);\n    }\n  }\n};\n\nvar relocateNodes = [];\n\nvar relocateSlotContent = function relocateSlotContent(elm) {\n  // tslint:disable-next-line: prefer-const\n  var childNode;\n  var node;\n  var hostContentNodes;\n  var slotNameAttr;\n  var relocateNodeData;\n  var j;\n  var i = 0;\n  var childNodes = elm.childNodes;\n  var ilen = childNodes.length;\n\n  for (; i < ilen; i++) {\n    childNode = childNodes[i];\n\n    if (childNode['s-sr'] && (node = childNode['s-cr']) && node.parentNode) {\n      // first got the content reference comment node\n      // then we got it's parent, which is where all the host content is in now\n      hostContentNodes = node.parentNode.childNodes;\n      slotNameAttr = childNode['s-sn'];\n\n      for (j = hostContentNodes.length - 1; j >= 0; j--) {\n        node = hostContentNodes[j];\n\n        if (!node['s-cn'] && !node['s-nr'] && node['s-hn'] !== childNode['s-hn']) {\n          // let's do some relocating to its new home\n          // but never relocate a content reference node\n          // that is suppose to always represent the original content location\n          if (isNodeLocatedInSlot(node, slotNameAttr)) {\n            // it's possible we've already decided to relocate this node\n            relocateNodeData = relocateNodes.find(function (r) {\n              return r.$nodeToRelocate$ === node;\n            }); // made some changes to slots\n            // let's make sure we also double check\n            // fallbacks are correctly hidden or shown\n\n            checkSlotFallbackVisibility = true;\n            node['s-sn'] = node['s-sn'] || slotNameAttr;\n\n            if (relocateNodeData) {\n              // previously we never found a slot home for this node\n              // but turns out we did, so let's remember it now\n              relocateNodeData.$slotRefNode$ = childNode;\n            } else {\n              // add to our list of nodes to relocate\n              relocateNodes.push({\n                $slotRefNode$: childNode,\n                $nodeToRelocate$: node\n              });\n            }\n\n            if (node['s-sr']) {\n              relocateNodes.map(function (relocateNode) {\n                if (isNodeLocatedInSlot(relocateNode.$nodeToRelocate$, node['s-sn'])) {\n                  relocateNodeData = relocateNodes.find(function (r) {\n                    return r.$nodeToRelocate$ === node;\n                  });\n\n                  if (relocateNodeData && !relocateNode.$slotRefNode$) {\n                    relocateNode.$slotRefNode$ = relocateNodeData.$slotRefNode$;\n                  }\n                }\n              });\n            }\n          } else if (!relocateNodes.some(function (r) {\n            return r.$nodeToRelocate$ === node;\n          })) {\n            // so far this element does not have a slot home, not setting slotRefNode on purpose\n            // if we never find a home for this element then we'll need to hide it\n            relocateNodes.push({\n              $nodeToRelocate$: node\n            });\n          }\n        }\n      }\n    }\n\n    if (childNode.nodeType === 1\n    /* ElementNode */\n    ) {\n      relocateSlotContent(childNode);\n    }\n  }\n};\n\nvar isNodeLocatedInSlot = function isNodeLocatedInSlot(nodeToRelocate, slotNameAttr) {\n  if (nodeToRelocate.nodeType === 1\n  /* ElementNode */\n  ) {\n    if (nodeToRelocate.getAttribute('slot') === null && slotNameAttr === '') {\n      return true;\n    }\n\n    if (nodeToRelocate.getAttribute('slot') === slotNameAttr) {\n      return true;\n    }\n\n    return false;\n  }\n\n  if (nodeToRelocate['s-sn'] === slotNameAttr) {\n    return true;\n  }\n\n  return slotNameAttr === '';\n};\n\nvar callNodeRefs = function callNodeRefs(vNode) {\n  {\n    vNode.$attrs$ && vNode.$attrs$.ref && vNode.$attrs$.ref(null);\n    vNode.$children$ && vNode.$children$.map(callNodeRefs);\n  }\n};\n\nvar renderVdom = function renderVdom(hostRef, renderFnResults) {\n  var hostElm = hostRef.$hostElement$;\n  var cmpMeta = hostRef.$cmpMeta$;\n  var oldVNode = hostRef.$vnode$ || newVNode(null, null);\n  var rootVnode = isHost(renderFnResults) ? renderFnResults : h(null, null, renderFnResults);\n  hostTagName = hostElm.tagName;\n\n  if (cmpMeta.$attrsToReflect$) {\n    rootVnode.$attrs$ = rootVnode.$attrs$ || {};\n    cmpMeta.$attrsToReflect$.map(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n          propName = _ref4[0],\n          attribute = _ref4[1];\n\n      return rootVnode.$attrs$[attribute] = hostElm[propName];\n    });\n  }\n\n  rootVnode.$tag$ = null;\n  rootVnode.$flags$ |= 4\n  /* isHost */\n  ;\n  hostRef.$vnode$ = rootVnode;\n  rootVnode.$elm$ = oldVNode.$elm$ = hostElm.shadowRoot || hostElm;\n  {\n    scopeId = hostElm['s-sc'];\n  }\n  {\n    contentRef = hostElm['s-cr'];\n    useNativeShadowDom = (cmpMeta.$flags$ & 1\n    /* shadowDomEncapsulation */\n    ) !== 0; // always reset\n\n    checkSlotFallbackVisibility = false;\n  } // synchronous patch\n\n  patch(oldVNode, rootVnode);\n  {\n    // while we're moving nodes around existing nodes, temporarily disable\n    // the disconnectCallback from working\n    plt.$flags$ |= 1\n    /* isTmpDisconnected */\n    ;\n\n    if (checkSlotRelocate) {\n      relocateSlotContent(rootVnode.$elm$);\n      var relocateData;\n      var nodeToRelocate;\n      var orgLocationNode;\n      var parentNodeRef;\n      var insertBeforeNode;\n      var refNode;\n      var _i3 = 0;\n\n      for (; _i3 < relocateNodes.length; _i3++) {\n        relocateData = relocateNodes[_i3];\n        nodeToRelocate = relocateData.$nodeToRelocate$;\n\n        if (!nodeToRelocate['s-ol']) {\n          // add a reference node marking this node's original location\n          // keep a reference to this node for later lookups\n          orgLocationNode = doc.createTextNode('');\n          orgLocationNode['s-nr'] = nodeToRelocate;\n          nodeToRelocate.parentNode.insertBefore(nodeToRelocate['s-ol'] = orgLocationNode, nodeToRelocate);\n        }\n      }\n\n      for (_i3 = 0; _i3 < relocateNodes.length; _i3++) {\n        relocateData = relocateNodes[_i3];\n        nodeToRelocate = relocateData.$nodeToRelocate$;\n\n        if (relocateData.$slotRefNode$) {\n          // by default we're just going to insert it directly\n          // after the slot reference node\n          parentNodeRef = relocateData.$slotRefNode$.parentNode;\n          insertBeforeNode = relocateData.$slotRefNode$.nextSibling;\n          orgLocationNode = nodeToRelocate['s-ol'];\n\n          while (orgLocationNode = orgLocationNode.previousSibling) {\n            refNode = orgLocationNode['s-nr'];\n\n            if (refNode && refNode['s-sn'] === nodeToRelocate['s-sn'] && parentNodeRef === refNode.parentNode) {\n              refNode = refNode.nextSibling;\n\n              if (!refNode || !refNode['s-nr']) {\n                insertBeforeNode = refNode;\n                break;\n              }\n            }\n          }\n\n          if (!insertBeforeNode && parentNodeRef !== nodeToRelocate.parentNode || nodeToRelocate.nextSibling !== insertBeforeNode) {\n            // we've checked that it's worth while to relocate\n            // since that the node to relocate\n            // has a different next sibling or parent relocated\n            if (nodeToRelocate !== insertBeforeNode) {\n              if (!nodeToRelocate['s-hn'] && nodeToRelocate['s-ol']) {\n                // probably a component in the index.html that doesn't have it's hostname set\n                nodeToRelocate['s-hn'] = nodeToRelocate['s-ol'].parentNode.nodeName;\n              } // add it back to the dom but in its new home\n\n\n              parentNodeRef.insertBefore(nodeToRelocate, insertBeforeNode);\n            }\n          }\n        } else {\n          // this node doesn't have a slot home to go to, so let's hide it\n          if (nodeToRelocate.nodeType === 1\n          /* ElementNode */\n          ) {\n            nodeToRelocate.hidden = true;\n          }\n        }\n      }\n    }\n\n    if (checkSlotFallbackVisibility) {\n      updateFallbackSlotVisibility(rootVnode.$elm$);\n    } // done moving nodes around\n    // allow the disconnect callback to work again\n\n\n    plt.$flags$ &= ~1\n    /* isTmpDisconnected */\n    ; // always reset\n\n    relocateNodes.length = 0;\n  }\n};\n\nvar getElement = function getElement(ref) {\n  return getHostRef(ref).$hostElement$;\n};\n\nvar createEvent = function createEvent(ref, name, flags) {\n  var elm = getElement(ref);\n  return {\n    emit: function emit(detail) {\n      return emitEvent(elm, name, {\n        bubbles: !!(flags & 4\n        /* Bubbles */\n        ),\n        composed: !!(flags & 2\n        /* Composed */\n        ),\n        cancelable: !!(flags & 1\n        /* Cancellable */\n        ),\n        detail: detail\n      });\n    }\n  };\n};\n\nvar emitEvent = function emitEvent(elm, name, opts) {\n  var ev = plt.ce(name, opts);\n  elm.dispatchEvent(ev);\n  return ev;\n};\n\nvar attachToAncestor = function attachToAncestor(hostRef, ancestorComponent) {\n  if (ancestorComponent && !hostRef.$onRenderResolve$ && ancestorComponent['s-p']) {\n    ancestorComponent['s-p'].push(new Promise(function (r) {\n      return hostRef.$onRenderResolve$ = r;\n    }));\n  }\n};\n\nvar scheduleUpdate = function scheduleUpdate(hostRef, isInitialLoad) {\n  {\n    hostRef.$flags$ |= 16\n    /* isQueuedForUpdate */\n    ;\n  }\n\n  if (hostRef.$flags$ & 4\n  /* isWaitingForChildren */\n  ) {\n    hostRef.$flags$ |= 512\n    /* needsRerender */\n    ;\n    return;\n  }\n\n  attachToAncestor(hostRef, hostRef.$ancestorComponent$); // there is no ancestor component or the ancestor component\n  // has already fired off its lifecycle update then\n  // fire off the initial update\n\n  var dispatch = function dispatch() {\n    return dispatchHooks(hostRef, isInitialLoad);\n  };\n\n  return writeTask(dispatch);\n};\n\nvar dispatchHooks = function dispatchHooks(hostRef, isInitialLoad) {\n  var endSchedule = createTime('scheduleUpdate', hostRef.$cmpMeta$.$tagName$);\n  var instance = hostRef.$lazyInstance$;\n  var promise;\n\n  if (isInitialLoad) {\n    {\n      hostRef.$flags$ |= 256\n      /* isListenReady */\n      ;\n\n      if (hostRef.$queuedListeners$) {\n        hostRef.$queuedListeners$.map(function (_ref5) {\n          var _ref6 = _slicedToArray(_ref5, 2),\n              methodName = _ref6[0],\n              event = _ref6[1];\n\n          return safeCall(instance, methodName, event);\n        });\n        hostRef.$queuedListeners$ = null;\n      }\n    }\n    {\n      promise = safeCall(instance, 'componentWillLoad');\n    }\n  } else {\n    {\n      promise = safeCall(instance, 'componentWillUpdate');\n    }\n  }\n\n  {\n    promise = then(promise, function () {\n      return safeCall(instance, 'componentWillRender');\n    });\n  }\n  endSchedule();\n  return then(promise, function () {\n    return updateComponent(hostRef, instance, isInitialLoad);\n  });\n};\n\nvar updateComponent = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(hostRef, instance, isInitialLoad) {\n    var elm, endUpdate, rc, endRender, childrenPromises, postUpdate;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // updateComponent\n            elm = hostRef.$hostElement$;\n            endUpdate = createTime('update', hostRef.$cmpMeta$.$tagName$);\n            rc = elm['s-rc'];\n\n            if (isInitialLoad) {\n              // DOM WRITE!\n              attachStyles(hostRef);\n            }\n\n            endRender = createTime('render', hostRef.$cmpMeta$.$tagName$);\n            callRender(hostRef, instance);\n\n            if (rc) {\n              // ok, so turns out there are some child host elements\n              // waiting on this parent element to load\n              // let's fire off all update callbacks waiting\n              rc.map(function (cb) {\n                return cb();\n              });\n              elm['s-rc'] = undefined;\n            }\n\n            endRender();\n            endUpdate();\n            childrenPromises = elm['s-p'];\n\n            postUpdate = function postUpdate() {\n              return postUpdateComponent(hostRef);\n            };\n\n            if (childrenPromises.length === 0) {\n              postUpdate();\n            } else {\n              Promise.all(childrenPromises).then(postUpdate);\n              hostRef.$flags$ |= 4\n              /* isWaitingForChildren */\n              ;\n              childrenPromises.length = 0;\n            }\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function updateComponent(_x, _x2, _x3) {\n    return _ref7.apply(this, arguments);\n  };\n}();\n\nvar callRender = function callRender(hostRef, instance, elm) {\n  try {\n    instance = instance.render();\n    {\n      hostRef.$flags$ &= ~16\n      /* isQueuedForUpdate */\n      ;\n    }\n    {\n      hostRef.$flags$ |= 2\n      /* hasRendered */\n      ;\n    }\n    {\n      {\n        // looks like we've got child nodes to render into this host element\n        // or we need to update the css class/attrs on the host element\n        // DOM WRITE!\n        {\n          renderVdom(hostRef, instance);\n        }\n      }\n    }\n  } catch (e) {\n    consoleError(e, hostRef.$hostElement$);\n  }\n\n  return null;\n};\n\nvar postUpdateComponent = function postUpdateComponent(hostRef) {\n  var tagName = hostRef.$cmpMeta$.$tagName$;\n  var elm = hostRef.$hostElement$;\n  var endPostUpdate = createTime('postUpdate', tagName);\n  var instance = hostRef.$lazyInstance$;\n  var ancestorComponent = hostRef.$ancestorComponent$;\n  {\n    safeCall(instance, 'componentDidRender');\n  }\n\n  if (!(hostRef.$flags$ & 64\n  /* hasLoadedComponent */\n  )) {\n    hostRef.$flags$ |= 64\n    /* hasLoadedComponent */\n    ;\n    {\n      // DOM WRITE!\n      addHydratedFlag(elm);\n    }\n    {\n      safeCall(instance, 'componentDidLoad');\n    }\n    endPostUpdate();\n    {\n      hostRef.$onReadyResolve$(elm);\n\n      if (!ancestorComponent) {\n        appDidLoad();\n      }\n    }\n  } else {\n    {\n      safeCall(instance, 'componentDidUpdate');\n    }\n    endPostUpdate();\n  }\n\n  {\n    hostRef.$onInstanceResolve$(elm);\n  } // load events fire from bottom to top\n  // the deepest elements load first then bubbles up\n\n  {\n    if (hostRef.$onRenderResolve$) {\n      hostRef.$onRenderResolve$();\n      hostRef.$onRenderResolve$ = undefined;\n    }\n\n    if (hostRef.$flags$ & 512\n    /* needsRerender */\n    ) {\n      nextTick(function () {\n        return scheduleUpdate(hostRef, false);\n      });\n    }\n\n    hostRef.$flags$ &= ~(4\n    /* isWaitingForChildren */\n    | 512\n    /* needsRerender */\n    );\n  } // ( •_•)\n  // ( •_•)>⌐■-■\n  // (⌐■_■)\n};\n\nvar appDidLoad = function appDidLoad(who) {\n  // on appload\n  // we have finish the first big initial render\n  {\n    addHydratedFlag(doc.documentElement);\n  }\n  nextTick(function () {\n    return emitEvent(win, 'appload', {\n      detail: {\n        namespace: NAMESPACE\n      }\n    });\n  });\n};\n\nvar safeCall = function safeCall(instance, method, arg) {\n  if (instance && instance[method]) {\n    try {\n      return instance[method](arg);\n    } catch (e) {\n      consoleError(e);\n    }\n  }\n\n  return undefined;\n};\n\nvar then = function then(promise, thenFn) {\n  return promise && promise.then ? promise.then(thenFn) : thenFn();\n};\n\nvar addHydratedFlag = function addHydratedFlag(elm) {\n  return elm.classList.add('hydrated');\n};\n\nvar initializeClientHydrate = function initializeClientHydrate(hostElm, tagName, hostId, hostRef) {\n  var endHydrate = createTime('hydrateClient', tagName);\n  var shadowRoot = hostElm.shadowRoot;\n  var childRenderNodes = [];\n  var slotNodes = [];\n  var shadowRootNodes = shadowRoot ? [] : null;\n  var vnode = hostRef.$vnode$ = newVNode(tagName, null);\n\n  if (!plt.$orgLocNodes$) {\n    initializeDocumentHydrate(doc.body, plt.$orgLocNodes$ = new Map());\n  }\n\n  hostElm[HYDRATE_ID] = hostId;\n  hostElm.removeAttribute(HYDRATE_ID);\n  clientHydrate(vnode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, hostElm, hostId);\n  childRenderNodes.map(function (c) {\n    var orgLocationId = c.$hostId$ + '.' + c.$nodeId$;\n    var orgLocationNode = plt.$orgLocNodes$.get(orgLocationId);\n    var node = c.$elm$;\n\n    if (orgLocationNode && supportsShadow && orgLocationNode['s-en'] === '') {\n      orgLocationNode.parentNode.insertBefore(node, orgLocationNode.nextSibling);\n    }\n\n    if (!shadowRoot) {\n      node['s-hn'] = tagName;\n\n      if (orgLocationNode) {\n        node['s-ol'] = orgLocationNode;\n        node['s-ol']['s-nr'] = node;\n      }\n    }\n\n    plt.$orgLocNodes$.delete(orgLocationId);\n  });\n\n  if (shadowRoot) {\n    shadowRootNodes.map(function (shadowRootNode) {\n      if (shadowRootNode) {\n        shadowRoot.appendChild(shadowRootNode);\n      }\n    });\n  }\n\n  endHydrate();\n};\n\nvar clientHydrate = function clientHydrate(parentVNode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, node, hostId) {\n  var childNodeType;\n  var childIdSplt;\n  var childVNode;\n  var i;\n\n  if (node.nodeType === 1\n  /* ElementNode */\n  ) {\n    childNodeType = node.getAttribute(HYDRATE_CHILD_ID);\n\n    if (childNodeType) {\n      // got the node data from the element's attribute\n      // `${hostId}.${nodeId}.${depth}.${index}`\n      childIdSplt = childNodeType.split('.');\n\n      if (childIdSplt[0] === hostId || childIdSplt[0] === '0') {\n        childVNode = {\n          $flags$: 0,\n          $hostId$: childIdSplt[0],\n          $nodeId$: childIdSplt[1],\n          $depth$: childIdSplt[2],\n          $index$: childIdSplt[3],\n          $tag$: node.tagName.toLowerCase(),\n          $elm$: node,\n          $attrs$: null,\n          $children$: null,\n          $key$: null,\n          $name$: null,\n          $text$: null\n        };\n        childRenderNodes.push(childVNode);\n        node.removeAttribute(HYDRATE_CHILD_ID); // this is a new child vnode\n        // so ensure its parent vnode has the vchildren array\n\n        if (!parentVNode.$children$) {\n          parentVNode.$children$ = [];\n        } // add our child vnode to a specific index of the vnode's children\n\n\n        parentVNode.$children$[childVNode.$index$] = childVNode; // this is now the new parent vnode for all the next child checks\n\n        parentVNode = childVNode;\n\n        if (shadowRootNodes && childVNode.$depth$ === '0') {\n          shadowRootNodes[childVNode.$index$] = childVNode.$elm$;\n        }\n      }\n    } // recursively drill down, end to start so we can remove nodes\n\n\n    for (i = node.childNodes.length - 1; i >= 0; i--) {\n      clientHydrate(parentVNode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, node.childNodes[i], hostId);\n    }\n\n    if (node.shadowRoot) {\n      // keep drilling down through the shadow root nodes\n      for (i = node.shadowRoot.childNodes.length - 1; i >= 0; i--) {\n        clientHydrate(parentVNode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, node.shadowRoot.childNodes[i], hostId);\n      }\n    }\n  } else if (node.nodeType === 8\n  /* CommentNode */\n  ) {\n    // `${COMMENT_TYPE}.${hostId}.${nodeId}.${depth}.${index}`\n    childIdSplt = node.nodeValue.split('.');\n\n    if (childIdSplt[1] === hostId || childIdSplt[1] === '0') {\n      // comment node for either the host id or a 0 host id\n      childNodeType = childIdSplt[0];\n      childVNode = {\n        $flags$: 0,\n        $hostId$: childIdSplt[1],\n        $nodeId$: childIdSplt[2],\n        $depth$: childIdSplt[3],\n        $index$: childIdSplt[4],\n        $elm$: node,\n        $attrs$: null,\n        $children$: null,\n        $key$: null,\n        $name$: null,\n        $tag$: null,\n        $text$: null\n      };\n\n      if (childNodeType === TEXT_NODE_ID) {\n        childVNode.$elm$ = node.nextSibling;\n\n        if (childVNode.$elm$ && childVNode.$elm$.nodeType === 3\n        /* TextNode */\n        ) {\n          childVNode.$text$ = childVNode.$elm$.textContent;\n          childRenderNodes.push(childVNode); // remove the text comment since it's no longer needed\n\n          node.remove();\n\n          if (!parentVNode.$children$) {\n            parentVNode.$children$ = [];\n          }\n\n          parentVNode.$children$[childVNode.$index$] = childVNode;\n\n          if (shadowRootNodes && childVNode.$depth$ === '0') {\n            shadowRootNodes[childVNode.$index$] = childVNode.$elm$;\n          }\n        }\n      } else if (childVNode.$hostId$ === hostId) {\n        // this comment node is specifcally for this host id\n        if (childNodeType === SLOT_NODE_ID) {\n          // `${SLOT_NODE_ID}.${hostId}.${nodeId}.${depth}.${index}.${slotName}`;\n          childVNode.$tag$ = 'slot';\n\n          if (childIdSplt[5]) {\n            node['s-sn'] = childVNode.$name$ = childIdSplt[5];\n          } else {\n            node['s-sn'] = '';\n          }\n\n          node['s-sr'] = true;\n\n          if (shadowRootNodes) {\n            // browser support shadowRoot and this is a shadow dom component\n            // create an actual slot element\n            childVNode.$elm$ = doc.createElement(childVNode.$tag$);\n\n            if (childVNode.$name$) {\n              // add the slot name attribute\n              childVNode.$elm$.setAttribute('name', childVNode.$name$);\n            } // insert the new slot element before the slot comment\n\n\n            node.parentNode.insertBefore(childVNode.$elm$, node); // remove the slot comment since it's not needed for shadow\n\n            node.remove();\n\n            if (childVNode.$depth$ === '0') {\n              shadowRootNodes[childVNode.$index$] = childVNode.$elm$;\n            }\n          }\n\n          slotNodes.push(childVNode);\n\n          if (!parentVNode.$children$) {\n            parentVNode.$children$ = [];\n          }\n\n          parentVNode.$children$[childVNode.$index$] = childVNode;\n        } else if (childNodeType === CONTENT_REF_ID) {\n          // `${CONTENT_REF_ID}.${hostId}`;\n          if (shadowRootNodes) {\n            // remove the content ref comment since it's not needed for shadow\n            node.remove();\n          } else {\n            hostElm['s-cr'] = node;\n            node['s-cn'] = true;\n          }\n        }\n      }\n    }\n  } else if (parentVNode && parentVNode.$tag$ === 'style') {\n    var vnode = newVNode(null, node.textContent);\n    vnode.$elm$ = node;\n    vnode.$index$ = '0';\n    parentVNode.$children$ = [vnode];\n  }\n};\n\nvar initializeDocumentHydrate = function initializeDocumentHydrate(node, orgLocNodes) {\n  if (node.nodeType === 1\n  /* ElementNode */\n  ) {\n    var _i4 = 0;\n\n    for (; _i4 < node.childNodes.length; _i4++) {\n      initializeDocumentHydrate(node.childNodes[_i4], orgLocNodes);\n    }\n\n    if (node.shadowRoot) {\n      for (_i4 = 0; _i4 < node.shadowRoot.childNodes.length; _i4++) {\n        initializeDocumentHydrate(node.shadowRoot.childNodes[_i4], orgLocNodes);\n      }\n    }\n  } else if (node.nodeType === 8\n  /* CommentNode */\n  ) {\n    var childIdSplt = node.nodeValue.split('.');\n\n    if (childIdSplt[0] === ORG_LOCATION_ID) {\n      orgLocNodes.set(childIdSplt[1] + '.' + childIdSplt[2], node);\n      node.nodeValue = ''; // useful to know if the original location is\n      // the root light-dom of a shadow dom component\n\n      node['s-en'] = childIdSplt[3];\n    }\n  }\n};\n\nvar parsePropertyValue = function parsePropertyValue(propValue, propType) {\n  // ensure this value is of the correct prop type\n  if (propValue != null && !isComplexType(propValue)) {\n    if (propType & 4\n    /* Boolean */\n    ) {\n      // per the HTML spec, any string value means it is a boolean true value\n      // but we'll cheat here and say that the string \"false\" is the boolean false\n      return propValue === 'false' ? false : propValue === '' || !!propValue;\n    }\n\n    if (propType & 2\n    /* Number */\n    ) {\n      // force it to be a number\n      return parseFloat(propValue);\n    }\n\n    if (propType & 1\n    /* String */\n    ) {\n      // could have been passed as a number or boolean\n      // but we still want it as a string\n      return String(propValue);\n    } // redundant return here for better minification\n\n\n    return propValue;\n  } // not sure exactly what type we want\n  // so no need to change to a different type\n\n\n  return propValue;\n};\n\nvar getValue = function getValue(ref, propName) {\n  return getHostRef(ref).$instanceValues$.get(propName);\n};\n\nvar setValue = function setValue(ref, propName, newVal, cmpMeta) {\n  // check our new property value against our internal value\n  var hostRef = getHostRef(ref);\n  var elm = hostRef.$hostElement$;\n  var oldVal = hostRef.$instanceValues$.get(propName);\n  var flags = hostRef.$flags$;\n  var instance = hostRef.$lazyInstance$;\n  newVal = parsePropertyValue(newVal, cmpMeta.$members$[propName][0]);\n\n  if ((!(flags & 8\n  /* isConstructingInstance */\n  ) || oldVal === undefined) && newVal !== oldVal) {\n    // gadzooks! the property's value has changed!!\n    // set our new value!\n    hostRef.$instanceValues$.set(propName, newVal);\n\n    if (instance) {\n      // get an array of method names of watch functions to call\n      if (cmpMeta.$watchers$ && flags & 128\n      /* isWatchReady */\n      ) {\n        var watchMethods = cmpMeta.$watchers$[propName];\n\n        if (watchMethods) {\n          // this instance is watching for when this property changed\n          watchMethods.map(function (watchMethodName) {\n            try {\n              // fire off each of the watch methods that are watching this property\n              instance[watchMethodName](newVal, oldVal, propName);\n            } catch (e) {\n              consoleError(e, elm);\n            }\n          });\n        }\n      }\n\n      if ((flags & (2\n      /* hasRendered */\n      | 16\n      /* isQueuedForUpdate */\n      )) === 2\n      /* hasRendered */\n      ) {\n        // looks like this value actually changed, so we've got work to do!\n        // but only if we've already rendered, otherwise just chill out\n        // queue that we need to do an update, but don't worry about queuing\n        // up millions cuz this function ensures it only runs once\n        scheduleUpdate(hostRef, false);\n      }\n    }\n  }\n};\n\nvar proxyComponent = function proxyComponent(Cstr, cmpMeta, flags) {\n  if (cmpMeta.$members$) {\n    if (Cstr.watchers) {\n      cmpMeta.$watchers$ = Cstr.watchers;\n    } // It's better to have a const than two Object.entries()\n\n\n    var members = Object.entries(cmpMeta.$members$);\n    var prototype = Cstr.prototype;\n    members.map(function (_ref8) {\n      var _ref9 = _slicedToArray(_ref8, 2),\n          memberName = _ref9[0],\n          _ref9$ = _slicedToArray(_ref9[1], 1),\n          memberFlags = _ref9$[0];\n\n      if (memberFlags & 31\n      /* Prop */\n      || flags & 2\n      /* proxyState */\n      && memberFlags & 32\n      /* State */\n      ) {\n        // proxyComponent - prop\n        Object.defineProperty(prototype, memberName, {\n          get: function get() {\n            // proxyComponent, get value\n            return getValue(this, memberName);\n          },\n          set: function set(newValue) {\n            // proxyComponent, set value\n            setValue(this, memberName, newValue, cmpMeta);\n          },\n          configurable: true,\n          enumerable: true\n        });\n      } else if (flags & 1\n      /* isElementConstructor */\n      && memberFlags & 64\n      /* Method */\n      ) {\n        // proxyComponent - method\n        Object.defineProperty(prototype, memberName, {\n          value: function value() {\n            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n              args[_key2] = arguments[_key2];\n            }\n\n            var ref = getHostRef(this);\n            return ref.$onInstancePromise$.then(function () {\n              var _ref$$lazyInstance$;\n\n              return (_ref$$lazyInstance$ = ref.$lazyInstance$)[memberName].apply(_ref$$lazyInstance$, args);\n            });\n          }\n        });\n      }\n    });\n\n    if (flags & 1\n    /* isElementConstructor */\n    ) {\n      var attrNameToPropName = new Map();\n\n      prototype.attributeChangedCallback = function (attrName, _oldValue, newValue) {\n        var _this = this;\n\n        plt.jmp(function () {\n          var propName = attrNameToPropName.get(attrName); //  In a webcomponent lifecyle the attributeChangedCallback runs prior to connectedCallback\n          //  in the case where an attribute was set inline.\n          //  ```html\n          //    <my-component some-attribute=\"some-value\"></my-component>\n          //  ```\n          //\n          //  There is an edge case where a developer sets the attribute inline on a custom element and then programatically\n          //  changes it before it has been upgraded as shown below:\n          //\n          //  ```html\n          //    <!-- this component has _not_ been upgraded yet -->\n          //    <my-component id=\"test\" some-attribute=\"some-value\"></my-component>\n          //    <script>\n          //      // grab non-upgraded component\n          //      el = document.querySelector(\"#test\");\n          //      el.someAttribute = \"another-value\";\n          //      // upgrade component\n          //      cutsomElements.define('my-component', MyComponent);\n          //    </script>\n          //  ```\n          //  In this case if we do not unshadow here and use the value of the shadowing property, attributeChangedCallback\n          //  will be called with `newValue = \"some-value\"` and will set the shadowed property (this.someAttribute = \"another-value\")\n          //  to the value that was set inline i.e. \"some-value\" from above example. When\n          //  the connectedCallback attempts to unshadow it will use \"some-value\" as the intial value rather than \"another-value\"\n          //\n          //  The case where the attribute was NOT set inline but was not set programmatically shall be handled/unshadowed\n          //  by connectedCallback as this attributeChangedCallback will not fire.\n          //\n          //  https://developers.google.com/web/fundamentals/web-components/best-practices#lazy-properties\n          //\n          //  TODO(STENCIL-16) we should think about whether or not we actually want to be reflecting the attributes to\n          //  properties here given that this goes against best practices outlined here\n          //  https://developers.google.com/web/fundamentals/web-components/best-practices#avoid-reentrancy\n\n          if (_this.hasOwnProperty(propName)) {\n            newValue = _this[propName];\n            delete _this[propName];\n          }\n\n          _this[propName] = newValue === null && typeof _this[propName] === 'boolean' ? false : newValue;\n        });\n      }; // create an array of attributes to observe\n      // and also create a map of html attribute name to js property name\n\n\n      Cstr.observedAttributes = members.filter(function (_ref10) {\n        var _ref11 = _slicedToArray(_ref10, 2),\n            _ = _ref11[0],\n            m = _ref11[1];\n\n        return m[0] & 15;\n      }\n      /* HasAttribute */\n      ) // filter to only keep props that should match attributes\n      .map(function (_ref12) {\n        var _ref13 = _slicedToArray(_ref12, 2),\n            propName = _ref13[0],\n            m = _ref13[1];\n\n        var attrName = m[1] || propName;\n        attrNameToPropName.set(attrName, propName);\n\n        if (m[0] & 512\n        /* ReflectAttr */\n        ) {\n          cmpMeta.$attrsToReflect$.push([propName, attrName]);\n        }\n\n        return attrName;\n      });\n    }\n  }\n\n  return Cstr;\n};\n\nvar initializeComponent = /*#__PURE__*/function () {\n  var _ref14 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(elm, hostRef, cmpMeta, hmrVersionId, Cstr) {\n    var endLoad, endNewInstance, style, _scopeId, endRegisterStyles, ancestorComponent, schedule;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!((hostRef.$flags$ & 32\n            /* hasInitializedComponent */\n            ) === 0)) {\n              _context2.next = 18;\n              break;\n            }\n\n            // we haven't initialized this element yet\n            hostRef.$flags$ |= 32\n            /* hasInitializedComponent */\n            ; // lazy loaded components\n            // request the component's implementation to be\n            // wired up with the host element\n\n            Cstr = loadModule(cmpMeta);\n\n            if (!Cstr.then) {\n              _context2.next = 9;\n              break;\n            }\n\n            // Await creates a micro-task avoid if possible\n            endLoad = uniqueTime();\n            _context2.next = 7;\n            return Cstr;\n\n          case 7:\n            Cstr = _context2.sent;\n            endLoad();\n\n          case 9:\n            if (!Cstr.isProxied) {\n              // we've never proxied this Constructor before\n              // let's add the getters/setters to its prototype before\n              // the first time we create an instance of the implementation\n              {\n                cmpMeta.$watchers$ = Cstr.watchers;\n              }\n              proxyComponent(Cstr, cmpMeta, 2\n              /* proxyState */\n              );\n              Cstr.isProxied = true;\n            }\n\n            endNewInstance = createTime('createInstance', cmpMeta.$tagName$); // ok, time to construct the instance\n            // but let's keep track of when we start and stop\n            // so that the getters/setters don't incorrectly step on data\n\n            hostRef.$flags$ |= 8\n            /* isConstructingInstance */\n            ;\n\n            // construct the lazy-loaded component implementation\n            // passing the hostRef is very important during\n            // construction in order to directly wire together the\n            // host element and the lazy-loaded instance\n            try {\n              new Cstr(hostRef);\n            } catch (e) {\n              consoleError(e);\n            }\n\n            hostRef.$flags$ &= ~8\n            /* isConstructingInstance */\n            ;\n            hostRef.$flags$ |= 128\n            /* isWatchReady */\n            ;\n            endNewInstance();\n            fireConnectedCallback(hostRef.$lazyInstance$);\n\n            if (Cstr.style) {\n              // this component has styles but we haven't registered them yet\n              style = Cstr.style;\n              _scopeId = getScopeId(cmpMeta);\n\n              if (!styles.has(_scopeId)) {\n                endRegisterStyles = createTime('registerStyles', cmpMeta.$tagName$);\n                registerStyle(_scopeId, style, !!(cmpMeta.$flags$ & 1\n                /* shadowDomEncapsulation */\n                ));\n                endRegisterStyles();\n              }\n            }\n\n          case 18:\n            // we've successfully created a lazy instance\n            ancestorComponent = hostRef.$ancestorComponent$;\n\n            schedule = function schedule() {\n              return scheduleUpdate(hostRef, true);\n            };\n\n            if (ancestorComponent && ancestorComponent['s-rc']) {\n              // this is the intial load and this component it has an ancestor component\n              // but the ancestor component has NOT fired its will update lifecycle yet\n              // so let's just cool our jets and wait for the ancestor to continue first\n              // this will get fired off when the ancestor component\n              // finally gets around to rendering its lazy self\n              // fire off the initial update\n              ancestorComponent['s-rc'].push(schedule);\n            } else {\n              schedule();\n            }\n\n          case 21:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function initializeComponent(_x4, _x5, _x6, _x7, _x8) {\n    return _ref14.apply(this, arguments);\n  };\n}();\n\nvar fireConnectedCallback = function fireConnectedCallback(instance) {\n  {\n    safeCall(instance, 'connectedCallback');\n  }\n};\n\nvar _connectedCallback = function connectedCallback(elm) {\n  if ((plt.$flags$ & 1\n  /* isTmpDisconnected */\n  ) === 0) {\n    var hostRef = getHostRef(elm);\n    var cmpMeta = hostRef.$cmpMeta$;\n    var endConnected = createTime('connectedCallback', cmpMeta.$tagName$);\n\n    if (!(hostRef.$flags$ & 1\n    /* hasConnected */\n    )) {\n      // first time this component has connected\n      hostRef.$flags$ |= 1\n      /* hasConnected */\n      ;\n      var hostId;\n      {\n        hostId = elm.getAttribute(HYDRATE_ID);\n\n        if (hostId) {\n          if (cmpMeta.$flags$ & 1\n          /* shadowDomEncapsulation */\n          ) {\n            var _scopeId2 = addStyle(elm.shadowRoot, cmpMeta);\n\n            elm.classList.remove(_scopeId2 + '-h', _scopeId2 + '-s');\n          }\n\n          initializeClientHydrate(elm, cmpMeta.$tagName$, hostId, hostRef);\n        }\n      }\n\n      if (!hostId) {\n        // initUpdate\n        // if the slot polyfill is required we'll need to put some nodes\n        // in here to act as original content anchors as we move nodes around\n        // host element has been connected to the DOM\n        if (cmpMeta.$flags$ & (4\n        /* hasSlotRelocation */\n        | 8\n        /* needsShadowDomShim */\n        )) {\n          setContentReference(elm);\n        }\n      }\n\n      {\n        // find the first ancestor component (if there is one) and register\n        // this component as one of the actively loading child components for its ancestor\n        var ancestorComponent = elm;\n\n        while (ancestorComponent = ancestorComponent.parentNode || ancestorComponent.host) {\n          // climb up the ancestors looking for the first\n          // component that hasn't finished its lifecycle update yet\n          if (ancestorComponent.nodeType === 1\n          /* ElementNode */\n          && ancestorComponent.hasAttribute('s-id') && ancestorComponent['s-p'] || ancestorComponent['s-p']) {\n            // we found this components first ancestor component\n            // keep a reference to this component's ancestor component\n            attachToAncestor(hostRef, hostRef.$ancestorComponent$ = ancestorComponent);\n            break;\n          }\n        }\n      } // Lazy properties\n      // https://developers.google.com/web/fundamentals/web-components/best-practices#lazy-properties\n\n      if (cmpMeta.$members$) {\n        Object.entries(cmpMeta.$members$).map(function (_ref15) {\n          var _ref16 = _slicedToArray(_ref15, 2),\n              memberName = _ref16[0],\n              _ref16$ = _slicedToArray(_ref16[1], 1),\n              memberFlags = _ref16$[0];\n\n          if (memberFlags & 31\n          /* Prop */\n          && elm.hasOwnProperty(memberName)) {\n            var value = elm[memberName];\n            delete elm[memberName];\n            elm[memberName] = value;\n          }\n        });\n      }\n\n      {\n        initializeComponent(elm, hostRef, cmpMeta);\n      }\n    } else {\n      // not the first time this has connected\n      // reattach any event listeners to the host\n      // since they would have been removed when disconnected\n      addHostEventListeners(elm, hostRef, cmpMeta.$listeners$); // fire off connectedCallback() on component instance\n\n      fireConnectedCallback(hostRef.$lazyInstance$);\n    }\n\n    endConnected();\n  }\n};\n\nvar setContentReference = function setContentReference(elm) {\n  // only required when we're NOT using native shadow dom (slot)\n  // or this browser doesn't support native shadow dom\n  // and this host element was NOT created with SSR\n  // let's pick out the inner content for slot projection\n  // create a node to represent where the original\n  // content was first placed, which is useful later on\n  var contentRefElm = elm['s-cr'] = doc.createComment('');\n  contentRefElm['s-cn'] = true;\n  elm.insertBefore(contentRefElm, elm.firstChild);\n};\n\nvar _disconnectedCallback = function disconnectedCallback(elm) {\n  if ((plt.$flags$ & 1\n  /* isTmpDisconnected */\n  ) === 0) {\n    var hostRef = getHostRef(elm);\n    var instance = hostRef.$lazyInstance$;\n    {\n      if (hostRef.$rmListeners$) {\n        hostRef.$rmListeners$.map(function (rmListener) {\n          return rmListener();\n        });\n        hostRef.$rmListeners$ = undefined;\n      }\n    }\n    {\n      safeCall(instance, 'disconnectedCallback');\n    }\n  }\n};\n\nvar proxyCustomElement = function proxyCustomElement(Cstr, compactMeta) {\n  var cmpMeta = {\n    $flags$: compactMeta[0],\n    $tagName$: compactMeta[1]\n  };\n  {\n    cmpMeta.$members$ = compactMeta[2];\n  }\n  {\n    cmpMeta.$listeners$ = compactMeta[3];\n  }\n  {\n    cmpMeta.$watchers$ = Cstr.$watchers$;\n  }\n  {\n    cmpMeta.$attrsToReflect$ = [];\n  }\n  var originalConnectedCallback = Cstr.prototype.connectedCallback;\n  var originalDisconnectedCallback = Cstr.prototype.disconnectedCallback;\n  Object.assign(Cstr.prototype, {\n    __registerHost: function __registerHost() {\n      registerHost(this, cmpMeta);\n    },\n    connectedCallback: function connectedCallback() {\n      _connectedCallback(this);\n\n      if (originalConnectedCallback) {\n        originalConnectedCallback.call(this);\n      }\n    },\n    disconnectedCallback: function disconnectedCallback() {\n      _disconnectedCallback(this);\n\n      if (originalDisconnectedCallback) {\n        originalDisconnectedCallback.call(this);\n      }\n    }\n  });\n  Cstr.is = cmpMeta.$tagName$;\n  return proxyComponent(Cstr, cmpMeta, 1\n  /* isElementConstructor */\n  | 2\n  /* proxyState */\n  );\n};\n\nvar hostRefs = new WeakMap();\n\nvar getHostRef = function getHostRef(ref) {\n  return hostRefs.get(ref);\n};\n\nvar registerHost = function registerHost(elm, cmpMeta) {\n  var hostRef = {\n    $flags$: 0,\n    $hostElement$: elm,\n    $cmpMeta$: cmpMeta,\n    $instanceValues$: new Map()\n  };\n  {\n    hostRef.$onInstancePromise$ = new Promise(function (r) {\n      return hostRef.$onInstanceResolve$ = r;\n    });\n  }\n  {\n    hostRef.$onReadyPromise$ = new Promise(function (r) {\n      return hostRef.$onReadyResolve$ = r;\n    });\n    elm['s-p'] = [];\n    elm['s-rc'] = [];\n  }\n  addHostEventListeners(elm, hostRef, cmpMeta.$listeners$);\n  return hostRefs.set(elm, hostRef);\n};\n\nvar isMemberInElement = function isMemberInElement(elm, memberName) {\n  return memberName in elm;\n};\n\nvar consoleError = function consoleError(e, el) {\n  return (0, console.error)(e, el);\n};\n\nvar cmpModules = /*@__PURE__*/new Map();\n\nvar loadModule = function loadModule(cmpMeta, hostRef, hmrVersionId) {\n  // loadModuleImport\n  var exportName = cmpMeta.$tagName$.replace(/-/g, '_');\n  var bundleId = cmpMeta.$lazyBundleId$;\n  var module = cmpModules.get(bundleId);\n\n  if (module) {\n    return module[exportName];\n  }\n\n  return import(\n  /* webpackInclude: /\\.entry\\.js$/ */\n\n  /* webpackExclude: /\\.system\\.entry\\.js$/ */\n\n  /* webpackMode: \"lazy\" */\n  \"./\".concat(bundleId, \".entry.js\")).then(function (importedModule) {\n    {\n      cmpModules.set(bundleId, importedModule);\n    }\n    return importedModule[exportName];\n  }, consoleError);\n};\n\nvar styles = new Map();\nvar queueDomReads = [];\nvar queueDomWrites = [];\n\nvar queueTask = function queueTask(queue, write) {\n  return function (cb) {\n    queue.push(cb);\n\n    if (!queuePending) {\n      queuePending = true;\n\n      if (write && plt.$flags$ & 4\n      /* queueSync */\n      ) {\n        nextTick(flush);\n      } else {\n        plt.raf(flush);\n      }\n    }\n  };\n};\n\nvar consume = function consume(queue) {\n  for (var _i5 = 0; _i5 < queue.length; _i5++) {\n    try {\n      queue[_i5](performance.now());\n    } catch (e) {\n      consoleError(e);\n    }\n  }\n\n  queue.length = 0;\n};\n\nvar flush = function flush() {\n  // always force a bunch of medium callbacks to run, but still have\n  // a throttle on how many can run in a certain time\n  // DOM READS!!!\n  consume(queueDomReads); // DOM WRITES!!!\n\n  {\n    consume(queueDomWrites);\n\n    if (queuePending = queueDomReads.length > 0) {\n      // still more to do yet, but we've run out of time\n      // let's let this thing cool off and try again in the next tick\n      plt.raf(flush);\n    }\n  }\n};\n\nvar nextTick = /*@__PURE__*/function nextTick(cb) {\n  return promiseResolve().then(cb);\n};\n\nvar writeTask = /*@__PURE__*/queueTask(queueDomWrites, true);\nvar ISO_DATE_FORMAT = /^(\\d{4})-(\\d{2})-(\\d{2})$/;\nvar DaysOfWeek = /*#__PURE__*/(function () {\n  (function (DaysOfWeek) {\n    DaysOfWeek[DaysOfWeek[\"Sunday\"] = 0] = \"Sunday\";\n    DaysOfWeek[DaysOfWeek[\"Monday\"] = 1] = \"Monday\";\n    DaysOfWeek[DaysOfWeek[\"Tuesday\"] = 2] = \"Tuesday\";\n    DaysOfWeek[DaysOfWeek[\"Wednesday\"] = 3] = \"Wednesday\";\n    DaysOfWeek[DaysOfWeek[\"Thursday\"] = 4] = \"Thursday\";\n    DaysOfWeek[DaysOfWeek[\"Friday\"] = 5] = \"Friday\";\n    DaysOfWeek[DaysOfWeek[\"Saturday\"] = 6] = \"Saturday\";\n  })(DaysOfWeek || (DaysOfWeek = {}));\n\n  return DaysOfWeek;\n})();\n\nfunction createDate(year, month, day) {\n  var dayInt = parseInt(day, 10);\n  var monthInt = parseInt(month, 10);\n  var yearInt = parseInt(year, 10);\n  var isValid = Number.isInteger(yearInt) && // all parts should be integers\n  Number.isInteger(monthInt) && Number.isInteger(dayInt) && monthInt > 0 && // month must be 1-12\n  monthInt <= 12 && dayInt > 0 && // day must be 1-31\n  dayInt <= 31 && yearInt > 0;\n\n  if (isValid) {\n    return new Date(yearInt, monthInt - 1, dayInt);\n  }\n}\n/**\n * @param value date string in ISO format YYYY-MM-DD\n */\n\n\nfunction parseISODate(value) {\n  if (!value) {\n    return;\n  }\n\n  var matches = value.match(ISO_DATE_FORMAT);\n\n  if (matches) {\n    return createDate(matches[1], matches[2], matches[3]);\n  }\n}\n/**\n * print date in format YYYY-MM-DD\n * @param date\n */\n\n\nfunction printISODate(date) {\n  if (!date) {\n    return \"\";\n  }\n\n  var d = date.getDate().toString(10);\n  var m = (date.getMonth() + 1).toString(10);\n  var y = date.getFullYear().toString(10); // days are not zero-indexed, so pad if less than 10\n\n  if (date.getDate() < 10) {\n    d = \"0\".concat(d);\n  } // months *are* zero-indexed, pad if less than 9!\n\n\n  if (date.getMonth() < 9) {\n    m = \"0\".concat(m);\n  }\n\n  return \"\".concat(y, \"-\").concat(m, \"-\").concat(d);\n}\n/**\n * Compare if two dates are equal in terms of day, month, and year\n */\n\n\nfunction isEqual(a, b) {\n  if (a == null || b == null) {\n    return false;\n  }\n\n  return a.getFullYear() === b.getFullYear() && a.getMonth() === b.getMonth() && a.getDate() === b.getDate();\n}\n\nfunction _addDays(date, days) {\n  var d = new Date(date);\n  d.setDate(d.getDate() + days);\n  return d;\n}\n\nfunction _startOfWeek(date) {\n  var firstDayOfWeek = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DaysOfWeek.Monday;\n  var d = new Date(date);\n  var day = d.getDay();\n  var diff = (day < firstDayOfWeek ? 7 : 0) + day - firstDayOfWeek;\n  d.setDate(d.getDate() - diff);\n  return d;\n}\n\nfunction _endOfWeek(date) {\n  var firstDayOfWeek = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DaysOfWeek.Monday;\n  var d = new Date(date);\n  var day = d.getDay();\n  var diff = (day < firstDayOfWeek ? -7 : 0) + 6 - (day - firstDayOfWeek);\n  d.setDate(d.getDate() + diff);\n  return d;\n}\n\nfunction startOfMonth(date) {\n  return new Date(date.getFullYear(), date.getMonth(), 1);\n}\n\nfunction endOfMonth(date) {\n  return new Date(date.getFullYear(), date.getMonth() + 1, 0);\n}\n\nfunction _setMonth(date, month) {\n  var d = new Date(date);\n  d.setMonth(month);\n  return d;\n}\n\nfunction _setYear(date, year) {\n  var d = new Date(date);\n  d.setFullYear(year);\n  return d;\n}\n/**\n * Check if date is within a min and max\n */\n\n\nfunction inRange(date, min, max) {\n  return clamp(date, min, max) === date;\n}\n/**\n * Ensures date is within range, returns min or max if out of bounds\n */\n\n\nfunction clamp(date, min, max) {\n  var time = date.getTime();\n\n  if (min && min instanceof Date && time < min.getTime()) {\n    return min;\n  }\n\n  if (max && max instanceof Date && time > max.getTime()) {\n    return max;\n  }\n\n  return date;\n}\n/**\n * given start and end date, return an (inclusive) array of all dates in between\n * @param start\n * @param end\n */\n\n\nfunction getDaysInRange(start, end) {\n  var days = [];\n  var current = start;\n\n  while (!isEqual(current, end)) {\n    days.push(current);\n    current = _addDays(current, 1);\n  }\n\n  days.push(current);\n  return days;\n}\n/**\n * given a date, return an array of dates from a calendar perspective\n * @param date\n * @param firstDayOfWeek\n */\n\n\nfunction getViewOfMonth(date) {\n  var firstDayOfWeek = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DaysOfWeek.Monday;\n\n  var start = _startOfWeek(startOfMonth(date), firstDayOfWeek);\n\n  var end = _endOfWeek(endOfMonth(date), firstDayOfWeek);\n\n  return getDaysInRange(start, end);\n}\n/**\n * Form random hash\n */\n\n\nfunction chr4() {\n  return Math.random().toString(16).slice(-4);\n}\n/**\n * Create random identifier with a prefix\n * @param prefix\n */\n\n\nfunction createIdentifier(prefix) {\n  return \"\".concat(prefix, \"-\").concat(chr4()).concat(chr4(), \"-\").concat(chr4(), \"-\").concat(chr4(), \"-\").concat(chr4(), \"-\").concat(chr4()).concat(chr4()).concat(chr4());\n}\n\nvar DatePickerInput = function DatePickerInput(_ref17) {\n  var onClick = _ref17.onClick,\n      dateFormatter = _ref17.dateFormatter,\n      localization = _ref17.localization,\n      name = _ref17.name,\n      formattedValue = _ref17.formattedValue,\n      valueAsDate = _ref17.valueAsDate,\n      value = _ref17.value,\n      identifier = _ref17.identifier,\n      disabled = _ref17.disabled,\n      required = _ref17.required,\n      role = _ref17.role,\n      buttonRef = _ref17.buttonRef,\n      inputRef = _ref17.inputRef,\n      onInput = _ref17.onInput,\n      onBlur = _ref17.onBlur,\n      onFocus = _ref17.onFocus;\n  return h(\"div\", {\n    class: \"duet-date__input-wrapper\"\n  }, h(\"input\", {\n    class: \"duet-date__input\",\n    value: formattedValue,\n    placeholder: localization.placeholder,\n    id: identifier,\n    disabled: disabled,\n    role: role,\n    required: required ? true : undefined,\n    \"aria-autocomplete\": \"none\",\n    onInput: onInput,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    autoComplete: \"off\",\n    ref: inputRef\n  }), h(\"input\", {\n    type: \"hidden\",\n    name: name,\n    value: value\n  }), h(\"button\", {\n    class: \"duet-date__toggle\",\n    onClick: onClick,\n    disabled: disabled,\n    ref: buttonRef,\n    type: \"button\"\n  }, h(\"span\", {\n    class: \"duet-date__toggle-icon\"\n  }, h(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"24\",\n    viewBox: \"0 0 21 21\",\n    width: \"24\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, h(\"g\", {\n    fill: \"none\",\n    \"fill-rule\": \"evenodd\",\n    transform: \"translate(2 2)\"\n  }, h(\"path\", {\n    d: \"m2.5.5h12c1.1045695 0 2 .8954305 2 2v12c0 1.1045695-.8954305 2-2 2h-12c-1.1045695 0-2-.8954305-2-2v-12c0-1.1045695.8954305-2 2-2z\",\n    stroke: \"currentColor\",\n    \"stroke-linecap\": \"round\",\n    \"stroke-linejoin\": \"round\"\n  }), h(\"path\", {\n    d: \"m.5 4.5h16\",\n    stroke: \"currentColor\",\n    \"stroke-linecap\": \"round\",\n    \"stroke-linejoin\": \"round\"\n  }), h(\"g\", {\n    fill: \"currentColor\"\n  }, h(\"circle\", {\n    cx: \"8.5\",\n    cy: \"8.5\",\n    r: \"1\"\n  }), h(\"circle\", {\n    cx: \"4.5\",\n    cy: \"8.5\",\n    r: \"1\"\n  }), h(\"circle\", {\n    cx: \"12.5\",\n    cy: \"8.5\",\n    r: \"1\"\n  }), h(\"circle\", {\n    cx: \"8.5\",\n    cy: \"12.5\",\n    r: \"1\"\n  }), h(\"circle\", {\n    cx: \"4.5\",\n    cy: \"12.5\",\n    r: \"1\"\n  }), h(\"circle\", {\n    cx: \"12.5\",\n    cy: \"12.5\",\n    r: \"1\"\n  }))))), h(\"span\", {\n    class: \"duet-date__vhidden\"\n  }, localization.buttonLabel, valueAsDate && h(\"span\", null, \", \", localization.selectedDateMessage, \" \", dateFormatter.format(valueAsDate)))));\n};\n\nvar DatePickerDay = function DatePickerDay(_ref18) {\n  var focusedDay = _ref18.focusedDay,\n      today = _ref18.today,\n      day = _ref18.day,\n      onDaySelect = _ref18.onDaySelect,\n      onKeyboardNavigation = _ref18.onKeyboardNavigation,\n      focusedDayRef = _ref18.focusedDayRef,\n      inRange = _ref18.inRange,\n      isSelected = _ref18.isSelected,\n      dateFormatter = _ref18.dateFormatter;\n  var isToday = isEqual(day, today);\n  var isFocused = isEqual(day, focusedDay);\n  var isDisabled = day.getMonth() !== focusedDay.getMonth();\n  var isOutsideRange = !inRange;\n\n  function handleClick(e) {\n    onDaySelect(e, day);\n  }\n\n  return h(\"button\", {\n    class: {\n      \"duet-date__day\": true,\n      \"is-outside\": isOutsideRange,\n      \"is-disabled\": isDisabled,\n      \"is-today\": isToday\n    },\n    tabIndex: isFocused ? 0 : -1,\n    onClick: handleClick,\n    onKeyDown: onKeyboardNavigation,\n    disabled: isOutsideRange || isDisabled,\n    type: \"button\",\n    \"aria-pressed\": isSelected ? \"true\" : \"false\",\n    ref: function ref(el) {\n      if (isFocused && el && focusedDayRef) {\n        focusedDayRef(el);\n      }\n    }\n  }, h(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, day.getDate()), h(\"span\", {\n    class: \"duet-date__vhidden\"\n  }, dateFormatter.format(day)));\n};\n\nfunction chunk(array, chunkSize) {\n  var result = [];\n\n  for (var _i6 = 0; _i6 < array.length; _i6 += chunkSize) {\n    result.push(array.slice(_i6, _i6 + chunkSize));\n  }\n\n  return result;\n}\n\nfunction mapWithOffset(array, startingOffset, mapFn) {\n  return array.map(function (_, i) {\n    var adjustedIndex = (i + startingOffset) % array.length;\n    return mapFn(array[adjustedIndex]);\n  });\n}\n\nvar DatePickerMonth = function DatePickerMonth(_ref19) {\n  var selectedDate = _ref19.selectedDate,\n      focusedDate = _ref19.focusedDate,\n      labelledById = _ref19.labelledById,\n      localization = _ref19.localization,\n      firstDayOfWeek = _ref19.firstDayOfWeek,\n      min = _ref19.min,\n      max = _ref19.max,\n      dateFormatter = _ref19.dateFormatter,\n      onDateSelect = _ref19.onDateSelect,\n      onKeyboardNavigation = _ref19.onKeyboardNavigation,\n      focusedDayRef = _ref19.focusedDayRef;\n  var today = new Date();\n  var days = getViewOfMonth(focusedDate, firstDayOfWeek);\n  return h(\"table\", {\n    class: \"duet-date__table\",\n    \"aria-labelledby\": labelledById\n  }, h(\"thead\", null, h(\"tr\", null, mapWithOffset(localization.dayNames, firstDayOfWeek, function (dayName) {\n    return h(\"th\", {\n      class: \"duet-date__table-header\",\n      scope: \"col\"\n    }, h(\"span\", {\n      \"aria-hidden\": \"true\"\n    }, dayName.substr(0, 2)), h(\"span\", {\n      class: \"duet-date__vhidden\"\n    }, dayName));\n  }))), h(\"tbody\", null, chunk(days, 7).map(function (week) {\n    return h(\"tr\", {\n      class: \"duet-date__row\"\n    }, week.map(function (day) {\n      return h(\"td\", {\n        class: \"duet-date__cell\"\n      }, h(DatePickerDay, {\n        day: day,\n        today: today,\n        focusedDay: focusedDate,\n        isSelected: isEqual(day, selectedDate),\n        inRange: inRange(day, min, max),\n        onDaySelect: onDateSelect,\n        dateFormatter: dateFormatter,\n        onKeyboardNavigation: onKeyboardNavigation,\n        focusedDayRef: focusedDayRef\n      }));\n    }));\n  })));\n};\n\nvar localization = {\n  buttonLabel: \"Choose date\",\n  placeholder: \"YYYY-MM-DD\",\n  selectedDateMessage: \"Selected date is\",\n  prevMonthLabel: \"Previous month\",\n  nextMonthLabel: \"Next month\",\n  monthSelectLabel: \"Month\",\n  yearSelectLabel: \"Year\",\n  closeLabel: \"Close window\",\n  keyboardInstruction: \"You can use arrow keys to navigate dates\",\n  calendarHeading: \"Choose a date\",\n  dayNames: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  monthNames: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  monthNamesShort: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n  locale: \"en-GB\"\n};\nvar isoAdapter = {\n  parse: parseISODate,\n  format: printISODate\n};\nvar duetDatePickerCss = \".duet-date *,.duet-date *::before,.duet-date *::after{box-sizing:border-box;margin:0;width:auto}.duet-date{box-sizing:border-box;color:var(--duet-color-text);display:block;font-family:var(--duet-font);margin:0;position:relative;text-align:left;width:100%}.duet-date__input{-webkit-appearance:none;appearance:none;background:var(--duet-color-surface);border:1px solid var(--duet-color-text);border-radius:var(--duet-radius);color:var(--duet-color-text);float:none;font-family:var(--duet-font);font-size:100%;line-height:normal;padding:14px 60px 14px 14px;width:100%}.duet-date__input:focus{border-color:var(--duet-color-primary);box-shadow:0 0 0 1px var(--duet-color-primary);outline:0}.duet-date__input::-webkit-input-placeholder{color:var(--duet-color-placeholder);opacity:1}.duet-date__input:-moz-placeholder{color:var(--duet-color-placeholder);opacity:1}.duet-date__input:-ms-input-placeholder{color:var(--duet-color-placeholder)}.duet-date__input-wrapper{position:relative;width:100%}.duet-date__toggle{-moz-appearance:none;-webkit-appearance:none;-webkit-user-select:none;align-items:center;appearance:none;background:var(--duet-color-button);border:0;border-radius:0;border-bottom-right-radius:var(--duet-radius);border-top-right-radius:var(--duet-radius);box-shadow:inset 1px 0 0 rgba(0, 0, 0, 0.1);color:var(--duet-color-text);cursor:pointer;display:flex;height:calc(100% - 2px);justify-content:center;padding:0;position:absolute;right:1px;top:1px;user-select:none;width:48px;z-index:2}.duet-date__toggle:focus{box-shadow:0 0 0 2px var(--duet-color-primary);outline:0}.duet-date__toggle-icon{display:flex;flex-basis:100%;justify-content:center;align-items:center}.duet-date__dialog{display:flex;left:0;min-width:320px;opacity:0;position:absolute;top:100%;transform:scale(0.96) translateZ(0) translateY(-20px);transform-origin:top right;transition:transform 300ms ease, opacity 300ms ease, visibility 300ms ease;visibility:hidden;width:100%;will-change:transform, opacity, visibility;z-index:var(--duet-z-index)}@media (max-width: 35.9375em){.duet-date__dialog{background:var(--duet-color-overlay);bottom:0;position:fixed;right:0;top:0;transform:translateZ(0);transform-origin:bottom center}}.duet-date__dialog.is-left{left:auto;right:0;width:auto}.duet-date__dialog.is-active{opacity:1;transform:scale(1.0001) translateZ(0) translateY(0);visibility:visible}.duet-date__dialog-content{background:var(--duet-color-surface);border:1px solid rgba(0, 0, 0, 0.1);border-radius:var(--duet-radius);box-shadow:0 4px 10px 0 rgba(0, 0, 0, 0.1);margin-left:auto;margin-top:8px;max-width:310px;min-width:290px;padding:16px 16px 20px;position:relative;transform:none;width:100%;z-index:var(--duet-z-index)}@media (max-width: 35.9375em){.duet-date__dialog-content{border:0;border-radius:0;border-top-left-radius:var(--duet-radius);border-top-right-radius:var(--duet-radius);bottom:0;left:0;margin:0;max-width:none;min-height:26em;opacity:0;padding:0 8% 20px;position:absolute;transform:translateZ(0) translateY(100%);transition:transform 400ms ease, opacity 400ms ease, visibility 400ms ease;visibility:hidden;will-change:transform, opacity, visibility}.is-active .duet-date__dialog-content{opacity:1;transform:translateZ(0) translateY(0);visibility:visible}}.duet-date__table{border-collapse:collapse;border-spacing:0;color:var(--duet-color-text);font-size:1rem;font-weight:var(--duet-font-normal);line-height:1.25;text-align:center;width:100%}.duet-date__table-header{font-size:0.75rem;font-weight:var(--duet-font-bold);letter-spacing:1px;line-height:1.25;padding-bottom:8px;text-decoration:none;text-transform:uppercase}.duet-date__cell{text-align:center}.duet-date__day{-moz-appearance:none;-webkit-appearance:none;appearance:none;background:transparent;border:0;border-radius:50%;color:var(--duet-color-text);cursor:pointer;display:inline-block;font-family:var(--duet-font);font-size:0.875rem;font-variant-numeric:tabular-nums;font-weight:var(--duet-font-normal);height:36px;line-height:1.25;padding:0 0 1px;position:relative;text-align:center;vertical-align:middle;width:36px;z-index:1}.duet-date__day.is-today{box-shadow:0 0 0 1px var(--duet-color-primary);position:relative;z-index:200}.duet-date__day:hover::before,.duet-date__day.is-today::before{background:var(--duet-color-primary);border-radius:50%;bottom:0;content:\\\"\\\";left:0;opacity:0.06;position:absolute;right:0;top:0}.duet-date__day[aria-pressed=true],.duet-date__day:focus{background:var(--duet-color-primary);box-shadow:none;color:var(--duet-color-text-active);outline:0}.duet-date__day:active{background:var(--duet-color-primary);box-shadow:0 0 5px var(--duet-color-primary);color:var(--duet-color-text-active);z-index:200}.duet-date__day:focus{box-shadow:0 0 5px var(--duet-color-primary);z-index:200}.duet-date__day.is-disabled{background:transparent;box-shadow:none;color:var(--duet-color-text);cursor:default;opacity:0.5}.duet-date__day.is-disabled::before{display:none}.duet-date__day.is-outside{background:var(--duet-color-button);box-shadow:none;color:var(--duet-color-text);cursor:default;opacity:0.6;pointer-events:none}.duet-date__day.is-outside::before{display:none}.duet-date__header{align-items:center;display:flex;justify-content:space-between;margin-bottom:16px;width:100%}.duet-date__nav{white-space:nowrap}.duet-date__prev,.duet-date__next{-moz-appearance:none;-webkit-appearance:none;align-items:center;appearance:none;background:var(--duet-color-button);border:0;border-radius:50%;color:var(--duet-color-text);cursor:pointer;display:inline-flex;height:32px;justify-content:center;margin-left:8px;padding:0;transition:background-color 300ms ease;width:32px}@media (max-width: 35.9375em){.duet-date__prev,.duet-date__next{height:40px;width:40px}}.duet-date__prev:focus,.duet-date__next:focus{box-shadow:0 0 0 2px var(--duet-color-primary);outline:0}.duet-date__prev:active:focus,.duet-date__next:active:focus{box-shadow:none}.duet-date__prev:disabled,.duet-date__next:disabled{cursor:default;opacity:0.5}.duet-date__prev svg,.duet-date__next svg{margin:0 auto}.duet-date__select{display:inline-flex;margin-top:4px;position:relative}.duet-date__select span{margin-right:4px}.duet-date__select select{cursor:pointer;font-size:1rem;height:100%;left:0;opacity:0;position:absolute;top:0;width:100%;z-index:2}.duet-date__select select:focus+.duet-date__select-label{box-shadow:0 0 0 2px var(--duet-color-primary)}.duet-date__select-label{align-items:center;border-radius:var(--duet-radius);color:var(--duet-color-text);display:flex;font-size:1.25rem;font-weight:var(--duet-font-bold);line-height:1.25;padding:0 4px 0 8px;pointer-events:none;position:relative;width:100%;z-index:1}.duet-date__select-label svg{width:16px;height:16px}.duet-date__mobile{align-items:center;border-bottom:1px solid rgba(0, 0, 0, 0.12);display:flex;justify-content:space-between;margin-bottom:20px;margin-left:-10%;overflow:hidden;padding:12px 20px;position:relative;text-overflow:ellipsis;white-space:nowrap;width:120%}@media (min-width: 36em){.duet-date__mobile{border:0;margin:0;overflow:visible;padding:0;position:absolute;right:-8px;top:-8px;width:auto}}.duet-date__mobile-heading{display:inline-block;font-weight:var(--duet-font-bold);max-width:84%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}@media (min-width: 36em){.duet-date__mobile-heading{display:none}}.duet-date__close{-webkit-appearance:none;align-items:center;appearance:none;background:var(--duet-color-button);border:0;border-radius:50%;color:var(--duet-color-text);cursor:pointer;display:flex;height:24px;justify-content:center;padding:0;width:24px}@media (min-width: 36em){.duet-date__close{opacity:0}}.duet-date__close:focus{box-shadow:0 0 0 2px var(--duet-color-primary);outline:none}@media (min-width: 36em){.duet-date__close:focus{opacity:1}}.duet-date__close svg{margin:0 auto}.duet-date__vhidden{border:0;clip:rect(1px, 1px, 1px, 1px);height:1px;overflow:hidden;padding:0;position:absolute;top:0;width:1px}\";\n\nfunction range(from, to) {\n  var result = [];\n\n  for (var i = from; i <= to; i++) {\n    result.push(i);\n  }\n\n  return result;\n}\n\nvar keyCode = {\n  TAB: 9,\n  ESC: 27,\n  SPACE: 32,\n  PAGE_UP: 33,\n  PAGE_DOWN: 34,\n  END: 35,\n  HOME: 36,\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\nvar DISALLOWED_CHARACTERS = /[^0-9\\.\\/\\-]+/g;\nvar TRANSITION_MS = 300;\n\nvar DuetDatePicker = /*#__PURE__*/function (_HTMLElement) {\n  _inherits(DuetDatePicker, _HTMLElement);\n\n  var _super = _createSuper(DuetDatePicker);\n\n  function DuetDatePicker() {\n    var _this2;\n\n    _classCallCheck(this, DuetDatePicker);\n\n    _this2 = _super.call(this);\n\n    _this2.__registerHost();\n\n    _this2.duetChange = createEvent(_assertThisInitialized(_this2), \"duetChange\", 7);\n    _this2.duetBlur = createEvent(_assertThisInitialized(_this2), \"duetBlur\", 7);\n    _this2.duetFocus = createEvent(_assertThisInitialized(_this2), \"duetFocus\", 7);\n    /**\n     * Own Properties\n     */\n\n    _this2.monthSelectId = createIdentifier(\"DuetDateMonth\");\n    _this2.yearSelectId = createIdentifier(\"DuetDateYear\");\n    _this2.dialogLabelId = createIdentifier(\"DuetDateLabel\");\n    _this2.initialTouchX = null;\n    _this2.initialTouchY = null;\n    /**\n     * State() variables\n     */\n\n    _this2.activeFocus = false;\n    _this2.focusedDay = new Date();\n    _this2.open = false;\n    /**\n     * Public Property API\n     */\n\n    /**\n     * Name of the date picker input.\n     */\n\n    _this2.name = \"date\";\n    /**\n     * Adds a unique identifier for the date picker input. Use this instead of html `id` attribute.\n     */\n\n    _this2.identifier = \"\";\n    /**\n     * Makes the date picker input component disabled. This prevents users from being able to\n     * interact with the input, and conveys its inactive state to assistive technologies.\n     */\n\n    _this2.disabled = false;\n    /**\n     * Forces the opening direction of the calendar modal to be always left or right.\n     * This setting can be useful when the input is smaller than the opening date picker\n     * would be as by default the picker always opens towards right.\n     */\n\n    _this2.direction = \"right\";\n    /**\n     * Should the input be marked as required?\n     */\n\n    _this2.required = false;\n    /**\n     * Date value. Must be in IS0-8601 format: YYYY-MM-DD.\n     */\n\n    _this2.value = \"\";\n    /**\n     * Minimum date allowed to be picked. Must be in IS0-8601 format: YYYY-MM-DD.\n     * This setting can be used alone or together with the max property.\n     */\n\n    _this2.min = \"\";\n    /**\n     * Maximum date allowed to be picked. Must be in IS0-8601 format: YYYY-MM-DD.\n     * This setting can be used alone or together with the min property.\n     */\n\n    _this2.max = \"\";\n    /**\n     * Which day is considered first day of the week? `0` for Sunday, `1` for Monday, etc.\n     * Default is Monday.\n     */\n\n    _this2.firstDayOfWeek = DaysOfWeek.Monday;\n    /**\n     * Button labels, day names, month names, etc, used for localization.\n     * Default is English.\n     */\n\n    _this2.localization = localization;\n    /**\n     * Date adapter, for custom parsing/formatting.\n     * Must be object with a `parse` function which accepts a `string` and returns a `Date`,\n     * and a `format` function which accepts a `Date` and returns a `string`.\n     * Default is IS0-8601 parsing and formatting.\n     */\n\n    _this2.dateAdapter = isoAdapter;\n    /**\n     * Local methods.\n     */\n\n    _this2.enableActiveFocus = function () {\n      _this2.activeFocus = true;\n    };\n\n    _this2.disableActiveFocus = function () {\n      _this2.activeFocus = false;\n    };\n\n    _this2.toggleOpen = function (e) {\n      e.preventDefault();\n      _this2.open ? _this2.hide(false) : _this2.show();\n    };\n\n    _this2.handleEscKey = function (event) {\n      if (event.keyCode === keyCode.ESC) {\n        _this2.hide();\n      }\n    };\n\n    _this2.handleBlur = function (event) {\n      event.stopPropagation();\n\n      _this2.duetBlur.emit({\n        component: \"duet-date-picker\"\n      });\n    };\n\n    _this2.handleFocus = function (event) {\n      event.stopPropagation();\n\n      _this2.duetFocus.emit({\n        component: \"duet-date-picker\"\n      });\n    };\n\n    _this2.handleTouchStart = function (event) {\n      var touch = event.changedTouches[0];\n      _this2.initialTouchX = touch.pageX;\n      _this2.initialTouchY = touch.pageY;\n    };\n\n    _this2.handleTouchMove = function (event) {\n      event.preventDefault();\n    };\n\n    _this2.handleTouchEnd = function (event) {\n      var touch = event.changedTouches[0];\n      var distX = touch.pageX - _this2.initialTouchX; // get horizontal dist traveled\n\n      var distY = touch.pageY - _this2.initialTouchY; // get vertical dist traveled\n\n      var threshold = 70;\n      var isHorizontalSwipe = Math.abs(distX) >= threshold && Math.abs(distY) <= threshold;\n      var isDownwardsSwipe = Math.abs(distY) >= threshold && Math.abs(distX) <= threshold && distY > 0;\n\n      if (isHorizontalSwipe) {\n        _this2.addMonths(distX < 0 ? 1 : -1);\n      } else if (isDownwardsSwipe) {\n        _this2.hide(false);\n\n        event.preventDefault();\n      }\n\n      _this2.initialTouchY = null;\n      _this2.initialTouchX = null;\n    };\n\n    _this2.handleNextMonthClick = function (event) {\n      event.preventDefault();\n\n      _this2.addMonths(1);\n    };\n\n    _this2.handlePreviousMonthClick = function (event) {\n      event.preventDefault();\n\n      _this2.addMonths(-1);\n    };\n\n    _this2.handleFirstFocusableKeydown = function (event) {\n      // this ensures focus is trapped inside the dialog\n      if (event.keyCode === keyCode.TAB && event.shiftKey) {\n        _this2.focusedDayNode.focus();\n\n        event.preventDefault();\n      }\n    };\n\n    _this2.handleKeyboardNavigation = function (event) {\n      // handle tab separately, since it needs to be treated\n      // differently to other keyboard interactions\n      if (event.keyCode === keyCode.TAB && !event.shiftKey) {\n        event.preventDefault();\n\n        _this2.firstFocusableElement.focus();\n\n        return;\n      }\n\n      var handled = true;\n\n      switch (event.keyCode) {\n        case keyCode.RIGHT:\n          _this2.addDays(1);\n\n          break;\n\n        case keyCode.LEFT:\n          _this2.addDays(-1);\n\n          break;\n\n        case keyCode.DOWN:\n          _this2.addDays(7);\n\n          break;\n\n        case keyCode.UP:\n          _this2.addDays(-7);\n\n          break;\n\n        case keyCode.PAGE_UP:\n          if (event.shiftKey) {\n            _this2.addYears(-1);\n          } else {\n            _this2.addMonths(-1);\n          }\n\n          break;\n\n        case keyCode.PAGE_DOWN:\n          if (event.shiftKey) {\n            _this2.addYears(1);\n          } else {\n            _this2.addMonths(1);\n          }\n\n          break;\n\n        case keyCode.HOME:\n          _this2.startOfWeek();\n\n          break;\n\n        case keyCode.END:\n          _this2.endOfWeek();\n\n          break;\n\n        default:\n          handled = false;\n      }\n\n      if (handled) {\n        event.preventDefault();\n\n        _this2.enableActiveFocus();\n      }\n    };\n\n    _this2.handleDaySelect = function (_event, day) {\n      if (!inRange(day, parseISODate(_this2.min), parseISODate(_this2.max))) {\n        return;\n      }\n\n      if (day.getMonth() === _this2.focusedDay.getMonth()) {\n        _this2.setValue(day);\n\n        _this2.hide();\n      } else {\n        _this2.setFocusedDay(day);\n      }\n    };\n\n    _this2.handleMonthSelect = function (e) {\n      _this2.setMonth(parseInt(e.target.value, 10));\n    };\n\n    _this2.handleYearSelect = function (e) {\n      _this2.setYear(parseInt(e.target.value, 10));\n    };\n\n    _this2.handleInputChange = function (e) {\n      var target = e.target; // clean up any invalid characters\n\n      target.value = target.value.replace(DISALLOWED_CHARACTERS, \"\");\n\n      var parsed = _this2.dateAdapter.parse(target.value, createDate);\n\n      if (parsed || target.value === \"\") {\n        _this2.setValue(parsed);\n      }\n    };\n\n    _this2.processFocusedDayNode = function (element) {\n      _this2.focusedDayNode = element;\n\n      if (_this2.activeFocus && _this2.open) {\n        setTimeout(function () {\n          return element.focus();\n        }, 0);\n      }\n    };\n\n    return _this2;\n  }\n\n  _createClass(DuetDatePicker, [{\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      this.createDateFormatters();\n    }\n  }, {\n    key: \"createDateFormatters\",\n    value: function createDateFormatters() {\n      this.dateFormatShort = new Intl.DateTimeFormat(this.localization.locale, {\n        day: \"numeric\",\n        month: \"long\"\n      });\n      this.dateFormatLong = new Intl.DateTimeFormat(this.localization.locale, {\n        day: \"numeric\",\n        month: \"long\",\n        year: \"numeric\"\n      });\n    }\n    /**\n     * Component event handling.\n     */\n\n  }, {\n    key: \"handleDocumentClick\",\n    value: function handleDocumentClick(e) {\n      if (!this.open) {\n        return;\n      }\n\n      var target = e.target; // TODO: stopPropagation only on open??\n      // the dialog and the button aren't considered clicks outside.\n      // dialog for obvious reasons, but the button needs to be skipped\n      // so that two things are possible:\n      //\n      // a) clicking again on the button when dialog is open should close the modal.\n      //    without skipping the button here, we would see a click outside\n      //    _and_ a click on the button, so the `open` state goes\n      //    open -> close (click outside) -> open (click button)\n      //\n      // b) clicking another date picker's button should close the current calendar\n      //    and open the new one. this means we can't stopPropagation() on the button itself\n      //\n      // this was the only satisfactory combination of things to get the above to work\n\n      if (this.dialogWrapperNode.contains(target) || this.datePickerButton.contains(target)) {\n        return;\n      }\n\n      this.hide(false);\n    }\n    /**\n     * Public methods API\n     */\n\n    /**\n     * Sets focus on the date picker's input. Use this method instead of the global `focus()`.\n     */\n\n  }, {\n    key: \"setFocus\",\n    value: function () {\n      var _setFocus = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", this.datePickerInput.focus());\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function setFocus() {\n        return _setFocus.apply(this, arguments);\n      }\n\n      return setFocus;\n    }()\n    /**\n     * Show the calendar modal, moving focus to the calendar inside.\n     */\n\n  }, {\n    key: \"show\",\n    value: function () {\n      var _show = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var _this3 = this;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.open = true;\n                this.setFocusedDay(parseISODate(this.value) || new Date());\n                clearTimeout(this.focusTimeoutId);\n                this.focusTimeoutId = setTimeout(function () {\n                  return _this3.monthSelectNode.focus();\n                }, TRANSITION_MS);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function show() {\n        return _show.apply(this, arguments);\n      }\n\n      return show;\n    }()\n    /**\n     * Hide the calendar modal. Set `moveFocusToButton` to false to prevent focus\n     * returning to the date picker's button. Default is true.\n     */\n\n  }, {\n    key: \"hide\",\n    value: function () {\n      var _hide = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var _this4 = this;\n\n        var moveFocusToButton,\n            _args5 = arguments;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                moveFocusToButton = _args5.length > 0 && _args5[0] !== undefined ? _args5[0] : true;\n                this.open = false; // in cases where calendar is quickly shown and hidden\n                // we should avoid moving focus to the button\n\n                clearTimeout(this.focusTimeoutId);\n\n                if (moveFocusToButton) {\n                  // iOS VoiceOver needs to wait for all transitions to finish.\n                  setTimeout(function () {\n                    return _this4.datePickerButton.focus();\n                  }, TRANSITION_MS + 200);\n                }\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function hide() {\n        return _hide.apply(this, arguments);\n      }\n\n      return hide;\n    }()\n  }, {\n    key: \"addDays\",\n    value: function addDays(days) {\n      this.setFocusedDay(_addDays(this.focusedDay, days));\n    }\n  }, {\n    key: \"addMonths\",\n    value: function addMonths(months) {\n      this.setMonth(this.focusedDay.getMonth() + months);\n    }\n  }, {\n    key: \"addYears\",\n    value: function addYears(years) {\n      this.setYear(this.focusedDay.getFullYear() + years);\n    }\n  }, {\n    key: \"startOfWeek\",\n    value: function startOfWeek() {\n      this.setFocusedDay(_startOfWeek(this.focusedDay, this.firstDayOfWeek));\n    }\n  }, {\n    key: \"endOfWeek\",\n    value: function endOfWeek() {\n      this.setFocusedDay(_endOfWeek(this.focusedDay, this.firstDayOfWeek));\n    }\n  }, {\n    key: \"setMonth\",\n    value: function setMonth(month) {\n      var min = _setMonth(startOfMonth(this.focusedDay), month);\n\n      var max = endOfMonth(min);\n\n      var date = _setMonth(this.focusedDay, month);\n\n      this.setFocusedDay(clamp(date, min, max));\n    }\n  }, {\n    key: \"setYear\",\n    value: function setYear(year) {\n      var min = _setYear(startOfMonth(this.focusedDay), year);\n\n      var max = endOfMonth(min);\n\n      var date = _setYear(this.focusedDay, year);\n\n      this.setFocusedDay(clamp(date, min, max));\n    }\n  }, {\n    key: \"setFocusedDay\",\n    value: function setFocusedDay(day) {\n      this.focusedDay = clamp(day, parseISODate(this.min), parseISODate(this.max));\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(date) {\n      this.value = printISODate(date);\n      this.duetChange.emit({\n        component: \"duet-date-picker\",\n        value: this.value,\n        valueAsDate: date\n      });\n    }\n    /**\n     * render() function\n     * Always the last one in the class.\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var valueAsDate = parseISODate(this.value);\n      var formattedDate = valueAsDate && this.dateAdapter.format(valueAsDate);\n      var selectedYear = (valueAsDate || this.focusedDay).getFullYear();\n      var focusedMonth = this.focusedDay.getMonth();\n      var focusedYear = this.focusedDay.getFullYear();\n      var minDate = parseISODate(this.min);\n      var maxDate = parseISODate(this.max);\n      var prevMonthDisabled = minDate != null && minDate.getMonth() === focusedMonth && minDate.getFullYear() === focusedYear;\n      var nextMonthDisabled = maxDate != null && maxDate.getMonth() === focusedMonth && maxDate.getFullYear() === focusedYear;\n      var minYear = minDate ? minDate.getFullYear() : selectedYear - 10;\n      var maxYear = maxDate ? maxDate.getFullYear() : selectedYear + 10;\n      return h(Host, null, h(\"div\", {\n        class: \"duet-date\"\n      }, h(DatePickerInput, {\n        dateFormatter: this.dateFormatLong,\n        value: this.value,\n        valueAsDate: valueAsDate,\n        formattedValue: formattedDate,\n        onInput: this.handleInputChange,\n        onBlur: this.handleBlur,\n        onFocus: this.handleFocus,\n        onClick: this.toggleOpen,\n        name: this.name,\n        disabled: this.disabled,\n        role: this.role,\n        required: this.required,\n        identifier: this.identifier,\n        localization: this.localization,\n        buttonRef: function buttonRef(element) {\n          return _this5.datePickerButton = element;\n        },\n        inputRef: function inputRef(element) {\n          return _this5.datePickerInput = element;\n        }\n      }), h(\"div\", {\n        class: {\n          \"duet-date__dialog\": true,\n          \"is-left\": this.direction === \"left\",\n          \"is-active\": this.open\n        },\n        role: \"dialog\",\n        \"aria-modal\": \"true\",\n        \"aria-hidden\": this.open ? \"false\" : \"true\",\n        \"aria-labelledby\": this.dialogLabelId,\n        onTouchMove: this.handleTouchMove,\n        onTouchStart: this.handleTouchStart,\n        onTouchEnd: this.handleTouchEnd\n      }, h(\"div\", {\n        class: \"duet-date__dialog-content\",\n        onKeyDown: this.handleEscKey,\n        ref: function ref(element) {\n          return _this5.dialogWrapperNode = element;\n        }\n      }, h(\"div\", {\n        class: \"duet-date__vhidden duet-date__instructions\",\n        \"aria-live\": \"polite\"\n      }, this.localization.keyboardInstruction), h(\"div\", {\n        class: \"duet-date__mobile\",\n        onFocusin: this.disableActiveFocus\n      }, h(\"label\", {\n        class: \"duet-date__mobile-heading\"\n      }, this.localization.calendarHeading), h(\"button\", {\n        class: \"duet-date__close\",\n        ref: function ref(element) {\n          return _this5.firstFocusableElement = element;\n        },\n        onKeyDown: this.handleFirstFocusableKeydown,\n        onClick: function onClick() {\n          return _this5.hide();\n        },\n        type: \"button\"\n      }, h(\"svg\", {\n        \"aria-hidden\": \"true\",\n        fill: \"currentColor\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"16\",\n        height: \"16\",\n        viewBox: \"0 0 24 24\"\n      }, h(\"path\", {\n        d: \"M0 0h24v24H0V0z\",\n        fill: \"none\"\n      }), h(\"path\", {\n        d: \"M18.3 5.71c-.39-.39-1.02-.39-1.41 0L12 10.59 7.11 5.7c-.39-.39-1.02-.39-1.41 0-.39.39-.39 1.02 0 1.41L10.59 12 5.7 16.89c-.39.39-.39 1.02 0 1.41.39.39 1.02.39 1.41 0L12 13.41l4.89 4.89c.39.39 1.02.39 1.41 0 .39-.39.39-1.02 0-1.41L13.41 12l4.89-4.89c.38-.38.38-1.02 0-1.4z\"\n      })), h(\"span\", {\n        class: \"duet-date__vhidden\"\n      }, this.localization.closeLabel))), h(\"div\", {\n        class: \"duet-date__header\",\n        onFocusin: this.disableActiveFocus\n      }, h(\"div\", null, h(\"h2\", {\n        id: this.dialogLabelId,\n        class: \"duet-date__vhidden\",\n        \"aria-live\": \"polite\",\n        \"aria-atomic\": \"true\"\n      }, this.localization.monthNames[focusedMonth], \" \", this.focusedDay.getFullYear()), h(\"label\", {\n        htmlFor: this.monthSelectId,\n        class: \"duet-date__vhidden\"\n      }, this.localization.monthSelectLabel), h(\"div\", {\n        class: \"duet-date__select\"\n      }, h(\"select\", {\n        id: this.monthSelectId,\n        class: \"duet-date__select--month\",\n        ref: function ref(element) {\n          return _this5.monthSelectNode = element;\n        },\n        onChange: this.handleMonthSelect\n      }, this.localization.monthNames.map(function (month, i) {\n        return h(\"option\", {\n          key: month,\n          value: i,\n          selected: i === focusedMonth\n        }, month);\n      })), h(\"div\", {\n        class: \"duet-date__select-label\",\n        \"aria-hidden\": \"true\"\n      }, h(\"span\", null, this.localization.monthNamesShort[focusedMonth]), h(\"svg\", {\n        fill: \"currentColor\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"16\",\n        height: \"16\",\n        viewBox: \"0 0 24 24\"\n      }, h(\"path\", {\n        d: \"M8.12 9.29L12 13.17l3.88-3.88c.39-.39 1.02-.39 1.41 0 .39.39.39 1.02 0 1.41l-4.59 4.59c-.39.39-1.02.39-1.41 0L6.7 10.7c-.39-.39-.39-1.02 0-1.41.39-.38 1.03-.39 1.42 0z\"\n      })))), h(\"label\", {\n        htmlFor: this.yearSelectId,\n        class: \"duet-date__vhidden\"\n      }, this.localization.yearSelectLabel), h(\"div\", {\n        class: \"duet-date__select\"\n      }, h(\"select\", {\n        id: this.yearSelectId,\n        class: \"duet-date__select--year\",\n        onChange: this.handleYearSelect\n      }, range(minYear, maxYear).map(function (year) {\n        return h(\"option\", {\n          key: year,\n          selected: year === focusedYear\n        }, year);\n      })), h(\"div\", {\n        class: \"duet-date__select-label\",\n        \"aria-hidden\": \"true\"\n      }, h(\"span\", null, this.focusedDay.getFullYear()), h(\"svg\", {\n        fill: \"currentColor\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"16\",\n        height: \"16\",\n        viewBox: \"0 0 24 24\"\n      }, h(\"path\", {\n        d: \"M8.12 9.29L12 13.17l3.88-3.88c.39-.39 1.02-.39 1.41 0 .39.39.39 1.02 0 1.41l-4.59 4.59c-.39.39-1.02.39-1.41 0L6.7 10.7c-.39-.39-.39-1.02 0-1.41.39-.38 1.03-.39 1.42 0z\"\n      }))))), h(\"div\", {\n        class: \"duet-date__nav\"\n      }, h(\"button\", {\n        class: \"duet-date__prev\",\n        onClick: this.handlePreviousMonthClick,\n        disabled: prevMonthDisabled,\n        type: \"button\"\n      }, h(\"svg\", {\n        \"aria-hidden\": \"true\",\n        fill: \"currentColor\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"21\",\n        height: \"21\",\n        viewBox: \"0 0 24 24\"\n      }, h(\"path\", {\n        d: \"M14.71 15.88L10.83 12l3.88-3.88c.39-.39.39-1.02 0-1.41-.39-.39-1.02-.39-1.41 0L8.71 11.3c-.39.39-.39 1.02 0 1.41l4.59 4.59c.39.39 1.02.39 1.41 0 .38-.39.39-1.03 0-1.42z\"\n      })), h(\"span\", {\n        class: \"duet-date__vhidden\"\n      }, this.localization.prevMonthLabel)), h(\"button\", {\n        class: \"duet-date__next\",\n        onClick: this.handleNextMonthClick,\n        disabled: nextMonthDisabled,\n        type: \"button\"\n      }, h(\"svg\", {\n        \"aria-hidden\": \"true\",\n        fill: \"currentColor\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"21\",\n        height: \"21\",\n        viewBox: \"0 0 24 24\"\n      }, h(\"path\", {\n        d: \"M9.29 15.88L13.17 12 9.29 8.12c-.39-.39-.39-1.02 0-1.41.39-.39 1.02-.39 1.41 0l4.59 4.59c.39.39.39 1.02 0 1.41L10.7 17.3c-.39.39-1.02.39-1.41 0-.38-.39-.39-1.03 0-1.42z\"\n      })), h(\"span\", {\n        class: \"duet-date__vhidden\"\n      }, this.localization.nextMonthLabel)))), h(DatePickerMonth, {\n        dateFormatter: this.dateFormatShort,\n        selectedDate: valueAsDate,\n        focusedDate: this.focusedDay,\n        onDateSelect: this.handleDaySelect,\n        onKeyboardNavigation: this.handleKeyboardNavigation,\n        labelledById: this.dialogLabelId,\n        localization: this.localization,\n        firstDayOfWeek: this.firstDayOfWeek,\n        focusedDayRef: this.processFocusedDayNode,\n        min: minDate,\n        max: maxDate\n      })))));\n    }\n  }, {\n    key: \"element\",\n    get: function get() {\n      return this;\n    }\n  }], [{\n    key: \"watchers\",\n    get: function get() {\n      return {\n        \"localization\": [\"createDateFormatters\"]\n      };\n    }\n  }, {\n    key: \"style\",\n    get: function get() {\n      return duetDatePickerCss;\n    }\n  }]);\n\n  return DuetDatePicker;\n}( /*#__PURE__*/_wrapNativeSuper(HTMLElement));\n\nvar DuetDatePicker$1 = /*@__PURE__*/proxyCustomElement(DuetDatePicker, [0, \"duet-date-picker\", {\n  \"name\": [1],\n  \"identifier\": [1],\n  \"disabled\": [516],\n  \"role\": [1],\n  \"direction\": [1],\n  \"required\": [4],\n  \"value\": [513],\n  \"min\": [1],\n  \"max\": [1],\n  \"firstDayOfWeek\": [2, \"first-day-of-week\"],\n  \"localization\": [16],\n  \"dateAdapter\": [16],\n  \"activeFocus\": [32],\n  \"focusedDay\": [32],\n  \"open\": [32]\n}, [[6, \"click\", \"handleDocumentClick\"]]]);\nvar datePickerCss = \"duet-date-picker{--duet-color-primary:var(--scl-color-primary, #e20074);--duet-color-text:var(--scl-color-text-standard, #1a1a1a);--duet-color-overlay:var(--scl-color-background-standard, #ffffff);--duet-font:var(--scl-font-family-sans);--duet-font-normal:var(--scl-font-weight-regular);--duet-font-bold:var(--scl-font-weight-medium);--duet-color-placeholder:var(--scl-color-grey-60);--duet-radius:var(--scl-radius-8);--duet-color-text-active:var(--scl-color-white, #ffffff);--duet-color-button:var(--scl-color-background-standard, #ffffff);--duet-color-surface:var(--scl-color-background-standard, #ffffff);--duet-z-index:600;--spacing-heading:0 0 var(--scl-spacing-16) 0;--font-size-heading:var(--scl-font-size-20);--font-size-select-label:var(--scl-font-size-16);--radius-day:var(--scl-radius-12);--font-size-day:var(--scl-font-size-16);--font-size-table-header:var(--font-size-day);--font-weight-table-header:var(--scl-font-weight-extrabold)}duet-date-picker .duet-date__input{border:var(--scl-spacing-1) solid var(--scl-color-text-standard);padding:var(--scl-spacing-12) var(--scl-spacing-12) 0 var(--scl-spacing-12);height:var(--scl-spacing-48)}duet-date-picker .duet-date__input:hover{border:var(--scl-spacing-1) solid var(--scl-color-primary-hover)}duet-date-picker .duet-date__input:focus{box-shadow:0 0 0 var(--scl-spacing-2) var(--scl-color-focus);border:var(--scl-spacing-1) solid var(--scl-color-text-standard)}duet-date-picker .duet-date__toggle{border-radius:0 var(--duet-radius) var(--duet-radius) 0;background:transparent}duet-date-picker .duet-date__toggle:focus{box-shadow:0 0 0 var(--scl-spacing-2) var(--scl-color-focus)}duet-date-picker .duet-date__toggle:hover scale-icon-content-calendar{color:var(--scl-color-primary-hover)}duet-date-picker .duet-date__toggle:active scale-icon-content-calendar{color:var(--scl-color-primary-active)}@media screen and (forced-colors: active), (-ms-high-contrast: active){duet-date-picker .duet-date__toggle scale-icon-content-calendar,duet-date-picker .duet-date__header .duet-date__select-label,duet-date-picker .duet-date__header .duet-date__nav svg{color:var(--scl-color-white)}duet-date-picker .duet-date__day[aria-pressed='true']{border:1px solid transparent}duet-date-picker .duet-date__day.is-today::before{border:2px solid transparent}}.scale-date-picker{position:relative}.scale-date-picker .date-picker__helper-text{font-weight:var(--scl-font-weight-bold);transition:all var(--scl-motion-duration-fast)\\n    var(--scl-motion-easing-standard);padding-left:var(--scl-spacing-12);font-size:var(--scl-font-size-12);line-height:var(--scl-font-line-height-133);color:var(--scl-color-blue-70)}.scale-date-picker .date-picker__meta{display:flex;justify-content:space-between;margin-top:var(--scl-spacing-4)}.scale-date-picker .date-picker__label{top:0;left:0;color:var(--scl-color-grey-60);display:flex;z-index:10;position:absolute;transition:all var(--scl-motion-duration-fast)\\n    var(--scl-motion-easing-standard);pointer-events:none;font-size:var(--scl-spacing-16);transform:translate(\\n    var(--scl-spacing-12),\\n    calc((var(--scl-spacing-48) - var(--scl-font-size-16)) / 2)\\n  );font-weight:var(--scl-font-weight-medium)}duet-date-picker .duet-date__input::placeholder{visibility:hidden;color:transparent;transition:all var(--scl-motion-duration-fast)\\n    var(--scl-motion-easing-standard)}.scale-date-picker.scale-date-picker--focus .date-picker__label,.scale-date-picker.animated .date-picker__label{color:var(--scl-color-grey-60);transform:translate(var(--scl-spacing-12), var(--scl-spacing-8));transition:all var(--scl-motion-duration-fast)\\n    var(--scl-motion-easing-standard);font-size:var(--scl-font-size-10);font-weight:var(--scl-font-weight-bold)}.scale-date-picker.animated .duet-date__input::placeholder,duet-date-picker .duet-date__input:focus::placeholder{visibility:initial;color:var(--scl-color-grey-60);transition:all var(--scl-motion-duration-fast)\\n    var(--scl-motion-easing-standard)}.scale-date-picker--status-error duet-date-picker .duet-date__input{border:var(--scl-spacing-2) solid var(--scl-color-text-error)}.scale-date-picker--status-error duet-date-picker .duet-date__input:hover{border:var(--scl-spacing-2) solid var(--scl-color-primary-hover)}.scale-date-picker--status-error duet-date-picker .duet-date__input:focus{border:var(--scl-spacing-2) solid var(--scl-color-primary-hover)}.scale-date-picker--status-error .date-picker__helper-text{color:var(--scl-color-text-error)}.scale-date-picker--status-error .duet-date__toggle{height:44px;margin-top:var(--scl-spacing-1);margin-right:var(--scl-spacing-1);width:47px}.scale-date-picker--size-small .duet-date__input{height:var(--scl-spacing-40)}.scale-date-picker--size-small .date-picker__label{top:0;left:0;color:var(--scl-color-grey-60);display:flex;z-index:10;position:absolute;transition:all var(--scl-motion-duration-fast)\\n    var(--scl-motion-easing-standard);pointer-events:none;font-size:var(--scl-font-size-16);transform:translate(\\n    var(--scl-spacing-12),\\n    calc((var(--scl-spacing-40) - var(--scl-font-size-16)) / 2)\\n  );font-weight:var(--scl-font-weight-medium)}.scale-date-picker--size-small.scale-date-picker--focus .date-picker__label,.scale-date-picker--size-small.animated .date-picker__label{color:var(--scl-color-grey-60);transform:translate(var(--scl-spacing-12), var(--scl-spacing-4));transition:all var(--scl-motion-duration-fast)\\n    var(--scl-motion-easing-standard);font-size:var(--scl-font-size-10);font-weight:var(--scl-font-weight-medium)}.scale-date-picker--size-small.scale-date-picker--status-error .duet-date__toggle{height:36px}.scale-date-picker.scale-date-picker--disabled,.scale-date-picker.scale-date-picker--disabled input,.scale-date-picker.scale-date-picker--disabled input:hover,.scale-date-picker.scale-date-picker--disabled .duet-date__toggle,.scale-date-picker.scale-date-picker--disabled .duet-date__toggle:hover,.scale-date-picker.scale-date-picker--disabled .duet-date__toggle:hover scale-icon-content-calendar,.scale-date-picker.scale-date-picker--disabled .date-picker__helper-text{cursor:not-allowed;border-color:var(--scl-color-grey-20);color:var(--scl-color-grey-20);background:var(--scl-color-background-standard)}.scale-date-picker.scale-date-picker--disabled .date-picker__label{color:var(--scl-color-grey-20)}.scale-date-picker__popup-heading{text-align:center;padding:var(--spacing-heading);font-size:var(--font-size-heading)}duet-date-picker .duet-date__dialog-content{border:none;box-shadow:var(--scl-shadow-level-4)}duet-date-picker .duet-date__select{margin-top:0}duet-date-picker .duet-date__select:nth-of-type(1){margin-right:var(--scl-spacing-8)}duet-date-picker .duet-date__select-label{font-size:var(--font-size-select-label)}duet-date-picker .duet-date__select-label svg{width:16px;height:16px}duet-date-picker .duet-date__select select:focus+.duet-date__select-label{box-shadow:0 0 0 var(--scl-spacing-2) var(--scl-color-focus)}duet-date-picker .duet-date__select select:hover+.duet-date__select-label{background:var(--scl-color-primary-hover);color:var(--scl-color-white)}duet-date-picker .duet-date__select select:active+.duet-date__select-label{box-shadow:none;background:var(--scl-color-primary-active);color:var(--scl-color-white)}duet-date-picker .duet-date__prev,duet-date-picker .duet-date__next{border-radius:var(--duet-radius);margin-left:var(--scl-spacing-2)}duet-date-picker .duet-date__prev svg,duet-date-picker .duet-date__next svg{height:16px;width:16px}duet-date-picker .duet-date__prev:hover,duet-date-picker .duet-date__next:hover{background:var(--scl-color-primary-hover);color:var(--scl-color-white)}duet-date-picker .duet-date__prev:active,duet-date-picker .duet-date__next:active{background:var(--scl-color-primary-active);color:var(--scl-color-white)}duet-date-picker .duet-date__prev:focus,duet-date-picker .duet-date__next:focus{box-shadow:0 0 0 var(--scl-spacing-2) var(--scl-color-focus)}duet-date-picker .duet-date__close{border-radius:var(--duet-radius)}duet-date-picker .duet-date__close:focus{box-shadow:0 0 0 var(--scl-spacing-2) var(--scl-color-focus)}duet-date-picker .duet-date__table-header{font-size:var(--font-size-table-header);font-weight:var(--font-weight-table-header)}duet-date-picker .duet-date__day{padding:0;border-radius:var(--radius-day);font-size:var(--font-size-day)}duet-date-picker .duet-date__day.is-today{box-shadow:none}duet-date-picker .duet-date__day.is-disabled{opacity:1;color:var(--scl-color-grey-20);pointer-events:none}duet-date-picker .duet-date__day.is-today::before{content:'';display:inline-block;width:var(--scl-spacing-4);height:var(--scl-spacing-4);border-radius:var(--scl-radius-8);background-color:var(--scl-color-primary);opacity:1;left:var(--scl-spacing-16);top:27px}duet-date-picker [aria-selected='true'] .duet-date__day.is-today::before,duet-date-picker .duet-date__day.is-today:hover::before{background-color:var(--scl-color-background-standard)}duet-date-picker .duet-date__day.is-today.is-disabled::before{background-color:var(--scl-radius-8)}duet-date-picker .duet-date__day:focus{box-shadow:0 0 0 var(--scl-spacing-2) var(--scl-color-focus);background:var(--scl-color-background-standard);color:var(--scl-color-primary)}duet-date-picker .duet-date__day:hover{background:var(--scl-color-primary-hover);color:var(--scl-color-white)}duet-date-picker .duet-date__day:active{box-shadow:none;background:var(--scl-color-primary-active);color:var(--scl-color-white)}duet-date-picker .duet-date__day:hover::before{border-radius:var(--duet-radius);opacity:1;background:transparent;color:var(--scl-color-white)}@media (max-width: 35.9375em) and (orientation: landscape){duet-date-picker .duet-date__dialog-content{zoom:70%}}\";\nvar i = 0;\n\nif (typeof window !== 'undefined' && typeof window.Audio !== 'undefined' && !customElements.get('duet-date-picker')) {\n  customElements.define('duet-date-picker', DuetDatePicker$1);\n}\n\nvar DatePicker = /*#__PURE__*/function () {\n  function DatePicker(hostRef) {\n    var _this6 = this;\n\n    _classCallCheck(this, DatePicker);\n\n    registerInstance(this, hostRef);\n    this.scaleChange = createEvent$1(this, \"scale-change\", 7);\n    this.scaleChangeLegacy = createEvent$1(this, \"scaleChange\", 7);\n    this.scaleBlur = createEvent$1(this, \"scale-blur\", 7);\n    this.scaleBlurLegacy = createEvent$1(this, \"scaleBlur\", 7);\n    this.scaleFocus = createEvent$1(this, \"scale-focus\", 7);\n    this.scaleFocusLegacy = createEvent$1(this, \"scaleFocus\", 7);\n    /**\n     * Name of the date picker input.\n     */\n\n    this.name = 'date';\n    /** @deprecated in v3 in favor of localization.calendarHeading */\n\n    this.popupTitle = 'Pick a date';\n    /**\n     * Makes the date picker input component disabled. This prevents users from being able to\n     * interact with the input, and conveys its inactive state to assistive technologies.\n     */\n\n    this.disabled = false;\n    /**\n     * Forces the opening direction of the calendar modal to be always left or right.\n     * This setting can be useful when the input is smaller than the opening date picker\n     * would be as by default the picker always opens towards right.\n     */\n\n    this.direction = 'right';\n    /**\n     * Should the input be marked as required?\n     */\n\n    this.required = false;\n    /**\n     * Date value. Must be in IS0-8601 format: YYYY-MM-DD.\n     */\n\n    this.value = '';\n    /**\n     * Minimum date allowed to be picked. Must be in IS0-8601 format: YYYY-MM-DD.\n     * This setting can be used alone or together with the max property.\n     */\n\n    this.min = '';\n    /**\n     * Maximum date allowed to be picked. Must be in IS0-8601 format: YYYY-MM-DD.\n     * This setting can be used alone or together with the min property.\n     */\n\n    this.max = '';\n    /** (optional) Helper text */\n\n    this.helperText = '';\n    /** @deprecated - invalid should replace status */\n\n    this.status = '';\n    /** (optional) Label */\n\n    this.label = '';\n    /** (optional) Size */\n\n    this.size = '';\n    /** Whether the input element has focus */\n\n    this.hasFocus = false;\n    /** Whether the input element has value */\n\n    this.hasValue = this.value != null && this.value !== '';\n    this.helperTextId = \"helper-message-\".concat(i);\n    /**\n     * Fix JAWS reading the day twice, e.g. \"19 19. August\"\n     * It'd probably make sense to open a PR in duetds/date-picker\n     * https://github.com/duetds/date-picker/blob/master/src/components/duet-date-picker/date-picker-day.tsx#L61\n     */\n\n    this.adjustButtonsLabelsForA11y = function () {\n      var table = _this6.hostElement.querySelector('.duet-date__table');\n\n      var options = {\n        subtree: true,\n        childList: true,\n        attributes: true\n      };\n\n      var callback = function callback() {\n        _this6.mo.disconnect(); // avoid a feedback loop\n\n\n        var buttons = Array.from(_this6.hostElement.querySelectorAll('.duet-date__day'));\n        buttons.forEach(function (button) {\n          var span = button.querySelector('.duet-date__vhidden');\n          var text = span.textContent;\n          button.setAttribute('aria-label', text);\n          span.setAttribute('hidden', 'hidden');\n        });\n\n        _this6.mo.observe(table, options);\n      };\n\n      _this6.mo = new MutationObserver(callback);\n      callback();\n    };\n  }\n  /**\n   * Public methods API\n   */\n\n  /**\n   * Sets focus on the date picker's input. Use this method instead of the global `focus()`.\n   */\n\n\n  _createClass(DatePicker, [{\n    key: \"setFocus\",\n    value: function () {\n      var _setFocus2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                return _context6.abrupt(\"return\", this.duetInput.setFocus());\n\n              case 1:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function setFocus() {\n        return _setFocus2.apply(this, arguments);\n      }\n\n      return setFocus;\n    }()\n    /**\n     * Show the calendar modal, moving focus to the calendar inside.\n     */\n\n  }, {\n    key: \"show\",\n    value: function () {\n      var _show2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                return _context7.abrupt(\"return\", this.duetInput.show());\n\n              case 1:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function show() {\n        return _show2.apply(this, arguments);\n      }\n\n      return show;\n    }()\n    /**\n     * Hide the calendar modal. Set `moveFocusToButton` to false to prevent focus\n     * returning to the date picker's button. Default is true.\n     */\n\n  }, {\n    key: \"hide\",\n    value: function () {\n      var _hide2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        var moveFocusToButton,\n            _args8 = arguments;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                moveFocusToButton = _args8.length > 0 && _args8[0] !== undefined ? _args8[0] : true;\n                return _context8.abrupt(\"return\", this.duetInput.hide(moveFocusToButton));\n\n              case 2:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function hide() {\n        return _hide2.apply(this, arguments);\n      }\n\n      return hide;\n    }()\n    /**\n     * Watch `value` property for changes and update `hasValue` based on that.\n     */\n\n  }, {\n    key: \"onValueChange\",\n    value: function onValueChange() {\n      this.hasValue = this.value != null && this.value !== ''; // @ts-ignore\n\n      this.duetInput.querySelector('.duet-date__input').value = this.value;\n    }\n  }, {\n    key: \"componentWillLoad\",\n    value: function componentWillLoad() {\n      if (this.popupTitle !== 'Pick a date') {\n        statusNote({\n          tag: 'deprecated',\n          message: 'Property \"popupTitle\" is deprecate in favor of localization.calendarHeading.',\n          type: 'warn',\n          source: this.hostElement\n        });\n      }\n\n      this.handleKeyPress = this.handleKeyPress.bind(this);\n\n      if (this.identifier == null) {\n        this.identifier = 'scale-date-picker-' + i++;\n      }\n    }\n  }, {\n    key: \"componentDidLoad\",\n    value: function componentDidLoad() {\n      var _a, _b;\n\n      var calendarIcon = this.duetInput.querySelector('.duet-date__toggle-icon');\n\n      if (calendarIcon) {\n        calendarIcon.replaceWith(document.createElement('scale-icon-content-calendar'));\n      }\n\n      var navLeftIcon = this.duetInput.querySelector('.duet-date__prev svg');\n\n      if (navLeftIcon) {\n        navLeftIcon.replaceWith(document.createElement('scale-icon-navigation-left'));\n      }\n\n      var navRightIcon = this.duetInput.querySelector('.duet-date__next svg');\n\n      if (navRightIcon) {\n        navRightIcon.replaceWith(document.createElement('scale-icon-navigation-right'));\n      }\n\n      var selectIcon = this.duetInput.querySelectorAll('.duet-date__select-label svg');\n\n      if (selectIcon) {\n        Array.from(selectIcon).forEach(function (icon) {\n          return icon.replaceWith(document.createElement('scale-icon-navigation-collapse-down'));\n        });\n      }\n\n      var input = this.duetInput.querySelector('.duet-date__input');\n\n      if (input) {\n        input.addEventListener('keyup', this.handleKeyPress);\n      }\n\n      if (input && this.helperText) {\n        input.setAttribute('aria-describedby', this.helperTextId);\n      }\n\n      if (input && (this.status === 'error' || this.invalid)) {\n        input.setAttribute('aria-invalid', 'true');\n      } // Remove existing <h2> with `{Month} {Year}` text\n\n\n      var dialog = this.hostElement.querySelector('.duet-date__dialog');\n      var duetHeadingId = '';\n\n      if (dialog) {\n        duetHeadingId = dialog.getAttribute('aria-labelledby');\n\n        if (duetHeadingId) {\n          var duetHeading = this.hostElement.querySelector(\"#\".concat(duetHeadingId));\n\n          if (duetHeading) {\n            duetHeading.parentElement.removeChild(duetHeading);\n          }\n        }\n      } // Add custom <h2> heading\n\n\n      var dialogContent = this.hostElement.querySelector('.duet-date__dialog-content');\n\n      if (dialogContent) {\n        var calendarHeading = ((_a = this.localization) === null || _a === void 0 ? void 0 : _a.calendarHeading) || this.popupTitle || 'Pick a date';\n        var heading = document.createElement('h2');\n        heading.id = duetHeadingId; // link to .duet-date__dialog[aria-labelledby]\n\n        heading.className = 'scale-date-picker__popup-heading';\n        heading.innerHTML = calendarHeading;\n        dialogContent.insertBefore(heading, dialogContent.firstChild);\n      } // truncate table headings to a single character\n\n\n      var tableHeadings = this.hostElement.querySelectorAll('.duet-date__table-header span[aria-hidden=\"true\"]');\n\n      if (tableHeadings) {\n        Array.from(tableHeadings).forEach(function (item) {\n          return item.innerHTML = item.innerHTML[0];\n        });\n      }\n\n      var today = this.hostElement.querySelector('.duet-date__day.is-today span.duet-date__vhidden');\n\n      if (today) {\n        today.innerHTML = \"\".concat(today.innerHTML, \", \").concat(((_b = this.localization) === null || _b === void 0 ? void 0 : _b.today) || 'today');\n      }\n\n      this.adjustButtonsLabelsForA11y();\n    }\n  }, {\n    key: \"componentDidRender\",\n    value: function componentDidRender() {\n      if (this.status !== '') {\n        statusNote({\n          tag: 'deprecated',\n          message: 'Property \"status\" is deprecated. Please use the \"invalid\" property!',\n          type: 'warn',\n          source: this.hostElement\n        });\n      }\n    }\n  }, {\n    key: \"disconnectedCallback\",\n    value: function disconnectedCallback() {\n      var input = this.duetInput.querySelector('.duet-date__input');\n\n      if (input) {\n        input.removeEventListener('keyup', this.handleKeyPress);\n      }\n\n      if (this.mo) {\n        this.mo.disconnect();\n      }\n    }\n  }, {\n    key: \"handleKeyPress\",\n    value: function handleKeyPress(e) {\n      this.hasValue = e.target.value != null && e.target.value !== '';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      return h$1(Host$1, null, this.styles && h$1(\"style\", null, this.styles), h$1(\"div\", {\n        class: classnames('scale-date-picker', this.status && \"scale-date-picker--status-\".concat(this.status), this.invalid && \"scale-date-picker--status-error\", this.hasFocus && 'scale-date-picker--focus', this.disabled && 'scale-date-picker--disabled', this.size && \"scale-date-picker--size-\".concat(this.size), this.hasValue && 'animated')\n      }, h$1(\"label\", {\n        class: \"date-picker__label\",\n        htmlFor: this.identifier\n      }, this.label), h$1(\"duet-date-picker\", {\n        onDuetChange: function onDuetChange(e) {\n          emitEvent$1(_this7, 'scaleChange', e.detail);\n\n          _this7.handleKeyPress(e);\n        },\n        onDuetFocus: function onDuetFocus(e) {\n          emitEvent$1(_this7, 'scaleFocus', e.detail);\n          _this7.hasFocus = true;\n        },\n        onDuetBlur: function onDuetBlur(e) {\n          emitEvent$1(_this7, 'scaleBlur', e.detail);\n          _this7.hasFocus = false;\n        },\n        name: this.name,\n        identifier: this.identifier,\n        role: this.role,\n        direction: this.direction,\n        required: this.required,\n        min: this.min,\n        max: this.max,\n        firstDayOfWeek: this.firstDayOfWeek,\n        localization: this.localization,\n        dateAdapter: this.dateAdapter,\n        disabled: this.disabled,\n        value: this.value,\n        ref: function ref(element) {\n          return _this7.duetInput = element;\n        }\n      }), !!this.helperText && h$1(\"div\", {\n        class: \"date-picker__meta\",\n        id: this.helperTextId,\n        \"aria-live\": \"polite\",\n        \"aria-relevant\": \"additions removals\"\n      }, h$1(\"div\", {\n        class: \"date-picker__helper-text\"\n      }, this.helperText))));\n    }\n  }, {\n    key: \"hostElement\",\n    get: function get() {\n      return getElement$1(this);\n    }\n  }], [{\n    key: \"watchers\",\n    get: function get() {\n      return {\n        \"value\": [\"onValueChange\"]\n      };\n    }\n  }]);\n\n  return DatePicker;\n}();\n\nDatePicker.style = datePickerCss;\nexport { DatePicker as scale_date_picker };","map":null,"metadata":{},"sourceType":"module"}