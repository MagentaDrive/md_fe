{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { r as registerInstance, c as createEvent, h, a as Host, g as getElement } from './index-f2e5998d.js';\nimport { c as classnames } from './index-713f92a5.js';\nimport { e as emitEvent } from './utils-524c237e.js';\nimport { s as statusNote } from './status-note-d227f142.js';\nvar textareaCss = \"scale-textarea{--transition:all var(--scl-motion-duration-fast)\\n    var(--scl-motion-easing-standard);--radius:var(--scl-radius-8);--border:var(--scl-spacing-1) solid var(--scl-color-text-standard);--border-error:var(--scl-spacing-2) solid var(--scl-color-background-error);--border-color-hover:var(--scl-color-primary-hover, #f90984);--border-color-focus:var(--scl-color-primary-hover, #f90984);--box-shadow-focus:0 0 0 var(--scl-spacing-2) var(--scl-color-focus);--spacing-x:var(--scl-spacing-12);--color-disabled:var(--scl-color-background-disabled);--background-disabled:var(--scl-color-white);--border-color-readonly:var(--scl-color-grey-0);--background-readonly:var(--scl-color-grey-0);--font-weight-meta:var(--scl-font-weight-bold);--font-size-meta:var(--scl-font-size-12);--line-height-meta:var(--scl-font-line-height-133);--spacing-y-meta:var(--scl-spacing-4);--color-meta:var(--scl-color-text-standard);--color-meta-error:var(--scl-color-text-error);--spacing-control:var(--scl-spacing-24) var(--spacing-x)\\n    var(--scl-spacing-12) calc(var(--spacing-x) - 1px);--transition-control:var(--transition);--font-size-control:var(--scl-font-size-16);--transition-counter:var(--transition);--font-size-counter:var(--font-size-meta);--line-height-counter:var(--line-height-meta);--color-counter-error:var(--color-meta-error);--transition-helper-text:var(--transition);--font-size-helper-text:var(--font-size-meta);--line-height-helper-text:var(--line-height-meta);--color-helper-text:var(--scl-color-blue-70);--color-helper-text-error:var(--color-meta-error);--transition-placeholder:var(--transition);--color-placeholder:var(--scl-color-grey-60);--color-label:var(--scl-color-grey-60);--color-label-readonly:var(--scl-color-text-standard);--z-index-label:var(--scl-z-index-10);--transition-label:var(--transition);--font-size-label:var(--scl-font-size-16);--font-weight-label:var(--scl-font-weight-medium);--font-size-label-focus:var(--scl-font-size-10);--font-weight-label-focus:var(--scl-font-weight-bold)}.textarea{position:relative}.textarea .textarea__control{width:100%;margin:0;resize:vertical;display:flex;outline:none;padding:var(--spacing-control);z-index:1;box-sizing:border-box;transition:var(--transition-control);font-family:inherit;font-size:var(--font-size-control);border-radius:var(--radius);border:var(--border)}.textarea .textarea__helper-text,.textarea .textarea__counter{font-weight:var(--scl-font-weight-bold)}.textarea .textarea__counter{display:flex;transition:var(--transition-counter);margin-left:auto;padding-right:var(--scl-spacing-12);justify-content:flex-end;font-size:var(--scl-font-size-12);line-height:var(--scl-font-line-height-133);color:inherit}.textarea .textarea__helper-text{transition:var(--transition-helper-text);padding-left:var(--spacing-x);font-size:var(--font-size-helper-text);line-height:var(--line-height-helper-text);color:var(--color-helper-text)}.textarea .textarea__meta{display:flex;justify-content:space-between;margin-top:var(--spacing-y-meta);color:var(--color-meta)}.textarea:not(.textarea--disabled):not(.textarea--readonly) .textarea__control:hover{border-color:var(--border-color-hover)}.textarea:not(.textarea--disabled):not(.textarea--readonly) .textarea__control:focus{border-color:var(--border-color-focus);box-shadow:var(--box-shadow-focus)}.textarea:not(.textarea--disabled) .textarea__control:focus::placeholder{color:var(--color-placeholder)}.textarea .textarea__control::placeholder,.textarea ::placeholder{color:transparent;transition:var(--transition-placeholder)}.textarea__label{top:0;left:0;color:var(--color-label);display:flex;z-index:var(--z-index-label);position:absolute;transition:var(--transition-label);pointer-events:none;font-size:var(--font-size-label);font-weight:var(--font-weight-label);transform:translate(\\n    var(--spacing-x),\\n    calc((var(--scl-spacing-48) - var(--font-size-label)) / 2)\\n  )}.textarea--has-focus .textarea__label,.animated .textarea__label{transform:translate(var(--spacing-x), var(--scl-spacing-8));font-size:var(--font-size-label-focus);font-weight:var(--font-weight-label-focus)}.textarea--status-error .textarea__control{border:var(--border-error)}.textarea--status-error .textarea__helper-text{color:var(--color-helper-text-error)}.textarea--status-error .textarea__counter{color:var(--color-counter-error)}.textarea--transparent .textarea__control{background-color:transparent}.textarea__label-safety-background{top:var(--scl-spacing-2);left:var(--scl-spacing-2);right:var(--scl-spacing-2);position:absolute;pointer-events:none;border-radius:var(--scl-radius-8);height:var(--scl-spacing-24);background-color:var(--scl-color-background-standard, #ffffff)}.textarea--transparent .textarea__label-safety-background,.textarea--readonly .textarea__label-safety-background,.textarea--disabled .textarea__label-safety-background{background-color:transparent}.textarea--readonly textarea,.textarea--readonly .textarea__control{color:var(--color-label-readonly);border-color:var(--border-color-readonly);background:var(--background-readonly)}.textarea--readonly .textarea__control:focus{box-shadow:var(--box-shadow-focus)}.textarea--disabled label,.textarea--disabled .textarea__label,.textarea--disabled textarea,.textarea--disabled .textarea__control,.textarea--disabled .textarea__meta,.textarea--disabled .textarea__helper-text{cursor:not-allowed;border-color:var(--color-disabled);color:var(--color-disabled);background:var(--scl-color-white)}\";\nvar i = 0;\n\nvar Textarea = /*#__PURE__*/function () {\n  function Textarea(hostRef) {\n    var _this = this;\n\n    _classCallCheck(this, Textarea);\n\n    registerInstance(this, hostRef);\n    this.scaleInput = createEvent(this, \"scale-input\", 7);\n    this.scaleInputLegacy = createEvent(this, \"scaleInput\", 7);\n    this.scaleChange = createEvent(this, \"scale-change\", 7);\n    this.scaleChangeLegacy = createEvent(this, \"scaleChange\", 7);\n    this.scaleFocus = createEvent(this, \"scale-focus\", 7);\n    this.scaleFocusLegacy = createEvent(this, \"scaleFocus\", 7);\n    this.scaleBlur = createEvent(this, \"scale-blur\", 7);\n    this.scaleBlurLegacy = createEvent(this, \"scaleBlur\", 7);\n    this.scaleKeyDown = createEvent(this, \"scale-keydown\", 7);\n    this.scaleKeyDownLegacy = createEvent(this, \"scaleKeyDown\", 7);\n    /** (optional) Input name */\n\n    this.name = '';\n    /** (optional) Input label */\n\n    this.label = '';\n    /** (optional) Input helper text */\n\n    this.helperText = '';\n    /** @deprecated - invalid should replace status */\n\n    this.status = '';\n    /** (optional) Input status */\n\n    this.invalid = false;\n    /** (optional) Input placeHolder */\n\n    this.placeholder = '';\n    /** (optional) Input value */\n\n    this.value = '';\n    /** Whether the input element has focus */\n\n    this.hasFocus = false;\n\n    this.handleInput = function (event) {\n      var target = event.target;\n\n      if (target) {\n        _this.value = target.value || '';\n\n        _this.emitChange();\n      }\n\n      emitEvent(_this, 'scaleInput', event);\n    };\n\n    this.handleChange = function (event) {\n      var target = event.target;\n\n      if (target) {\n        _this.value = target.value || '';\n\n        _this.emitChange();\n      }\n    };\n\n    this.handleFocus = function () {\n      emitEvent(_this, 'scaleFocus');\n      _this.hasFocus = true;\n    };\n\n    this.handleBlur = function () {\n      emitEvent(_this, 'scaleBlur');\n      _this.hasFocus = false;\n    };\n\n    this.handleKeyDown = function (event) {\n      emitEvent(_this, 'scaleKeyDown', event);\n    };\n  }\n\n  _createClass(Textarea, [{\n    key: \"componentWillLoad\",\n    value: function componentWillLoad() {\n      if (this.inputId == null) {\n        this.inputId = 'input-textarea' + i++;\n      }\n    }\n  }, {\n    key: \"componentDidRender\",\n    value: function componentDidRender() {\n      if (this.status !== '') {\n        statusNote({\n          tag: 'deprecated',\n          message: 'Property \"status\" is deprecated. Please use the \"invalid\" property!',\n          type: 'warn',\n          source: this.hostElement\n        });\n      }\n    } // We're not watching `value` like we used to\n    // because we get unwanted `scaleChange` events\n    // because how we keep this.value up-to-date for type=\"select\"\n    // `this.value = selectedValue`\n\n  }, {\n    key: \"emitChange\",\n    value: function emitChange() {\n      emitEvent(this, 'scaleChange', {\n        value: this.value == null ? this.value : this.value.toString()\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var ariaInvalidAttr = this.status === 'error' || this.invalid ? {\n        'aria-invalid': true\n      } : {};\n      var helperTextId = \"helper-message-\".concat(i);\n      var ariaDescribedByAttr = {\n        'aria-describedBy': helperTextId\n      };\n      var readonlyAttr = this.readonly ? {\n        readonly: 'readonly'\n      } : {};\n      return h(Host, null, h(\"div\", {\n        class: this.getCssClassMap()\n      }, h(\"label\", {\n        class: \"textarea__label\",\n        htmlFor: this.inputId\n      }, this.label), h(\"textarea\", Object.assign({\n        class: \"textarea__control\",\n        style: !!this.resize && {\n          resize: this.resize\n        },\n        value: this.value\n      }, !!this.name ? {\n        name: this.name\n      } : {}, !!this.inputAutofocus ? {\n        autofocus: 'true'\n      } : {}, {\n        required: this.required,\n        minLength: this.minLength,\n        maxLength: this.maxLength,\n        id: this.inputId,\n        onInput: this.handleInput,\n        onChange: this.handleChange,\n        onFocus: this.handleFocus,\n        onBlur: this.handleBlur,\n        onKeyDown: this.handleKeyDown\n      }, !!this.placeholder ? {\n        placeholder: this.placeholder\n      } : {}, {\n        disabled: this.disabled\n      }, readonlyAttr, !!this.rows ? {\n        rows: this.rows\n      } : {}, !!this.cols ? {\n        cols: this.cols\n      } : {}, ariaInvalidAttr, this.helperText ? ariaDescribedByAttr : {})), h(\"span\", {\n        class: \"textarea__label-safety-background\",\n        \"aria-hidden\": \"true\"\n      }), (!!this.helperText || !!this.counter) && h(\"div\", {\n        class: \"textarea__meta\",\n        id: helperTextId,\n        \"aria-live\": \"polite\",\n        \"aria-relevant\": \"additions removals\"\n      }, !!this.helperText && h(\"div\", {\n        class: \"textarea__helper-text\"\n      }, this.helperText), this.counter && h(\"div\", {\n        class: \"textarea__counter\"\n      }, !!this.value ? String(this.value).length : 0, \" /\", ' ', this.maxLength))));\n    }\n  }, {\n    key: \"getCssClassMap\",\n    value: function getCssClassMap() {\n      return classnames('textarea', this.hasFocus && 'textarea--has-focus', this.resize && \"textarea--resize-\".concat(this.resize), this.disabled && \"textarea--disabled\", this.transparent && 'textarea--transparent', this.status && \"textarea--status-\".concat(this.status), this.invalid && \"textarea--status-error\", this.readonly && \"textarea--readonly\", this.value != null && this.value !== '' && 'animated');\n    }\n  }, {\n    key: \"hostElement\",\n    get: function get() {\n      return getElement(this);\n    }\n  }]);\n\n  return Textarea;\n}();\n\nTextarea.style = textareaCss;\nexport { Textarea as scale_textarea };","map":null,"metadata":{},"sourceType":"module"}