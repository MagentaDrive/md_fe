{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { r as registerInstance, h, a as Host, g as getElement } from './index-f2e5998d.js';\nimport { c as classnames } from './index-713f92a5.js';\n\nvar Accordion = /*#__PURE__*/function () {\n  function Accordion(hostRef) {\n    _classCallCheck(this, Accordion);\n\n    registerInstance(this, hostRef);\n    /** If `true`, only one scale-collapsible within the accordion can be open at a time */\n\n    this.dependent = false;\n    /** If `true`, scale-collapsibles within the accordion will all be open initially, unless this is dependant */\n\n    this.expanded = false;\n    /** Heading level for scale-collapsible descendants */\n\n    this.headingLevel = null;\n  }\n  /**\n   * Handle `dependent`\n   */\n\n\n  _createClass(Accordion, [{\n    key: \"collapsibleHandler\",\n    value: function collapsibleHandler(event) {\n      event.stopPropagation();\n      var expanded = event.detail.expanded;\n\n      if (!this.dependent || expanded === false) {\n        return;\n      }\n\n      this.getCollapsibleChildren().forEach(function (child) {\n        if (child !== event.target && child.hasAttribute('expanded')) {\n          child.expanded = false;\n        }\n      });\n    }\n  }, {\n    key: \"headingLevelChanged\",\n    value: function headingLevelChanged(newValue) {\n      this.propagatePropsToChildren(newValue);\n    }\n  }, {\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      var _this = this;\n\n      /**\n       * Handle `expanded`\n       */\n      if (!this.dependent) {\n        this.getCollapsibleChildren().forEach(function (child) {\n          child.expanded = _this.expanded;\n        });\n      }\n    }\n  }, {\n    key: \"componentDidLoad\",\n    value: function componentDidLoad() {\n      if (this.headingLevel !== null) {\n        this.propagatePropsToChildren(this.headingLevel);\n      }\n    }\n  }, {\n    key: \"getCollapsibleChildren\",\n    value: function getCollapsibleChildren() {\n      return Array.from(this.el.querySelectorAll('scale-collapsible'));\n    }\n  }, {\n    key: \"propagatePropsToChildren\",\n    value: function propagatePropsToChildren(headingLevel) {\n      this.getCollapsibleChildren().forEach(function (item) {\n        item.headingLevel = headingLevel;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return h(Host, null, this.styles && h(\"style\", null, this.styles), h(\"div\", {\n        class: this.getCssClassMap(),\n        part: \"base\"\n      }, h(\"slot\", null)));\n    }\n  }, {\n    key: \"getCssClassMap\",\n    value: function getCssClassMap() {\n      return classnames('accordion');\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return getElement(this);\n    }\n  }], [{\n    key: \"watchers\",\n    get: function get() {\n      return {\n        \"headingLevel\": [\"headingLevelChanged\"]\n      };\n    }\n  }]);\n\n  return Accordion;\n}();\n\nexport { Accordion as scale_accordion };","map":null,"metadata":{},"sourceType":"module"}