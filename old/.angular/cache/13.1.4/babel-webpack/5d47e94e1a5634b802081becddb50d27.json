{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { r as registerInstance, h, a as Host, g as getElement } from './index-f2e5998d.js';\nvar iconCss = \"scale-icon{--display:inline-flex;--transition:all var(--scl-motion-duration-fast)\\n    var(--scl-motion-easing-standard);display:var(--display)}scale-icon path{transition:var(--transition)}@media screen and (forced-colors: active), (-ms-high-contrast: active){scale-icon svg,.scale-icon{color:white;stroke:white}}\";\n\nvar ContentSimCard = /*#__PURE__*/function () {\n  function ContentSimCard(hostRef) {\n    _classCallCheck(this, ContentSimCard);\n\n    registerInstance(this, hostRef);\n    /** (optional) The width and height in pixels */\n\n    this.size = 24;\n    /** (optional) Sets the icon color via the `fill` attribute */\n\n    this.fill = 'currentColor';\n    /** (optional) Alias for `fill` */\n\n    this.color = 'currentColor';\n    /** (optional) If `true`, the icon changes visually */\n\n    this.selected = false;\n    /** (optional) If `true` the SVG element will get `aria-hidden=\"true\"` */\n\n    this.decorative = false;\n  }\n\n  _createClass(ContentSimCard, [{\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      if (!this.hostElement.hasAttribute('styles')) {\n        this.hostElement.style.display = 'inline-flex';\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var ariaHidden = this.decorative ? {\n        'aria-hidden': 'true'\n      } : {};\n      return h(Host, null, h(\"svg\", Object.assign({\n        class: \"scale-icon\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: this.size,\n        height: this.size,\n        viewBox: \"0 0 24 24\"\n      }, ariaHidden), this.accessibilityTitle && h(\"title\", null, this.accessibilityTitle), h(\"g\", {\n        fill: this.fill === 'currentColor' ? this.color : this.fill\n      }, this.selected ? h(\"g\", null, h(\"path\", {\n        \"fill-rule\": \"evenodd\",\n        d: \"M21 1v19a3 3 0 01-3 3H6a3 3 0 01-3-3V7.5L9.5 1H21zm-6.5 8h-5A2.5 2.5 0 007 11.5v5A2.5 2.5 0 009.5 19h5a2.5 2.5 0 002.5-2.5v-5A2.5 2.5 0 0014.5 9zm-1 1.5a2 2 0 012 2v3a2 2 0 01-2 2h-3a2 2 0 01-2-2v-3a2 2 0 012-2h3z\"\n      })) : h(\"g\", null, h(\"path\", {\n        d: \"M21 1v19c0 1.65-1.35 3-3 3H6c-1.65 0-3-1.35-3-3V7.5L9.5 1zm-1.5 1.5h-9.4L4.5 8.1V20c0 .85.65 1.5 1.5 1.5h12c.85 0 1.5-.65 1.5-1.5zm-5 6.5c1.4 0 2.5 1.1 2.5 2.5v5c0 1.4-1.1 2.5-2.5 2.5h-5C8.1 19 7 17.9 7 16.5v-5C7 10.1 8.1 9 9.5 9zm0 1.5h-5c-.55 0-1 .45-1 1v5c0 .55.45 1 1 1h5c.55 0 1-.45 1-1v-5c0-.55-.45-1-1-1z\",\n        \"fill-rule\": \"evenodd\"\n      })))));\n    }\n  }, {\n    key: \"hostElement\",\n    get: function get() {\n      return getElement(this);\n    }\n  }]);\n\n  return ContentSimCard;\n}();\n\nContentSimCard.style = iconCss;\nexport { ContentSimCard as scale_icon_content_sim_card };","map":null,"metadata":{},"sourceType":"module"}