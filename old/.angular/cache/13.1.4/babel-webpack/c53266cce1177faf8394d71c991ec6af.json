{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { r as registerInstance, h, a as Host, g as getElement } from './index-f2e5998d.js';\nimport { c as classnames } from './index-713f92a5.js';\nimport { i as isScaleIcon } from './utils-524c237e.js';\nimport { s as statusNote } from './status-note-d227f142.js';\nvar tabHeaderCss = \":host{outline:none;--font-family:var(--scl-font-family-sans, TeleNeoWeb);--font-weight:var(--scl-font-weight-bold);--height-small:2rem;--color-hover:var(--scl-color-primary-hover);--color-selected:var(--scl-color-primary);--background-underline-hover:var(--scl-color-primary-hover);--background-underline-active:var(--scl-color-primary-active);--color-active:var(--scl-color-primary-active);--box-shadow-focus:0 0 0 var(--scl-spacing-2) var(--scl-color-focus);--spacing-right-slotted:var(--scl-spacing-8);--color-disabled:var(--scl-color-background-disabled)}.tab-header{cursor:pointer;display:inline-flex;outline:none;position:relative;box-sizing:border-box;align-items:center;padding-left:0;height:var(--tab-height);margin-right:var(--tab-spacing);padding-right:var(--tab-spacing);font-family:var(--font-family);font-size:calc(var(--tab-height) / 2);font-weight:var(--scl-font-weight-bold);border-radius:var(--tab-radius)}.tab-header--small{--tab-height:var(--height-small)}.tab-header--disabled{cursor:auto;color:var(--color-disabled)}.tab-header--disabled:active{color:var(--color-disabled)}.tab-header--disabled:hover{color:var(--color-disabled) !important}.tab-header--disabled:hover:after{background-color:var(--color-disabled) !important}.tab-header:after{left:0;right:0;width:100%;bottom:0;content:'';display:block;position:absolute;height:var(--tab-border-size);background-color:var(--tab-border-color)}.tab-header:before{left:0;right:0;width:100%;bottom:0;height:0;content:'';display:block;z-index:1;position:absolute;border-top:1px solid transparent}.tab-header:hover{color:var(--color-hover)}.tab-header:hover:after{background-color:var(--background-underline-hover)}.tab-header:active{color:var(--color-active)}.tab-header:active:after{background-color:var(--background-underline-active)}.tab-header ::slotted(*){margin-right:var(--spacing-right-slotted)}.tab-header--has-focus{box-shadow:var(--box-shadow-focus)}.tab-header--selected{color:var(--color-selected)}.tab-header--selected:after{border-top-left-radius:var(--scl-radius-8);border-top-right-radius:var(--scl-radius-8);height:var(--tab-border-size-selected);background-color:var(--color-selected)}.tab-header--selected:before{border-top:var(--tab-border-size-selected) solid transparent}\";\nvar DEFAULT_ICON_SIZE = 24;\nvar PER_SPEC_ICON_SIZE = 16;\nvar i = 0;\n\nvar TabHeader = /*#__PURE__*/function () {\n  function TabHeader(hostRef) {\n    _classCallCheck(this, TabHeader);\n\n    registerInstance(this, hostRef);\n    this.generatedId = i++;\n    /** True for a disabled Tabnavigation */\n\n    this.disabled = false;\n    /** True for smaller height and font size */\n    // DEPRECATED - size should replace small\n\n    this.small = false;\n    /** (optional) size  */\n\n    this.size = 'large';\n    this.hasFocus = false;\n  }\n\n  _createClass(TabHeader, [{\n    key: \"selectedChanged\",\n    value: function selectedChanged(newValue) {\n      if (!this.disabled) {\n        if (newValue === true) {\n          // Having focus on the host element, and not on inner elements,\n          // is required because screen readers.\n          this.hostElement.focus();\n        }\n\n        this.updateSlottedIcon();\n      }\n    }\n  }, {\n    key: \"componentDidLoad\",\n    value: function componentDidLoad() {\n      this.setChildrenIconSize();\n    }\n  }, {\n    key: \"componentDidRender\",\n    value: function componentDidRender() {\n      if (this.small !== false) {\n        statusNote({\n          tag: 'deprecated',\n          message: 'Property \"small\" is deprecated. Please use the \"size\" property!',\n          type: 'warn',\n          source: this.hostElement\n        });\n      }\n    }\n    /**\n     * Find slotted icons, and if any, add the `selected` attribute accordingly.\n     */\n\n  }, {\n    key: \"updateSlottedIcon\",\n    value: function updateSlottedIcon() {\n      var slot = this.container.querySelector('slot');\n\n      if (slot === null) {\n        return;\n      }\n\n      var children = Array.from(slot.assignedNodes()).filter(function (node) {\n        return node.nodeType === 1;\n      }).filter(function (node) {\n        return node.nodeName.toUpperCase().indexOf('ICON') > -1;\n      });\n\n      if (children.length === 0) {\n        return;\n      }\n\n      var action = this.selected ? 'setAttribute' : 'removeAttribute';\n      children.forEach(function (child) {\n        return child[action]('selected', '');\n      });\n    }\n    /**\n     * Set any children icon's size according the button size.\n     */\n\n  }, {\n    key: \"setChildrenIconSize\",\n    value: function setChildrenIconSize() {\n      var icons = Array.from(this.hostElement.children).filter(isScaleIcon);\n      icons.forEach(function (icon) {\n        // This is meh people might actually want 24\n        if (icon.size === DEFAULT_ICON_SIZE) {\n          icon.size = PER_SPEC_ICON_SIZE;\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return h(Host, {\n        id: \"scale-tab-header-\".concat(this.generatedId),\n        role: this.disabled ? false : 'tab',\n        \"aria-selected\": this.selected ? 'true' : 'false',\n        tabindex: this.disabled ? false : this.selected ? '0' : '-1',\n        onFocus: function onFocus() {\n          return _this.hasFocus = true;\n        },\n        onBlur: function onBlur() {\n          return _this.hasFocus = false;\n        }\n      }, this.styles && h(\"style\", null, this.styles), h(\"span\", {\n        part: this.getBasePartMap(),\n        ref: function ref(el) {\n          return _this.container = el;\n        },\n        class: this.getCssClassMap()\n      }, h(\"slot\", null)));\n    }\n  }, {\n    key: \"getBasePartMap\",\n    value: function getBasePartMap() {\n      return this.getCssOrBasePartMap('basePart');\n    }\n  }, {\n    key: \"getCssClassMap\",\n    value: function getCssClassMap() {\n      return this.getCssOrBasePartMap('css');\n    }\n  }, {\n    key: \"getCssOrBasePartMap\",\n    value: function getCssOrBasePartMap(mode) {\n      var component = 'tab-header';\n      var prefix = mode === 'basePart' ? '' : \"\".concat(component, \"--\");\n      return classnames(component, this.selected && \"\".concat(prefix, \"selected\"), (this.size === 'small' || this.small) && \"\".concat(prefix, \"small\"), this.hasFocus && \"\".concat(prefix, \"has-focus\"), this.disabled && \"\".concat(prefix, \"disabled\"));\n    }\n  }, {\n    key: \"hostElement\",\n    get: function get() {\n      return getElement(this);\n    }\n  }], [{\n    key: \"watchers\",\n    get: function get() {\n      return {\n        \"selected\": [\"selectedChanged\"]\n      };\n    }\n  }]);\n\n  return TabHeader;\n}();\n\nTabHeader.style = tabHeaderCss;\nexport { TabHeader as scale_tab_header };","map":null,"metadata":{},"sourceType":"module"}