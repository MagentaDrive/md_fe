{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { r as registerInstance, h, a as Host, g as getElement } from './index-f2e5998d.js';\nimport { c as classnames } from './index-713f92a5.js';\nvar listCss = \":host{--spacing-left:0;--spacing-left-nested:var(--scl-spacing-8)}.list{padding-left:var(--spacing-left)}.list--nested{margin-top:0;margin-bottom:0;padding-left:var(--spacing-left-nested)}\";\n\nvar List = /*#__PURE__*/function () {\n  function List(hostRef) {\n    _classCallCheck(this, List);\n\n    registerInstance(this, hostRef);\n    this.isNested = false;\n    /** (optional) Make the list ordered (ol) */\n\n    this.ordered = false;\n  }\n\n  _createClass(List, [{\n    key: \"orderedChanged\",\n    value: function orderedChanged(newValue) {\n      this.propagatePropsToChildren(newValue);\n    }\n  }, {\n    key: \"componentDidLoad\",\n    value: function componentDidLoad() {\n      this.propagatePropsToChildren(this.ordered);\n    }\n  }, {\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      this.isNested = this.el.closest('scale-list-item') != null;\n\n      if (this.isNested) {\n        this.el.setAttribute('slot', 'nested');\n      } else {\n        this.el.removeAttribute('slot');\n      }\n    }\n  }, {\n    key: \"propagatePropsToChildren\",\n    value: function propagatePropsToChildren(ordered) {\n      var items = Array.from(this.el.children).filter(function (child) {\n        return child.matches('scale-list-item');\n      });\n      items.forEach(function (item, index) {\n        item.ordered = ordered;\n        item.index = index + 1;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var Tag = this.ordered ? 'ol' : 'ul';\n      return h(Host, null, this.styles && h(\"style\", null, this.styles), h(Tag, {\n        class: this.getCssClassMap(),\n        part: classnames('base', this.ordered && 'ordered', this.isNested && 'nested')\n      }, h(\"slot\", null)));\n    }\n  }, {\n    key: \"getCssClassMap\",\n    value: function getCssClassMap() {\n      return classnames('list', this.ordered && 'list--type-ordered', this.isNested && 'list--nested');\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return getElement(this);\n    }\n  }], [{\n    key: \"watchers\",\n    get: function get() {\n      return {\n        \"ordered\": [\"orderedChanged\"]\n      };\n    }\n  }]);\n\n  return List;\n}();\n\nList.style = listCss;\nexport { List as scale_list };","map":null,"metadata":{},"sourceType":"module"}