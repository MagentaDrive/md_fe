{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport _classCallCheck from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport { r as registerInstance, h, a as Host, g as getElement } from './index-f2e5998d.js';\nimport { c as classnames } from './index-713f92a5.js';\nimport { s as statusNote } from './status-note-d227f142.js';\nvar notificationToastCss = \":host{--width:367px;--radius:var(--scl-radius-8);--background:var(--scl-color-background-standard);--box-shadow:var(--scl-shadow-level-0);--background-success-icon-container:var(--scl-color-text-success);--background-warning-icon-container:var(--scl-color-orange-70);--background-error-icon-container:var(--scl-color-red-70);--background-informational-icon-container:var(--scl-color-blue-60);--background-success-text-container:#f2f7ef;--background-warning-text-container:#fbf4eb;--background-error-text-container:#fbf3f4;--background-informational-text-container:#eff9fb}.notification-toast{width:var(--width);opacity:0;z-index:1;position:fixed;background:var(--background);box-shadow:var(--box-shadow);box-sizing:border-box;border-radius:var(--radius);flex-direction:column;justify-content:space-between}.notification-toast.notification-toast--story{opacity:1;position:absolute}.notification-toast.notification-toast--story.notification-toast--hide{opacity:0}.notification-toast.notification-toast--variant-success{background:var(--background-success-text-container)}.notification-toast.notification-toast--variant-warning{background:var(--background-warning-text-container)}.notification-toast.notification-toast--variant-error{background:var(--background-error-text-container)}.notification-toast.notification-toast--variant-informational{background:var(--background-informational-text-container)}.notification-toast__icon{position:absolute;top:50%;left:50%;margin:-10px 0 0 -10px}.notification-toast__icon-container{height:100%;width:48px;position:absolute;left:0;top:0;float:left;border-radius:10px 0 0 10px}.notification-toast.notification-toast--variant-success .notification-toast__icon-container{background:var(--background-success-icon-container)}.notification-toast.notification-toast--variant-warning .notification-toast__icon-container{background:var(--background-warning-icon-container)}.notification-toast.notification-toast--variant-error .notification-toast__icon-container{background:var(--background-error-icon-container)}.notification-toast.notification-toast--variant-informational .notification-toast__icon-container{background:var(--background-informational-icon-container)}::slotted([slot='header']){margin:0;padding:3px 0 0 10px;font-weight:bold;font-size:16px}::slotted([slot='body']){padding:3px 0 0 10px;margin:0}::slotted([slot='link']){padding:10px 0 15px 10px;margin:0}.notification-toast__text-container{width:var(--width);min-height:33px;float:left;position:relative;margin:0 0 0 48px;padding:15px 0 0 0}.notification-message__icon-close{cursor:pointer;position:absolute;top:14px;right:14px}\";\n\nvar NotificationToast = /*#__PURE__*/function () {\n  function NotificationToast(hostRef) {\n    var _this = this;\n\n    _classCallCheck(this, NotificationToast);\n\n    registerInstance(this, hostRef);\n    /** (optional) Toast variant */\n\n    this.variant = 'informational';\n    /** (optional) Animated toast */\n\n    this.animated = true;\n    /** (optional) Alignment choose for top and bottom */\n\n    this.alignment = 'top-right';\n    /** (optional) Toast position at the top */\n\n    this.positionVertical = 12;\n    /** (optional) Toast position right */\n\n    this.positionHorizontal = 12;\n    /** (optional) Toast fade duration */\n\n    this.fadeDuration = 500;\n    /** (optional) Toast state height with offset */\n\n    this.toastHeightWithOffset = 0;\n    this.hideToast = false;\n\n    this.close = function () {\n      _this.hideToast = true;\n      setTimeout(function () {\n        _this.opened = false;\n      }, _this.fadeDuration);\n    };\n\n    this.transitions = function (offset) {\n      return \"\\n      @keyframes fadeIn {\\n        from {\\n          opacity: 0;\\n          \".concat(_this.alignmentVertical, \": -\").concat(offset, \"px;\\n        }\\n        to {\\n          opacity: 1;\\n          \").concat(_this.alignmentVertical, \": \").concat(_this.positionVertical, \"px;\\n        }\\n      }\\n  \\n      @keyframes fadeOut {\\n        from {\\n          opacity: 1;\\n          \").concat(_this.alignmentVertical, \": \").concat(_this.positionVertical, \"px;\\n        }\\n        to {\\n          opacity: 0;\\n          \").concat(_this.alignmentVertical, \": -\").concat(offset, \"px;\\n        }\\n      }\\n    \");\n    };\n\n    this.animationStyle = function (offset) {\n      if (_this.animated) {\n        return \"\\n        .notification-toast--show {\\n          \".concat(_this.alignmentHorizontal, \": \").concat(_this.positionHorizontal, \"px;\\n          animation: fadeIn \").concat(_this.fadeDuration / 1000, \"s ease-in-out;\\n          \").concat(_this.alignmentVertical, \": \").concat(_this.positionVertical, \"px;\\n          opacity: 1;\\n        },\\n        .notification-toast--show {\\n          \").concat(_this.alignmentHorizontal, \": \").concat(_this.positionHorizontal, \"px;\\n          animation: fadeOut \").concat(_this.fadeDuration / 1000, \"s ease-in-out;\\n          \").concat(_this.alignmentVertical, \": -\").concat(offset, \"px;\\n          opacity: 0;\\n        }\\n      \");\n      }\n\n      return \"\\n    .notification-toast--show {\\n      \".concat(_this.alignmentHorizontal, \": \").concat(_this.positionHorizontal, \"px;\\n      \").concat(_this.alignmentVertical, \": \").concat(_this.positionVertical, \"px;\\n      opacity: 1;\\n    },\\n    .notification-toast--show {\\n      \").concat(_this.alignmentHorizontal, \": \").concat(_this.positionHorizontal, \"px;\\n      \").concat(_this.alignmentVertical, \": -\").concat(offset, \"px;\\n      opacity: 0;\\n    }\\n  \");\n    };\n  }\n\n  _createClass(NotificationToast, [{\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      statusNote({\n        source: this.element,\n        type: 'warn'\n      });\n    }\n  }, {\n    key: \"componentWillLoad\",\n    value: function componentWillLoad() {\n      var alignmentParts = this.alignment.split('-');\n      this.alignmentVertical = alignmentParts[0];\n      this.alignmentHorizontal = alignmentParts[1];\n    }\n  }, {\n    key: \"handleIcons\",\n    value: function handleIcons() {\n      if (this.variant) {\n        switch (this.variant) {\n          case 'success':\n            return h(\"scale-icon-alert-success\", {\n              class: \"notification-toast__icon\",\n              size: 20,\n              color: \"#ffffff\",\n              selected: true,\n              \"accessibility-title\": \"success\"\n            });\n\n          case 'informational':\n            return h(\"scale-icon-alert-information\", {\n              class: \"notification-toast__icon\",\n              size: 20,\n              selected: true,\n              color: \"#ffffff\",\n              \"accessibility-title\": \"information\"\n            });\n\n          case 'error':\n            return h(\"scale-icon-alert-error\", {\n              class: \"notification-toast__icon\",\n              size: 20,\n              selected: true,\n              color: \"#ffffff\",\n              \"accessibility-title\": \"error\"\n            });\n\n          case 'warning':\n            return h(\"scale-icon-alert-error\", {\n              class: \"notification-toast__icon\",\n              color: \"#ffff\",\n              size: 20,\n              selected: true,\n              \"accessibility-title\": \"information\"\n            });\n        }\n      }\n\n      return;\n    }\n    /** Toast method: open() */\n\n  }, {\n    key: \"open\",\n    value: function () {\n      var _open = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.opened = true;\n                this.hideToast = false;\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function open() {\n        return _open.apply(this, arguments);\n      }\n\n      return open;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.opened) {\n        return h(Host, null, this.styles && h(\"style\", null, this.styles), h(\"style\", null, this.transitions(this.toastHeightWithOffset)), h(\"style\", null, this.animationStyle(this.toastHeightWithOffset)), h(\"div\", {\n          class: this.getCssClassMap(),\n          part: this.getBasePartMap()\n        }, h(\"div\", {\n          class: \"notification-toast__icon-container\"\n        }, this.handleIcons()), h(\"div\", {\n          class: \"notification-toast__text-container\"\n        }, h(\"slot\", {\n          name: \"header\"\n        }), h(\"slot\", {\n          name: \"body\"\n        }), h(\"scale-link\", null, h(\"slot\", {\n          name: \"link\"\n        }))), h(\"scale-icon-action-circle-close\", {\n          tabindex: \"0\",\n          class: \"notification-message__icon-close\",\n          size: 20,\n          onClick: function onClick() {\n            _this2.close();\n          },\n          onKeyDown: function onKeyDown(e) {\n            if (e.key === 'Enter') {\n              _this2.close();\n            }\n          },\n          \"accessibility-title\": \"close\"\n        })));\n      }\n    }\n  }, {\n    key: \"getToastHeightWithOffset\",\n    value: function getToastHeightWithOffset() {\n      var toastHeight = this.element.shadowRoot.querySelector('.toast').scrollHeight;\n      this.toastHeightWithOffset = toastHeight + this.positionVertical;\n    }\n  }, {\n    key: \"getBasePartMap\",\n    value: function getBasePartMap() {\n      return this.getCssOrBasePartMap('basePart');\n    }\n  }, {\n    key: \"getCssClassMap\",\n    value: function getCssClassMap() {\n      return this.getCssOrBasePartMap('css');\n    }\n  }, {\n    key: \"getCssOrBasePartMap\",\n    value: function getCssOrBasePartMap(mode) {\n      var component = 'notification-toast';\n      var prefix = mode === 'basePart' ? '' : \"\".concat(component);\n      return classnames(mode === 'basePart' ? 'base' : component, this.variant && \"\".concat(prefix, \"--variant-\").concat(this.variant), !!this.opened && \"\".concat(prefix, \"--opened\"), !!!this.hideToast && \"\".concat(prefix, \"--show\"), !!this.hideToast && \"\".concat(prefix, \"--hide\"), this.story && \"\".concat(prefix, \"--story\"));\n    }\n  }, {\n    key: \"element\",\n    get: function get() {\n      return getElement(this);\n    }\n  }]);\n\n  return NotificationToast;\n}();\n\nNotificationToast.style = notificationToastCss;\nexport { NotificationToast as scale_notification_toast };","map":null,"metadata":{},"sourceType":"module"}