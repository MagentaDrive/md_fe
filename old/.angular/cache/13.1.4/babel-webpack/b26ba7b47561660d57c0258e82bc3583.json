{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { r as registerInstance, c as createEvent, h, a as Host, g as getElement } from './index-f2e5998d.js';\nimport { c as classnames } from './index-713f92a5.js';\nimport { e as emitEvent } from './utils-524c237e.js';\nvar collapsibleCss = \":host{--spacing-y:var(--scl-spacing-16);--font-size-button:var(--scl-font-size-20);--font-weight-button:var(--scl-font-weight-extrabold);--line-height-button:var(--scl-font-line-height-125);--border-width-button:var(--scl-spacing-2);--radius-button:var(--scl-radius-4);--spacing-left-button:var(--scl-spacing-4);--spacing-left-button-text:var(--scl-spacing-8);--color-button-hover:var(--scl-color-primary-hover);--color-button-active:var(--scl-color-primary-active);--background-button-hover:var(--scl-color-background-light);--border-color-button-focus:var(--scl-color-focus);--spacing-top-icon:calc(var(--scl-spacing-4) + 1px);--spacing-right-content:var(--scl-spacing-48);--spacing-left-content:var(--scl-spacing-32);--spacing-top-content:var(--scl-spacing-16);--spacing-bottom-content:var(--scl-spacing-24)}.collapsible{position:relative;margin:var(--spacing-y) 0}.collapsible--expanded:before{top:0;left:0;right:0;width:100%;border:var(--scl-spacing-1) solid transparent;content:'';display:block;position:absolute;pointer-events:none;bottom:calc(-1 * var(--spacing-y))}.collapsible__heading{margin:0}.collapsible__button{color:currentColor;width:100%;display:flex;text-align:left;align-items:flex-start;padding-top:0;border-color:transparent;border-style:solid;padding-right:0;padding-bottom:0;background-color:transparent;font-size:var(--font-size-button);font-weight:var(--font-weight-button);line-height:var(--line-height-button);border-width:var(--border-width-button);border-radius:var(--radius-button);padding-left:var(--spacing-left-button);font-family:inherit;word-spacing:inherit;letter-spacing:inherit}.collapsible__button-text{margin-left:var(--spacing-left-button-text)}.collapsible__button:hover{cursor:pointer;color:var(--color-button-hover);background-color:var(--background-button-hover)}.collapsible__button:active{color:var(--color-button-active)}.collapsible__button:focus{outline:none;border-color:var(--border-color-button-focus)}.collapsible__icon{transform:rotate(0.75turn);flex-shrink:0;margin-top:var(--spacing-top-icon)}.collapsible__button[aria-expanded='true'] .collapsible__icon{transform:none}.collapsible__content{padding-right:var(--spacing-right-content);padding-left:var(--spacing-left-content);margin-top:var(--spacing-top-content);margin-bottom:var(--spacing-bottom-content)}\";\nvar i = 0;\n\nvar Collapsible = /*#__PURE__*/function () {\n  function Collapsible(hostRef) {\n    var _this = this;\n\n    _classCallCheck(this, Collapsible);\n\n    registerInstance(this, hostRef);\n    this.scaleExpand = createEvent(this, \"scale-expand\", 7);\n    this.scaleExpandLegacy = createEvent(this, \"scaleExpand\", 7);\n    /** Default aria-level for heading */\n\n    this.headingLevel = 2;\n\n    this.handleClick = function () {\n      _this.expanded = !_this.expanded;\n      emitEvent(_this, 'scaleExpand', {\n        expanded: _this.expanded\n      });\n    };\n  }\n\n  _createClass(Collapsible, [{\n    key: \"componentWillLoad\",\n    value: function componentWillLoad() {\n      var j = i++;\n      this.headingId = 'collapsable-heading-' + j;\n      this.panelId = 'collapsable-panel-' + j;\n    }\n  }, {\n    key: \"componentDidLoad\",\n    value: function componentDidLoad() {\n      this.setHeadingFromLightDOM();\n    }\n    /**\n     * @deprecated Safe to remove in 4.0\n     * @see https://github.com/telekom/scale/pull/319\n     */\n\n  }, {\n    key: \"setHeadingFromLightDOM\",\n    value: function setHeadingFromLightDOM() {\n      var lightHeading = this.hostElement.querySelector(':first-child');\n\n      if (lightHeading == null) {\n        return;\n      } // Only proceed if the element is not a heading and has no `slot` attribute\n\n\n      var isHeading = lightHeading.tagName.charAt(0).toUpperCase() === 'H';\n      var hasSlotAttr = lightHeading.hasAttribute('slot');\n\n      if (isHeading && !hasSlotAttr) {\n        this.headingElement.innerHTML = lightHeading.innerHTML;\n        lightHeading.style.display = 'none';\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return h(Host, null, this.styles && h(\"style\", null, this.styles), h(\"div\", {\n        class: this.getCssClassMap(),\n        part: classnames('base', this.expanded && 'expanded')\n      }, h(\"h2\", {\n        \"aria-level\": this.headingLevel,\n        class: \"collapsible__heading\",\n        part: \"heading\"\n      }, h(\"button\", {\n        id: this.headingId,\n        class: \"collapsible__button\",\n        part: \"button\",\n        onClick: this.handleClick,\n        \"aria-expanded\": this.expanded ? 'true' : 'false',\n        \"aria-controls\": this.panelId\n      }, h(\"scale-icon-navigation-collapse-down\", {\n        size: 16,\n        decorative: true,\n        class: \"collapsible__icon\",\n        part: classnames('icon', this.expanded && 'expanded')\n      }), h(\"span\", {\n        ref: function ref(el) {\n          return _this2.headingElement = el;\n        },\n        class: \"collapsible__button-text\",\n        part: \"button-text\"\n      }, h(\"slot\", {\n        name: \"heading\"\n      })))), h(\"div\", {\n        id: this.panelId,\n        role: \"region\",\n        \"aria-labelledby\": this.headingId,\n        hidden: !this.expanded,\n        class: \"collapsible__content\",\n        part: \"content\"\n      }, h(\"slot\", null))));\n    }\n  }, {\n    key: \"getCssClassMap\",\n    value: function getCssClassMap() {\n      return classnames('collapsible', this.expanded && 'collapsible--expanded');\n    }\n  }, {\n    key: \"hostElement\",\n    get: function get() {\n      return getElement(this);\n    }\n  }]);\n\n  return Collapsible;\n}();\n\nCollapsible.style = collapsibleCss;\nexport { Collapsible as scale_collapsible };","map":null,"metadata":{},"sourceType":"module"}