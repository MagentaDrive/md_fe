{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { r as registerInstance, h, a as Host, g as getElement } from './index-f2e5998d.js';\nvar iconCss = \"scale-icon{--display:inline-flex;--transition:all var(--scl-motion-duration-fast)\\n    var(--scl-motion-easing-standard);display:var(--display)}scale-icon path{transition:var(--transition)}@media screen and (forced-colors: active), (-ms-high-contrast: active){scale-icon svg,.scale-icon{color:white;stroke:white}}\";\n\nvar ContentSmile = /*#__PURE__*/function () {\n  function ContentSmile(hostRef) {\n    _classCallCheck(this, ContentSmile);\n\n    registerInstance(this, hostRef);\n    /** (optional) The width and height in pixels */\n\n    this.size = 24;\n    /** (optional) Sets the icon color via the `fill` attribute */\n\n    this.fill = 'currentColor';\n    /** (optional) Alias for `fill` */\n\n    this.color = 'currentColor';\n    /** (optional) If `true`, the icon changes visually */\n\n    this.selected = false;\n    /** (optional) If `true` the SVG element will get `aria-hidden=\"true\"` */\n\n    this.decorative = false;\n  }\n\n  _createClass(ContentSmile, [{\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      if (!this.hostElement.hasAttribute('styles')) {\n        this.hostElement.style.display = 'inline-flex';\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var ariaHidden = this.decorative ? {\n        'aria-hidden': 'true'\n      } : {};\n      return h(Host, null, h(\"svg\", Object.assign({\n        class: \"scale-icon\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: this.size,\n        height: this.size,\n        viewBox: \"0 0 24 24\"\n      }, ariaHidden), this.accessibilityTitle && h(\"title\", null, this.accessibilityTitle), h(\"g\", {\n        fill: this.fill === 'currentColor' ? this.color : this.fill\n      }, this.selected ? h(\"g\", null, h(\"path\", {\n        \"fill-rule\": \"evenodd\",\n        d: \"M12 1C5.925 1 1 5.925 1 12s4.925 11 11 11 11-4.925 11-11A11 11 0 0012 1zm3.5 6.5a1.5 1.5 0 110 3 1.5 1.5 0 010-3zm-7 0a1.5 1.5 0 110 3 1.5 1.5 0 010-3zm8.77 8.87c-1.305 1.99-3.225 3.13-5.27 3.13-2.045 0-3.965-1.14-5.27-3.13A.757.757 0 018 15.545C9 17.105 10.5 18 12 18s3-.895 4-2.455a.75.75 0 011.255.825h.015z\"\n      })) : h(\"g\", null, h(\"path\", {\n        d: \"M12 1c6.1 0 11 4.9 11 11s-4.9 11-11 11S1 18.1 1 12 5.95 1 12 1zm0 1.5c-5.25 0-9.5 4.25-9.5 9.5s4.25 9.5 9.5 9.5 9.5-4.25 9.5-9.5-4.25-9.5-9.5-9.5zM6.95 15.35c.35-.25.8-.15 1.05.2C9 17.1 10.5 18 12 18s3-.9 4-2.45c.25-.35.7-.45 1.05-.2.35.2.45.65.2 1.05-1.3 2-3.25 3.15-5.25 3.15S8.05 18.4 6.75 16.4c-.25-.35-.15-.8.2-1.05zM8.5 7.5a1.5 1.5 0 110 3 1.5 1.5 0 010-3zm7 0a1.5 1.5 0 110 3 1.5 1.5 0 010-3z\",\n        \"fill-rule\": \"evenodd\"\n      })))));\n    }\n  }, {\n    key: \"hostElement\",\n    get: function get() {\n      return getElement(this);\n    }\n  }]);\n\n  return ContentSmile;\n}();\n\nContentSmile.style = iconCss;\nexport { ContentSmile as scale_icon_content_smile };","map":null,"metadata":{},"sourceType":"module"}