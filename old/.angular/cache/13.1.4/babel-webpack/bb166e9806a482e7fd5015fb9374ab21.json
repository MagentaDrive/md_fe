{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { r as registerInstance, h, a as Host, g as getElement } from './index-f2e5998d.js';\nimport { c as classnames } from './index-713f92a5.js';\nvar sidebarNavCss = \":host{--max-width:15rem;--spacing-indent:var(--scl-spacing-24);--spacing-collapsible:var(--scl-spacing-16);--opacity-chevron:0;--left-current-border:0;--color:var(--scl-color-primary);--color-active:var(--scl-color-primary-active);--box-shadow-focus:inset 0 0 0 var(--scl-spacing-2) var(--scl-color-focus);--color-toggle-button:var(--scl-color-grey-60);--border-y-toggle-button:1px solid var(--scl-color-grey-10);--radius-toggle-button:var(--scl-radius-2)}.sidebar-nav--collapsible{--max-width:none;--spacing-indent:0;--opacity-chevron:1;--left-current-border:calc(-1 * var(--spacing-collapsible));padding-right:var(--spacing-collapsible);padding-left:var(--spacing-collapsible)}.sidebar-nav__list{list-style:none;max-width:var(--max-width);padding-left:0;margin-top:0;margin-bottom:0}.sidebar-nav__toggle-button{box-sizing:border-box;appearance:none;border:0;background-color:transparent;color:var(--color-toggle-button);width:100%;display:flex;justify-content:space-between;align-items:center;text-align:left;text-decoration:none;font-family:inherit;font-size:1rem;padding-top:1rem;padding-right:calc(0.5 * var(--spacing-indent));padding-bottom:1rem;padding-left:var(--spacing-indent);border-radius:var(--radius-toggle-button);border-bottom:var(--border-y-toggle-button);border-top:var(--border-y-toggle-button);cursor:pointer}.sidebar-nav__toggle-button:hover{color:var(--color);}.sidebar-nav__toggle-button:active{color:var(--color-active)}.sidebar-nav__toggle-button:focus{outline:none;box-shadow:var(--box-shadow-focus)}[aria-expanded='true'] .sidebar-nav__icon{transform:rotate(0.5turn)}\";\n\nvar SidebarNav = /*#__PURE__*/function () {\n  function SidebarNav(hostRef) {\n    var _this = this;\n\n    _classCallCheck(this, SidebarNav);\n\n    registerInstance(this, hostRef);\n    /** Set to `true` to make the sidebar toggleable (useful for small screens) */\n\n    this.collapsible = false;\n    /** Automatically set `collapsible` based on this media query */\n\n    this.collapsibleMediaQuery = '(max-width: 30em)';\n    /** Label for toggle button */\n\n    this.collapsibleLabel = 'Menu';\n    this.collapsed = true;\n\n    this.handleMediaQueryChange = function (event) {\n      _this.collapsible = event.matches;\n    };\n\n    this.toggle = function () {\n      _this.collapsed = !_this.collapsed;\n    };\n  }\n\n  _createClass(SidebarNav, [{\n    key: \"componentDidLoad\",\n    value: function componentDidLoad() {\n      this.setNestingLevelOnChildren();\n      this.setMatchMedia();\n    }\n  }, {\n    key: \"disconnectedCallback\",\n    value: function disconnectedCallback() {\n      if (this.mq != null) {\n        this.mq.removeListener(this.handleMediaQueryChange);\n      }\n    }\n    /**\n     * Set `nesting-level` and `condensed` attributes in\n     * <scale-sidebar-nav-collapsible> and <scale-sidebar-nav-item> children,\n     * so styling different levels \"automatically\" is possible.\n     */\n\n  }, {\n    key: \"setNestingLevelOnChildren\",\n    value: function setNestingLevelOnChildren() {\n      function setNestingLevel(el) {\n        var level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n        Array.from(el.children).forEach(function (child) {\n          if (child.tagName.toUpperCase() === 'SCALE-SIDEBAR-NAV-COLLAPSIBLE') {\n            setNestingLevel(child, level + 1);\n\n            if (!child.hasAttribute('nesting-level')) {\n              child.setAttribute('nesting-level', String(level));\n            }\n\n            if (level === 2 && !child.hasAttribute('condensed')) {\n              child.setAttribute('condensed', 'true');\n            }\n          }\n\n          if (child.tagName.toUpperCase() === 'SCALE-SIDEBAR-NAV-ITEM') {\n            if (!child.hasAttribute('nesting-level')) {\n              child.setAttribute('nesting-level', String(level));\n            }\n\n            if (level === 3 && !child.hasAttribute('condensed')) {\n              child.setAttribute('condensed', 'true');\n            }\n          }\n        });\n      }\n\n      setNestingLevel(this.el);\n    }\n  }, {\n    key: \"setMatchMedia\",\n    value: function setMatchMedia() {\n      if (this.collapsibleMediaQuery) {\n        this.mq = window.matchMedia(this.collapsibleMediaQuery); // Recent versions of Safari throw with `addEventListener`\n        // https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList/addListener\n\n        this.mq.addListener(this.handleMediaQueryChange);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var label = this.ariaLabel ? {\n        'aria-label': this.ariaLabel\n      } : {};\n      var hidden = this.collapsible ? {\n        hidden: this.collapsed\n      } : {};\n      return h(Host, null, this.styles && h(\"style\", null, this.styles), h(\"div\", {\n        part: this.getBasePartMap(),\n        class: this.getCssClassMap()\n      }, this.collapsible === true && h(\"button\", {\n        part: \"toggle-button\",\n        class: \"sidebar-nav__toggle-button\",\n        \"aria-expanded\": this.collapsed ? 'false' : 'true',\n        onClick: this.toggle\n      }, this.collapsibleLabel, h(\"scale-icon-navigation-collapse-down\", {\n        part: \"icon\",\n        class: \"sidebar-nav__icon\",\n        size: 16\n      })), h(\"nav\", Object.assign({\n        part: \"nav\"\n      }, label, hidden), h(\"ul\", {\n        part: \"list\",\n        class: \"sidebar-nav__list\",\n        role: \"list\"\n      }, h(\"slot\", null)))));\n    }\n  }, {\n    key: \"getBasePartMap\",\n    value: function getBasePartMap() {\n      return this.getCssOrBasePartMap('basePart');\n    }\n  }, {\n    key: \"getCssClassMap\",\n    value: function getCssClassMap() {\n      return this.getCssOrBasePartMap('css');\n    }\n  }, {\n    key: \"getCssOrBasePartMap\",\n    value: function getCssOrBasePartMap(mode) {\n      var component = 'sidebar-nav';\n      var prefix = mode === 'basePart' ? '' : \"\".concat(component, \"--\");\n      return classnames(component, this.collapsible && \"\".concat(prefix, \"collapsible\"));\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return getElement(this);\n    }\n  }]);\n\n  return SidebarNav;\n}();\n\nSidebarNav.style = sidebarNavCss;\nexport { SidebarNav as scale_sidebar_nav };","map":null,"metadata":{},"sourceType":"module"}