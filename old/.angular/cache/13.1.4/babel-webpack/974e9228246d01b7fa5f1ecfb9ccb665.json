{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport _classCallCheck from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport { h, r as registerInstance, c as createEvent, a as Host, g as getElement } from './index-f2e5998d.js';\nvar ISO_DATE_FORMAT = /^(\\d{4})-(\\d{2})-(\\d{2})$/;\nvar DaysOfWeek = /*#__PURE__*/(function () {\n  (function (DaysOfWeek) {\n    DaysOfWeek[DaysOfWeek[\"Sunday\"] = 0] = \"Sunday\";\n    DaysOfWeek[DaysOfWeek[\"Monday\"] = 1] = \"Monday\";\n    DaysOfWeek[DaysOfWeek[\"Tuesday\"] = 2] = \"Tuesday\";\n    DaysOfWeek[DaysOfWeek[\"Wednesday\"] = 3] = \"Wednesday\";\n    DaysOfWeek[DaysOfWeek[\"Thursday\"] = 4] = \"Thursday\";\n    DaysOfWeek[DaysOfWeek[\"Friday\"] = 5] = \"Friday\";\n    DaysOfWeek[DaysOfWeek[\"Saturday\"] = 6] = \"Saturday\";\n  })(DaysOfWeek || (DaysOfWeek = {}));\n\n  return DaysOfWeek;\n})();\n\nfunction createDate(year, month, day) {\n  var dayInt = parseInt(day, 10);\n  var monthInt = parseInt(month, 10);\n  var yearInt = parseInt(year, 10);\n  var isValid = Number.isInteger(yearInt) && // all parts should be integers\n  Number.isInteger(monthInt) && Number.isInteger(dayInt) && monthInt > 0 && // month must be 1-12\n  monthInt <= 12 && dayInt > 0 && // day must be 1-31\n  dayInt <= 31 && yearInt > 0;\n\n  if (isValid) {\n    return new Date(yearInt, monthInt - 1, dayInt);\n  }\n}\n/**\n * @param value date string in ISO format YYYY-MM-DD\n */\n\n\nfunction parseISODate(value) {\n  if (!value) {\n    return;\n  }\n\n  var matches = value.match(ISO_DATE_FORMAT);\n\n  if (matches) {\n    return createDate(matches[1], matches[2], matches[3]);\n  }\n}\n/**\n * print date in format YYYY-MM-DD\n * @param date\n */\n\n\nfunction printISODate(date) {\n  if (!date) {\n    return \"\";\n  }\n\n  var d = date.getDate().toString(10);\n  var m = (date.getMonth() + 1).toString(10);\n  var y = date.getFullYear().toString(10); // days are not zero-indexed, so pad if less than 10\n\n  if (date.getDate() < 10) {\n    d = \"0\".concat(d);\n  } // months *are* zero-indexed, pad if less than 9!\n\n\n  if (date.getMonth() < 9) {\n    m = \"0\".concat(m);\n  }\n\n  return \"\".concat(y, \"-\").concat(m, \"-\").concat(d);\n}\n/**\n * Compare if two dates are equal in terms of day, month, and year\n */\n\n\nfunction isEqual(a, b) {\n  if (a == null || b == null) {\n    return false;\n  }\n\n  return a.getFullYear() === b.getFullYear() && a.getMonth() === b.getMonth() && a.getDate() === b.getDate();\n}\n\nfunction _addDays(date, days) {\n  var d = new Date(date);\n  d.setDate(d.getDate() + days);\n  return d;\n}\n\nfunction _startOfWeek(date) {\n  var firstDayOfWeek = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DaysOfWeek.Monday;\n  var d = new Date(date);\n  var day = d.getDay();\n  var diff = (day < firstDayOfWeek ? 7 : 0) + day - firstDayOfWeek;\n  d.setDate(d.getDate() - diff);\n  return d;\n}\n\nfunction _endOfWeek(date) {\n  var firstDayOfWeek = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DaysOfWeek.Monday;\n  var d = new Date(date);\n  var day = d.getDay();\n  var diff = (day < firstDayOfWeek ? -7 : 0) + 6 - (day - firstDayOfWeek);\n  d.setDate(d.getDate() + diff);\n  return d;\n}\n\nfunction startOfMonth(date) {\n  return new Date(date.getFullYear(), date.getMonth(), 1);\n}\n\nfunction endOfMonth(date) {\n  return new Date(date.getFullYear(), date.getMonth() + 1, 0);\n}\n\nfunction _setMonth(date, month) {\n  var d = new Date(date);\n  d.setMonth(month);\n  return d;\n}\n\nfunction _setYear(date, year) {\n  var d = new Date(date);\n  d.setFullYear(year);\n  return d;\n}\n/**\n * Check if date is within a min and max\n */\n\n\nfunction inRange(date, min, max) {\n  return clamp(date, min, max) === date;\n}\n/**\n * Ensures date is within range, returns min or max if out of bounds\n */\n\n\nfunction clamp(date, min, max) {\n  var time = date.getTime();\n\n  if (min && min instanceof Date && time < min.getTime()) {\n    return min;\n  }\n\n  if (max && max instanceof Date && time > max.getTime()) {\n    return max;\n  }\n\n  return date;\n}\n/**\n * given start and end date, return an (inclusive) array of all dates in between\n * @param start\n * @param end\n */\n\n\nfunction getDaysInRange(start, end) {\n  var days = [];\n  var current = start;\n\n  while (!isEqual(current, end)) {\n    days.push(current);\n    current = _addDays(current, 1);\n  }\n\n  days.push(current);\n  return days;\n}\n/**\n * given a date, return an array of dates from a calendar perspective\n * @param date\n * @param firstDayOfWeek\n */\n\n\nfunction getViewOfMonth(date) {\n  var firstDayOfWeek = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DaysOfWeek.Monday;\n\n  var start = _startOfWeek(startOfMonth(date), firstDayOfWeek);\n\n  var end = _endOfWeek(endOfMonth(date), firstDayOfWeek);\n\n  return getDaysInRange(start, end);\n}\n/**\n * Form random hash\n */\n\n\nfunction chr4() {\n  return Math.random().toString(16).slice(-4);\n}\n/**\n * Create random identifier with a prefix\n * @param prefix\n */\n\n\nfunction createIdentifier(prefix) {\n  return \"\".concat(prefix, \"-\").concat(chr4()).concat(chr4(), \"-\").concat(chr4(), \"-\").concat(chr4(), \"-\").concat(chr4(), \"-\").concat(chr4()).concat(chr4()).concat(chr4());\n}\n\nvar DatePickerInput = function DatePickerInput(_ref) {\n  var onClick = _ref.onClick,\n      dateFormatter = _ref.dateFormatter,\n      localization = _ref.localization,\n      name = _ref.name,\n      formattedValue = _ref.formattedValue,\n      valueAsDate = _ref.valueAsDate,\n      value = _ref.value,\n      identifier = _ref.identifier,\n      disabled = _ref.disabled,\n      required = _ref.required,\n      role = _ref.role,\n      buttonRef = _ref.buttonRef,\n      inputRef = _ref.inputRef,\n      onInput = _ref.onInput,\n      onBlur = _ref.onBlur,\n      onFocus = _ref.onFocus;\n  return h(\"div\", {\n    class: \"duet-date__input-wrapper\"\n  }, h(\"input\", {\n    class: \"duet-date__input\",\n    value: formattedValue,\n    placeholder: localization.placeholder,\n    id: identifier,\n    disabled: disabled,\n    role: role,\n    required: required ? true : undefined,\n    \"aria-autocomplete\": \"none\",\n    onInput: onInput,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    autoComplete: \"off\",\n    ref: inputRef\n  }), h(\"input\", {\n    type: \"hidden\",\n    name: name,\n    value: value\n  }), h(\"button\", {\n    class: \"duet-date__toggle\",\n    onClick: onClick,\n    disabled: disabled,\n    ref: buttonRef,\n    type: \"button\"\n  }, h(\"span\", {\n    class: \"duet-date__toggle-icon\"\n  }, h(\"svg\", {\n    \"aria-hidden\": \"true\",\n    height: \"24\",\n    viewBox: \"0 0 21 21\",\n    width: \"24\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, h(\"g\", {\n    fill: \"none\",\n    \"fill-rule\": \"evenodd\",\n    transform: \"translate(2 2)\"\n  }, h(\"path\", {\n    d: \"m2.5.5h12c1.1045695 0 2 .8954305 2 2v12c0 1.1045695-.8954305 2-2 2h-12c-1.1045695 0-2-.8954305-2-2v-12c0-1.1045695.8954305-2 2-2z\",\n    stroke: \"currentColor\",\n    \"stroke-linecap\": \"round\",\n    \"stroke-linejoin\": \"round\"\n  }), h(\"path\", {\n    d: \"m.5 4.5h16\",\n    stroke: \"currentColor\",\n    \"stroke-linecap\": \"round\",\n    \"stroke-linejoin\": \"round\"\n  }), h(\"g\", {\n    fill: \"currentColor\"\n  }, h(\"circle\", {\n    cx: \"8.5\",\n    cy: \"8.5\",\n    r: \"1\"\n  }), h(\"circle\", {\n    cx: \"4.5\",\n    cy: \"8.5\",\n    r: \"1\"\n  }), h(\"circle\", {\n    cx: \"12.5\",\n    cy: \"8.5\",\n    r: \"1\"\n  }), h(\"circle\", {\n    cx: \"8.5\",\n    cy: \"12.5\",\n    r: \"1\"\n  }), h(\"circle\", {\n    cx: \"4.5\",\n    cy: \"12.5\",\n    r: \"1\"\n  }), h(\"circle\", {\n    cx: \"12.5\",\n    cy: \"12.5\",\n    r: \"1\"\n  }))))), h(\"span\", {\n    class: \"duet-date__vhidden\"\n  }, localization.buttonLabel, valueAsDate && h(\"span\", null, \", \", localization.selectedDateMessage, \" \", dateFormatter.format(valueAsDate)))));\n};\n\nvar DatePickerDay = function DatePickerDay(_ref2) {\n  var focusedDay = _ref2.focusedDay,\n      today = _ref2.today,\n      day = _ref2.day,\n      onDaySelect = _ref2.onDaySelect,\n      onKeyboardNavigation = _ref2.onKeyboardNavigation,\n      focusedDayRef = _ref2.focusedDayRef,\n      inRange = _ref2.inRange,\n      isSelected = _ref2.isSelected,\n      dateFormatter = _ref2.dateFormatter;\n  var isToday = isEqual(day, today);\n  var isFocused = isEqual(day, focusedDay);\n  var isDisabled = day.getMonth() !== focusedDay.getMonth();\n  var isOutsideRange = !inRange;\n\n  function handleClick(e) {\n    onDaySelect(e, day);\n  }\n\n  return h(\"button\", {\n    class: {\n      \"duet-date__day\": true,\n      \"is-outside\": isOutsideRange,\n      \"is-disabled\": isDisabled,\n      \"is-today\": isToday\n    },\n    tabIndex: isFocused ? 0 : -1,\n    onClick: handleClick,\n    onKeyDown: onKeyboardNavigation,\n    disabled: isOutsideRange || isDisabled,\n    type: \"button\",\n    \"aria-pressed\": isSelected ? \"true\" : \"false\",\n    ref: function ref(el) {\n      if (isFocused && el && focusedDayRef) {\n        focusedDayRef(el);\n      }\n    }\n  }, h(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, day.getDate()), h(\"span\", {\n    class: \"duet-date__vhidden\"\n  }, dateFormatter.format(day)));\n};\n\nfunction chunk(array, chunkSize) {\n  var result = [];\n\n  for (var i = 0; i < array.length; i += chunkSize) {\n    result.push(array.slice(i, i + chunkSize));\n  }\n\n  return result;\n}\n\nfunction mapWithOffset(array, startingOffset, mapFn) {\n  return array.map(function (_, i) {\n    var adjustedIndex = (i + startingOffset) % array.length;\n    return mapFn(array[adjustedIndex]);\n  });\n}\n\nvar DatePickerMonth = function DatePickerMonth(_ref3) {\n  var selectedDate = _ref3.selectedDate,\n      focusedDate = _ref3.focusedDate,\n      labelledById = _ref3.labelledById,\n      localization = _ref3.localization,\n      firstDayOfWeek = _ref3.firstDayOfWeek,\n      min = _ref3.min,\n      max = _ref3.max,\n      dateFormatter = _ref3.dateFormatter,\n      onDateSelect = _ref3.onDateSelect,\n      onKeyboardNavigation = _ref3.onKeyboardNavigation,\n      focusedDayRef = _ref3.focusedDayRef;\n  var today = new Date();\n  var days = getViewOfMonth(focusedDate, firstDayOfWeek);\n  return h(\"table\", {\n    class: \"duet-date__table\",\n    \"aria-labelledby\": labelledById\n  }, h(\"thead\", null, h(\"tr\", null, mapWithOffset(localization.dayNames, firstDayOfWeek, function (dayName) {\n    return h(\"th\", {\n      class: \"duet-date__table-header\",\n      scope: \"col\"\n    }, h(\"span\", {\n      \"aria-hidden\": \"true\"\n    }, dayName.substr(0, 2)), h(\"span\", {\n      class: \"duet-date__vhidden\"\n    }, dayName));\n  }))), h(\"tbody\", null, chunk(days, 7).map(function (week) {\n    return h(\"tr\", {\n      class: \"duet-date__row\"\n    }, week.map(function (day) {\n      return h(\"td\", {\n        class: \"duet-date__cell\"\n      }, h(DatePickerDay, {\n        day: day,\n        today: today,\n        focusedDay: focusedDate,\n        isSelected: isEqual(day, selectedDate),\n        inRange: inRange(day, min, max),\n        onDaySelect: onDateSelect,\n        dateFormatter: dateFormatter,\n        onKeyboardNavigation: onKeyboardNavigation,\n        focusedDayRef: focusedDayRef\n      }));\n    }));\n  })));\n};\n\nvar localization = {\n  buttonLabel: \"Choose date\",\n  placeholder: \"YYYY-MM-DD\",\n  selectedDateMessage: \"Selected date is\",\n  prevMonthLabel: \"Previous month\",\n  nextMonthLabel: \"Next month\",\n  monthSelectLabel: \"Month\",\n  yearSelectLabel: \"Year\",\n  closeLabel: \"Close window\",\n  keyboardInstruction: \"You can use arrow keys to navigate dates\",\n  calendarHeading: \"Choose a date\",\n  dayNames: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  monthNames: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  monthNamesShort: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n  locale: \"en-GB\"\n};\nvar isoAdapter = {\n  parse: parseISODate,\n  format: printISODate\n};\nvar duetDatePickerCss = \".duet-date *,.duet-date *::before,.duet-date *::after{box-sizing:border-box;margin:0;width:auto}.duet-date{box-sizing:border-box;color:var(--duet-color-text);display:block;font-family:var(--duet-font);margin:0;position:relative;text-align:left;width:100%}.duet-date__input{-webkit-appearance:none;appearance:none;background:var(--duet-color-surface);border:1px solid var(--duet-color-text);border-radius:var(--duet-radius);color:var(--duet-color-text);float:none;font-family:var(--duet-font);font-size:100%;line-height:normal;padding:14px 60px 14px 14px;width:100%}.duet-date__input:focus{border-color:var(--duet-color-primary);box-shadow:0 0 0 1px var(--duet-color-primary);outline:0}.duet-date__input::-webkit-input-placeholder{color:var(--duet-color-placeholder);opacity:1}.duet-date__input:-moz-placeholder{color:var(--duet-color-placeholder);opacity:1}.duet-date__input:-ms-input-placeholder{color:var(--duet-color-placeholder)}.duet-date__input-wrapper{position:relative;width:100%}.duet-date__toggle{-moz-appearance:none;-webkit-appearance:none;-webkit-user-select:none;align-items:center;appearance:none;background:var(--duet-color-button);border:0;border-radius:0;border-bottom-right-radius:var(--duet-radius);border-top-right-radius:var(--duet-radius);box-shadow:inset 1px 0 0 rgba(0, 0, 0, 0.1);color:var(--duet-color-text);cursor:pointer;display:flex;height:calc(100% - 2px);justify-content:center;padding:0;position:absolute;right:1px;top:1px;user-select:none;width:48px;z-index:2}.duet-date__toggle:focus{box-shadow:0 0 0 2px var(--duet-color-primary);outline:0}.duet-date__toggle-icon{display:flex;flex-basis:100%;justify-content:center;align-items:center}.duet-date__dialog{display:flex;left:0;min-width:320px;opacity:0;position:absolute;top:100%;transform:scale(0.96) translateZ(0) translateY(-20px);transform-origin:top right;transition:transform 300ms ease, opacity 300ms ease, visibility 300ms ease;visibility:hidden;width:100%;will-change:transform, opacity, visibility;z-index:var(--duet-z-index)}@media (max-width: 35.9375em){.duet-date__dialog{background:var(--duet-color-overlay);bottom:0;position:fixed;right:0;top:0;transform:translateZ(0);transform-origin:bottom center}}.duet-date__dialog.is-left{left:auto;right:0;width:auto}.duet-date__dialog.is-active{opacity:1;transform:scale(1.0001) translateZ(0) translateY(0);visibility:visible}.duet-date__dialog-content{background:var(--duet-color-surface);border:1px solid rgba(0, 0, 0, 0.1);border-radius:var(--duet-radius);box-shadow:0 4px 10px 0 rgba(0, 0, 0, 0.1);margin-left:auto;margin-top:8px;max-width:310px;min-width:290px;padding:16px 16px 20px;position:relative;transform:none;width:100%;z-index:var(--duet-z-index)}@media (max-width: 35.9375em){.duet-date__dialog-content{border:0;border-radius:0;border-top-left-radius:var(--duet-radius);border-top-right-radius:var(--duet-radius);bottom:0;left:0;margin:0;max-width:none;min-height:26em;opacity:0;padding:0 8% 20px;position:absolute;transform:translateZ(0) translateY(100%);transition:transform 400ms ease, opacity 400ms ease, visibility 400ms ease;visibility:hidden;will-change:transform, opacity, visibility}.is-active .duet-date__dialog-content{opacity:1;transform:translateZ(0) translateY(0);visibility:visible}}.duet-date__table{border-collapse:collapse;border-spacing:0;color:var(--duet-color-text);font-size:1rem;font-weight:var(--duet-font-normal);line-height:1.25;text-align:center;width:100%}.duet-date__table-header{font-size:0.75rem;font-weight:var(--duet-font-bold);letter-spacing:1px;line-height:1.25;padding-bottom:8px;text-decoration:none;text-transform:uppercase}.duet-date__cell{text-align:center}.duet-date__day{-moz-appearance:none;-webkit-appearance:none;appearance:none;background:transparent;border:0;border-radius:50%;color:var(--duet-color-text);cursor:pointer;display:inline-block;font-family:var(--duet-font);font-size:0.875rem;font-variant-numeric:tabular-nums;font-weight:var(--duet-font-normal);height:36px;line-height:1.25;padding:0 0 1px;position:relative;text-align:center;vertical-align:middle;width:36px;z-index:1}.duet-date__day.is-today{box-shadow:0 0 0 1px var(--duet-color-primary);position:relative;z-index:200}.duet-date__day:hover::before,.duet-date__day.is-today::before{background:var(--duet-color-primary);border-radius:50%;bottom:0;content:\\\"\\\";left:0;opacity:0.06;position:absolute;right:0;top:0}.duet-date__day[aria-pressed=true],.duet-date__day:focus{background:var(--duet-color-primary);box-shadow:none;color:var(--duet-color-text-active);outline:0}.duet-date__day:active{background:var(--duet-color-primary);box-shadow:0 0 5px var(--duet-color-primary);color:var(--duet-color-text-active);z-index:200}.duet-date__day:focus{box-shadow:0 0 5px var(--duet-color-primary);z-index:200}.duet-date__day.is-disabled{background:transparent;box-shadow:none;color:var(--duet-color-text);cursor:default;opacity:0.5}.duet-date__day.is-disabled::before{display:none}.duet-date__day.is-outside{background:var(--duet-color-button);box-shadow:none;color:var(--duet-color-text);cursor:default;opacity:0.6;pointer-events:none}.duet-date__day.is-outside::before{display:none}.duet-date__header{align-items:center;display:flex;justify-content:space-between;margin-bottom:16px;width:100%}.duet-date__nav{white-space:nowrap}.duet-date__prev,.duet-date__next{-moz-appearance:none;-webkit-appearance:none;align-items:center;appearance:none;background:var(--duet-color-button);border:0;border-radius:50%;color:var(--duet-color-text);cursor:pointer;display:inline-flex;height:32px;justify-content:center;margin-left:8px;padding:0;transition:background-color 300ms ease;width:32px}@media (max-width: 35.9375em){.duet-date__prev,.duet-date__next{height:40px;width:40px}}.duet-date__prev:focus,.duet-date__next:focus{box-shadow:0 0 0 2px var(--duet-color-primary);outline:0}.duet-date__prev:active:focus,.duet-date__next:active:focus{box-shadow:none}.duet-date__prev:disabled,.duet-date__next:disabled{cursor:default;opacity:0.5}.duet-date__prev svg,.duet-date__next svg{margin:0 auto}.duet-date__select{display:inline-flex;margin-top:4px;position:relative}.duet-date__select span{margin-right:4px}.duet-date__select select{cursor:pointer;font-size:1rem;height:100%;left:0;opacity:0;position:absolute;top:0;width:100%;z-index:2}.duet-date__select select:focus+.duet-date__select-label{box-shadow:0 0 0 2px var(--duet-color-primary)}.duet-date__select-label{align-items:center;border-radius:var(--duet-radius);color:var(--duet-color-text);display:flex;font-size:1.25rem;font-weight:var(--duet-font-bold);line-height:1.25;padding:0 4px 0 8px;pointer-events:none;position:relative;width:100%;z-index:1}.duet-date__select-label svg{width:16px;height:16px}.duet-date__mobile{align-items:center;border-bottom:1px solid rgba(0, 0, 0, 0.12);display:flex;justify-content:space-between;margin-bottom:20px;margin-left:-10%;overflow:hidden;padding:12px 20px;position:relative;text-overflow:ellipsis;white-space:nowrap;width:120%}@media (min-width: 36em){.duet-date__mobile{border:0;margin:0;overflow:visible;padding:0;position:absolute;right:-8px;top:-8px;width:auto}}.duet-date__mobile-heading{display:inline-block;font-weight:var(--duet-font-bold);max-width:84%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}@media (min-width: 36em){.duet-date__mobile-heading{display:none}}.duet-date__close{-webkit-appearance:none;align-items:center;appearance:none;background:var(--duet-color-button);border:0;border-radius:50%;color:var(--duet-color-text);cursor:pointer;display:flex;height:24px;justify-content:center;padding:0;width:24px}@media (min-width: 36em){.duet-date__close{opacity:0}}.duet-date__close:focus{box-shadow:0 0 0 2px var(--duet-color-primary);outline:none}@media (min-width: 36em){.duet-date__close:focus{opacity:1}}.duet-date__close svg{margin:0 auto}.duet-date__vhidden{border:0;clip:rect(1px, 1px, 1px, 1px);height:1px;overflow:hidden;padding:0;position:absolute;top:0;width:1px}\";\n\nfunction range(from, to) {\n  var result = [];\n\n  for (var i = from; i <= to; i++) {\n    result.push(i);\n  }\n\n  return result;\n}\n\nvar keyCode = {\n  TAB: 9,\n  ESC: 27,\n  SPACE: 32,\n  PAGE_UP: 33,\n  PAGE_DOWN: 34,\n  END: 35,\n  HOME: 36,\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\nvar DISALLOWED_CHARACTERS = /[^0-9\\.\\/\\-]+/g;\nvar TRANSITION_MS = 300;\n\nvar DuetDatePicker = /*#__PURE__*/function () {\n  function DuetDatePicker(hostRef) {\n    var _this = this;\n\n    _classCallCheck(this, DuetDatePicker);\n\n    registerInstance(this, hostRef);\n    this.duetChange = createEvent(this, \"duetChange\", 7);\n    this.duetBlur = createEvent(this, \"duetBlur\", 7);\n    this.duetFocus = createEvent(this, \"duetFocus\", 7);\n    /**\n     * Own Properties\n     */\n\n    this.monthSelectId = createIdentifier(\"DuetDateMonth\");\n    this.yearSelectId = createIdentifier(\"DuetDateYear\");\n    this.dialogLabelId = createIdentifier(\"DuetDateLabel\");\n    this.initialTouchX = null;\n    this.initialTouchY = null;\n    /**\n     * State() variables\n     */\n\n    this.activeFocus = false;\n    this.focusedDay = new Date();\n    this.open = false;\n    /**\n     * Public Property API\n     */\n\n    /**\n     * Name of the date picker input.\n     */\n\n    this.name = \"date\";\n    /**\n     * Adds a unique identifier for the date picker input. Use this instead of html `id` attribute.\n     */\n\n    this.identifier = \"\";\n    /**\n     * Makes the date picker input component disabled. This prevents users from being able to\n     * interact with the input, and conveys its inactive state to assistive technologies.\n     */\n\n    this.disabled = false;\n    /**\n     * Forces the opening direction of the calendar modal to be always left or right.\n     * This setting can be useful when the input is smaller than the opening date picker\n     * would be as by default the picker always opens towards right.\n     */\n\n    this.direction = \"right\";\n    /**\n     * Should the input be marked as required?\n     */\n\n    this.required = false;\n    /**\n     * Date value. Must be in IS0-8601 format: YYYY-MM-DD.\n     */\n\n    this.value = \"\";\n    /**\n     * Minimum date allowed to be picked. Must be in IS0-8601 format: YYYY-MM-DD.\n     * This setting can be used alone or together with the max property.\n     */\n\n    this.min = \"\";\n    /**\n     * Maximum date allowed to be picked. Must be in IS0-8601 format: YYYY-MM-DD.\n     * This setting can be used alone or together with the min property.\n     */\n\n    this.max = \"\";\n    /**\n     * Which day is considered first day of the week? `0` for Sunday, `1` for Monday, etc.\n     * Default is Monday.\n     */\n\n    this.firstDayOfWeek = DaysOfWeek.Monday;\n    /**\n     * Button labels, day names, month names, etc, used for localization.\n     * Default is English.\n     */\n\n    this.localization = localization;\n    /**\n     * Date adapter, for custom parsing/formatting.\n     * Must be object with a `parse` function which accepts a `string` and returns a `Date`,\n     * and a `format` function which accepts a `Date` and returns a `string`.\n     * Default is IS0-8601 parsing and formatting.\n     */\n\n    this.dateAdapter = isoAdapter;\n    /**\n     * Local methods.\n     */\n\n    this.enableActiveFocus = function () {\n      _this.activeFocus = true;\n    };\n\n    this.disableActiveFocus = function () {\n      _this.activeFocus = false;\n    };\n\n    this.toggleOpen = function (e) {\n      e.preventDefault();\n      _this.open ? _this.hide(false) : _this.show();\n    };\n\n    this.handleEscKey = function (event) {\n      if (event.keyCode === keyCode.ESC) {\n        _this.hide();\n      }\n    };\n\n    this.handleBlur = function (event) {\n      event.stopPropagation();\n\n      _this.duetBlur.emit({\n        component: \"duet-date-picker\"\n      });\n    };\n\n    this.handleFocus = function (event) {\n      event.stopPropagation();\n\n      _this.duetFocus.emit({\n        component: \"duet-date-picker\"\n      });\n    };\n\n    this.handleTouchStart = function (event) {\n      var touch = event.changedTouches[0];\n      _this.initialTouchX = touch.pageX;\n      _this.initialTouchY = touch.pageY;\n    };\n\n    this.handleTouchMove = function (event) {\n      event.preventDefault();\n    };\n\n    this.handleTouchEnd = function (event) {\n      var touch = event.changedTouches[0];\n      var distX = touch.pageX - _this.initialTouchX; // get horizontal dist traveled\n\n      var distY = touch.pageY - _this.initialTouchY; // get vertical dist traveled\n\n      var threshold = 70;\n      var isHorizontalSwipe = Math.abs(distX) >= threshold && Math.abs(distY) <= threshold;\n      var isDownwardsSwipe = Math.abs(distY) >= threshold && Math.abs(distX) <= threshold && distY > 0;\n\n      if (isHorizontalSwipe) {\n        _this.addMonths(distX < 0 ? 1 : -1);\n      } else if (isDownwardsSwipe) {\n        _this.hide(false);\n\n        event.preventDefault();\n      }\n\n      _this.initialTouchY = null;\n      _this.initialTouchX = null;\n    };\n\n    this.handleNextMonthClick = function (event) {\n      event.preventDefault();\n\n      _this.addMonths(1);\n    };\n\n    this.handlePreviousMonthClick = function (event) {\n      event.preventDefault();\n\n      _this.addMonths(-1);\n    };\n\n    this.handleFirstFocusableKeydown = function (event) {\n      // this ensures focus is trapped inside the dialog\n      if (event.keyCode === keyCode.TAB && event.shiftKey) {\n        _this.focusedDayNode.focus();\n\n        event.preventDefault();\n      }\n    };\n\n    this.handleKeyboardNavigation = function (event) {\n      // handle tab separately, since it needs to be treated\n      // differently to other keyboard interactions\n      if (event.keyCode === keyCode.TAB && !event.shiftKey) {\n        event.preventDefault();\n\n        _this.firstFocusableElement.focus();\n\n        return;\n      }\n\n      var handled = true;\n\n      switch (event.keyCode) {\n        case keyCode.RIGHT:\n          _this.addDays(1);\n\n          break;\n\n        case keyCode.LEFT:\n          _this.addDays(-1);\n\n          break;\n\n        case keyCode.DOWN:\n          _this.addDays(7);\n\n          break;\n\n        case keyCode.UP:\n          _this.addDays(-7);\n\n          break;\n\n        case keyCode.PAGE_UP:\n          if (event.shiftKey) {\n            _this.addYears(-1);\n          } else {\n            _this.addMonths(-1);\n          }\n\n          break;\n\n        case keyCode.PAGE_DOWN:\n          if (event.shiftKey) {\n            _this.addYears(1);\n          } else {\n            _this.addMonths(1);\n          }\n\n          break;\n\n        case keyCode.HOME:\n          _this.startOfWeek();\n\n          break;\n\n        case keyCode.END:\n          _this.endOfWeek();\n\n          break;\n\n        default:\n          handled = false;\n      }\n\n      if (handled) {\n        event.preventDefault();\n\n        _this.enableActiveFocus();\n      }\n    };\n\n    this.handleDaySelect = function (_event, day) {\n      if (!inRange(day, parseISODate(_this.min), parseISODate(_this.max))) {\n        return;\n      }\n\n      if (day.getMonth() === _this.focusedDay.getMonth()) {\n        _this.setValue(day);\n\n        _this.hide();\n      } else {\n        _this.setFocusedDay(day);\n      }\n    };\n\n    this.handleMonthSelect = function (e) {\n      _this.setMonth(parseInt(e.target.value, 10));\n    };\n\n    this.handleYearSelect = function (e) {\n      _this.setYear(parseInt(e.target.value, 10));\n    };\n\n    this.handleInputChange = function (e) {\n      var target = e.target; // clean up any invalid characters\n\n      target.value = target.value.replace(DISALLOWED_CHARACTERS, \"\");\n\n      var parsed = _this.dateAdapter.parse(target.value, createDate);\n\n      if (parsed || target.value === \"\") {\n        _this.setValue(parsed);\n      }\n    };\n\n    this.processFocusedDayNode = function (element) {\n      _this.focusedDayNode = element;\n\n      if (_this.activeFocus && _this.open) {\n        setTimeout(function () {\n          return element.focus();\n        }, 0);\n      }\n    };\n  }\n\n  _createClass(DuetDatePicker, [{\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      this.createDateFormatters();\n    }\n  }, {\n    key: \"createDateFormatters\",\n    value: function createDateFormatters() {\n      this.dateFormatShort = new Intl.DateTimeFormat(this.localization.locale, {\n        day: \"numeric\",\n        month: \"long\"\n      });\n      this.dateFormatLong = new Intl.DateTimeFormat(this.localization.locale, {\n        day: \"numeric\",\n        month: \"long\",\n        year: \"numeric\"\n      });\n    }\n    /**\n     * Component event handling.\n     */\n\n  }, {\n    key: \"handleDocumentClick\",\n    value: function handleDocumentClick(e) {\n      if (!this.open) {\n        return;\n      }\n\n      var target = e.target; // TODO: stopPropagation only on open??\n      // the dialog and the button aren't considered clicks outside.\n      // dialog for obvious reasons, but the button needs to be skipped\n      // so that two things are possible:\n      //\n      // a) clicking again on the button when dialog is open should close the modal.\n      //    without skipping the button here, we would see a click outside\n      //    _and_ a click on the button, so the `open` state goes\n      //    open -> close (click outside) -> open (click button)\n      //\n      // b) clicking another date picker's button should close the current calendar\n      //    and open the new one. this means we can't stopPropagation() on the button itself\n      //\n      // this was the only satisfactory combination of things to get the above to work\n\n      if (this.dialogWrapperNode.contains(target) || this.datePickerButton.contains(target)) {\n        return;\n      }\n\n      this.hide(false);\n    }\n    /**\n     * Public methods API\n     */\n\n    /**\n     * Sets focus on the date picker's input. Use this method instead of the global `focus()`.\n     */\n\n  }, {\n    key: \"setFocus\",\n    value: function () {\n      var _setFocus = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", this.datePickerInput.focus());\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function setFocus() {\n        return _setFocus.apply(this, arguments);\n      }\n\n      return setFocus;\n    }()\n    /**\n     * Show the calendar modal, moving focus to the calendar inside.\n     */\n\n  }, {\n    key: \"show\",\n    value: function () {\n      var _show = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.open = true;\n                this.setFocusedDay(parseISODate(this.value) || new Date());\n                clearTimeout(this.focusTimeoutId);\n                this.focusTimeoutId = setTimeout(function () {\n                  return _this2.monthSelectNode.focus();\n                }, TRANSITION_MS);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function show() {\n        return _show.apply(this, arguments);\n      }\n\n      return show;\n    }()\n    /**\n     * Hide the calendar modal. Set `moveFocusToButton` to false to prevent focus\n     * returning to the date picker's button. Default is true.\n     */\n\n  }, {\n    key: \"hide\",\n    value: function () {\n      var _hide = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var _this3 = this;\n\n        var moveFocusToButton,\n            _args3 = arguments;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                moveFocusToButton = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : true;\n                this.open = false; // in cases where calendar is quickly shown and hidden\n                // we should avoid moving focus to the button\n\n                clearTimeout(this.focusTimeoutId);\n\n                if (moveFocusToButton) {\n                  // iOS VoiceOver needs to wait for all transitions to finish.\n                  setTimeout(function () {\n                    return _this3.datePickerButton.focus();\n                  }, TRANSITION_MS + 200);\n                }\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function hide() {\n        return _hide.apply(this, arguments);\n      }\n\n      return hide;\n    }()\n  }, {\n    key: \"addDays\",\n    value: function addDays(days) {\n      this.setFocusedDay(_addDays(this.focusedDay, days));\n    }\n  }, {\n    key: \"addMonths\",\n    value: function addMonths(months) {\n      this.setMonth(this.focusedDay.getMonth() + months);\n    }\n  }, {\n    key: \"addYears\",\n    value: function addYears(years) {\n      this.setYear(this.focusedDay.getFullYear() + years);\n    }\n  }, {\n    key: \"startOfWeek\",\n    value: function startOfWeek() {\n      this.setFocusedDay(_startOfWeek(this.focusedDay, this.firstDayOfWeek));\n    }\n  }, {\n    key: \"endOfWeek\",\n    value: function endOfWeek() {\n      this.setFocusedDay(_endOfWeek(this.focusedDay, this.firstDayOfWeek));\n    }\n  }, {\n    key: \"setMonth\",\n    value: function setMonth(month) {\n      var min = _setMonth(startOfMonth(this.focusedDay), month);\n\n      var max = endOfMonth(min);\n\n      var date = _setMonth(this.focusedDay, month);\n\n      this.setFocusedDay(clamp(date, min, max));\n    }\n  }, {\n    key: \"setYear\",\n    value: function setYear(year) {\n      var min = _setYear(startOfMonth(this.focusedDay), year);\n\n      var max = endOfMonth(min);\n\n      var date = _setYear(this.focusedDay, year);\n\n      this.setFocusedDay(clamp(date, min, max));\n    }\n  }, {\n    key: \"setFocusedDay\",\n    value: function setFocusedDay(day) {\n      this.focusedDay = clamp(day, parseISODate(this.min), parseISODate(this.max));\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(date) {\n      this.value = printISODate(date);\n      this.duetChange.emit({\n        component: \"duet-date-picker\",\n        value: this.value,\n        valueAsDate: date\n      });\n    }\n    /**\n     * render() function\n     * Always the last one in the class.\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var valueAsDate = parseISODate(this.value);\n      var formattedDate = valueAsDate && this.dateAdapter.format(valueAsDate);\n      var selectedYear = (valueAsDate || this.focusedDay).getFullYear();\n      var focusedMonth = this.focusedDay.getMonth();\n      var focusedYear = this.focusedDay.getFullYear();\n      var minDate = parseISODate(this.min);\n      var maxDate = parseISODate(this.max);\n      var prevMonthDisabled = minDate != null && minDate.getMonth() === focusedMonth && minDate.getFullYear() === focusedYear;\n      var nextMonthDisabled = maxDate != null && maxDate.getMonth() === focusedMonth && maxDate.getFullYear() === focusedYear;\n      var minYear = minDate ? minDate.getFullYear() : selectedYear - 10;\n      var maxYear = maxDate ? maxDate.getFullYear() : selectedYear + 10;\n      return h(Host, null, h(\"div\", {\n        class: \"duet-date\"\n      }, h(DatePickerInput, {\n        dateFormatter: this.dateFormatLong,\n        value: this.value,\n        valueAsDate: valueAsDate,\n        formattedValue: formattedDate,\n        onInput: this.handleInputChange,\n        onBlur: this.handleBlur,\n        onFocus: this.handleFocus,\n        onClick: this.toggleOpen,\n        name: this.name,\n        disabled: this.disabled,\n        role: this.role,\n        required: this.required,\n        identifier: this.identifier,\n        localization: this.localization,\n        buttonRef: function buttonRef(element) {\n          return _this4.datePickerButton = element;\n        },\n        inputRef: function inputRef(element) {\n          return _this4.datePickerInput = element;\n        }\n      }), h(\"div\", {\n        class: {\n          \"duet-date__dialog\": true,\n          \"is-left\": this.direction === \"left\",\n          \"is-active\": this.open\n        },\n        role: \"dialog\",\n        \"aria-modal\": \"true\",\n        \"aria-hidden\": this.open ? \"false\" : \"true\",\n        \"aria-labelledby\": this.dialogLabelId,\n        onTouchMove: this.handleTouchMove,\n        onTouchStart: this.handleTouchStart,\n        onTouchEnd: this.handleTouchEnd\n      }, h(\"div\", {\n        class: \"duet-date__dialog-content\",\n        onKeyDown: this.handleEscKey,\n        ref: function ref(element) {\n          return _this4.dialogWrapperNode = element;\n        }\n      }, h(\"div\", {\n        class: \"duet-date__vhidden duet-date__instructions\",\n        \"aria-live\": \"polite\"\n      }, this.localization.keyboardInstruction), h(\"div\", {\n        class: \"duet-date__mobile\",\n        onFocusin: this.disableActiveFocus\n      }, h(\"label\", {\n        class: \"duet-date__mobile-heading\"\n      }, this.localization.calendarHeading), h(\"button\", {\n        class: \"duet-date__close\",\n        ref: function ref(element) {\n          return _this4.firstFocusableElement = element;\n        },\n        onKeyDown: this.handleFirstFocusableKeydown,\n        onClick: function onClick() {\n          return _this4.hide();\n        },\n        type: \"button\"\n      }, h(\"svg\", {\n        \"aria-hidden\": \"true\",\n        fill: \"currentColor\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"16\",\n        height: \"16\",\n        viewBox: \"0 0 24 24\"\n      }, h(\"path\", {\n        d: \"M0 0h24v24H0V0z\",\n        fill: \"none\"\n      }), h(\"path\", {\n        d: \"M18.3 5.71c-.39-.39-1.02-.39-1.41 0L12 10.59 7.11 5.7c-.39-.39-1.02-.39-1.41 0-.39.39-.39 1.02 0 1.41L10.59 12 5.7 16.89c-.39.39-.39 1.02 0 1.41.39.39 1.02.39 1.41 0L12 13.41l4.89 4.89c.39.39 1.02.39 1.41 0 .39-.39.39-1.02 0-1.41L13.41 12l4.89-4.89c.38-.38.38-1.02 0-1.4z\"\n      })), h(\"span\", {\n        class: \"duet-date__vhidden\"\n      }, this.localization.closeLabel))), h(\"div\", {\n        class: \"duet-date__header\",\n        onFocusin: this.disableActiveFocus\n      }, h(\"div\", null, h(\"h2\", {\n        id: this.dialogLabelId,\n        class: \"duet-date__vhidden\",\n        \"aria-live\": \"polite\",\n        \"aria-atomic\": \"true\"\n      }, this.localization.monthNames[focusedMonth], \" \", this.focusedDay.getFullYear()), h(\"label\", {\n        htmlFor: this.monthSelectId,\n        class: \"duet-date__vhidden\"\n      }, this.localization.monthSelectLabel), h(\"div\", {\n        class: \"duet-date__select\"\n      }, h(\"select\", {\n        id: this.monthSelectId,\n        class: \"duet-date__select--month\",\n        ref: function ref(element) {\n          return _this4.monthSelectNode = element;\n        },\n        onChange: this.handleMonthSelect\n      }, this.localization.monthNames.map(function (month, i) {\n        return h(\"option\", {\n          key: month,\n          value: i,\n          selected: i === focusedMonth\n        }, month);\n      })), h(\"div\", {\n        class: \"duet-date__select-label\",\n        \"aria-hidden\": \"true\"\n      }, h(\"span\", null, this.localization.monthNamesShort[focusedMonth]), h(\"svg\", {\n        fill: \"currentColor\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"16\",\n        height: \"16\",\n        viewBox: \"0 0 24 24\"\n      }, h(\"path\", {\n        d: \"M8.12 9.29L12 13.17l3.88-3.88c.39-.39 1.02-.39 1.41 0 .39.39.39 1.02 0 1.41l-4.59 4.59c-.39.39-1.02.39-1.41 0L6.7 10.7c-.39-.39-.39-1.02 0-1.41.39-.38 1.03-.39 1.42 0z\"\n      })))), h(\"label\", {\n        htmlFor: this.yearSelectId,\n        class: \"duet-date__vhidden\"\n      }, this.localization.yearSelectLabel), h(\"div\", {\n        class: \"duet-date__select\"\n      }, h(\"select\", {\n        id: this.yearSelectId,\n        class: \"duet-date__select--year\",\n        onChange: this.handleYearSelect\n      }, range(minYear, maxYear).map(function (year) {\n        return h(\"option\", {\n          key: year,\n          selected: year === focusedYear\n        }, year);\n      })), h(\"div\", {\n        class: \"duet-date__select-label\",\n        \"aria-hidden\": \"true\"\n      }, h(\"span\", null, this.focusedDay.getFullYear()), h(\"svg\", {\n        fill: \"currentColor\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"16\",\n        height: \"16\",\n        viewBox: \"0 0 24 24\"\n      }, h(\"path\", {\n        d: \"M8.12 9.29L12 13.17l3.88-3.88c.39-.39 1.02-.39 1.41 0 .39.39.39 1.02 0 1.41l-4.59 4.59c-.39.39-1.02.39-1.41 0L6.7 10.7c-.39-.39-.39-1.02 0-1.41.39-.38 1.03-.39 1.42 0z\"\n      }))))), h(\"div\", {\n        class: \"duet-date__nav\"\n      }, h(\"button\", {\n        class: \"duet-date__prev\",\n        onClick: this.handlePreviousMonthClick,\n        disabled: prevMonthDisabled,\n        type: \"button\"\n      }, h(\"svg\", {\n        \"aria-hidden\": \"true\",\n        fill: \"currentColor\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"21\",\n        height: \"21\",\n        viewBox: \"0 0 24 24\"\n      }, h(\"path\", {\n        d: \"M14.71 15.88L10.83 12l3.88-3.88c.39-.39.39-1.02 0-1.41-.39-.39-1.02-.39-1.41 0L8.71 11.3c-.39.39-.39 1.02 0 1.41l4.59 4.59c.39.39 1.02.39 1.41 0 .38-.39.39-1.03 0-1.42z\"\n      })), h(\"span\", {\n        class: \"duet-date__vhidden\"\n      }, this.localization.prevMonthLabel)), h(\"button\", {\n        class: \"duet-date__next\",\n        onClick: this.handleNextMonthClick,\n        disabled: nextMonthDisabled,\n        type: \"button\"\n      }, h(\"svg\", {\n        \"aria-hidden\": \"true\",\n        fill: \"currentColor\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"21\",\n        height: \"21\",\n        viewBox: \"0 0 24 24\"\n      }, h(\"path\", {\n        d: \"M9.29 15.88L13.17 12 9.29 8.12c-.39-.39-.39-1.02 0-1.41.39-.39 1.02-.39 1.41 0l4.59 4.59c.39.39.39 1.02 0 1.41L10.7 17.3c-.39.39-1.02.39-1.41 0-.38-.39-.39-1.03 0-1.42z\"\n      })), h(\"span\", {\n        class: \"duet-date__vhidden\"\n      }, this.localization.nextMonthLabel)))), h(DatePickerMonth, {\n        dateFormatter: this.dateFormatShort,\n        selectedDate: valueAsDate,\n        focusedDate: this.focusedDay,\n        onDateSelect: this.handleDaySelect,\n        onKeyboardNavigation: this.handleKeyboardNavigation,\n        labelledById: this.dialogLabelId,\n        localization: this.localization,\n        firstDayOfWeek: this.firstDayOfWeek,\n        focusedDayRef: this.processFocusedDayNode,\n        min: minDate,\n        max: maxDate\n      })))));\n    }\n  }, {\n    key: \"element\",\n    get: function get() {\n      return getElement(this);\n    }\n  }], [{\n    key: \"watchers\",\n    get: function get() {\n      return {\n        \"localization\": [\"createDateFormatters\"]\n      };\n    }\n  }]);\n\n  return DuetDatePicker;\n}();\n\nDuetDatePicker.style = duetDatePickerCss;\nvar iconCss = \"scale-icon{--display:inline-flex;--transition:all var(--scl-motion-duration-fast)\\n    var(--scl-motion-easing-standard);display:var(--display)}scale-icon path{transition:var(--transition)}@media screen and (forced-colors: active), (-ms-high-contrast: active){scale-icon svg,.scale-icon{color:white;stroke:white}}\";\n\nvar ContentCalendar = /*#__PURE__*/function () {\n  function ContentCalendar(hostRef) {\n    _classCallCheck(this, ContentCalendar);\n\n    registerInstance(this, hostRef);\n    /** (optional) The width and height in pixels */\n\n    this.size = 24;\n    /** (optional) Sets the icon color via the `fill` attribute */\n\n    this.fill = 'currentColor';\n    /** (optional) Alias for `fill` */\n\n    this.color = 'currentColor';\n    /** (optional) If `true`, the icon changes visually */\n\n    this.selected = false;\n    /** (optional) If `true` the SVG element will get `aria-hidden=\"true\"` */\n\n    this.decorative = false;\n  }\n\n  _createClass(ContentCalendar, [{\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      if (!this.hostElement.hasAttribute('styles')) {\n        this.hostElement.style.display = 'inline-flex';\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var ariaHidden = this.decorative ? {\n        'aria-hidden': 'true'\n      } : {};\n      return h(Host, null, h(\"svg\", Object.assign({\n        class: \"scale-icon\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: this.size,\n        height: this.size,\n        viewBox: \"0 0 24 24\"\n      }, ariaHidden), this.accessibilityTitle && h(\"title\", null, this.accessibilityTitle), h(\"g\", {\n        fill: this.fill === 'currentColor' ? this.color : this.fill\n      }, this.selected ? h(\"g\", null, h(\"path\", {\n        \"fill-rule\": \"evenodd\",\n        d: \"M17.5 3.5v-2H16v2H8v-2H6.5v2H2V19a3 3 0 003 3h14a3 3 0 003-3V3.5h-4.5zm-10 14a1 1 0 110-2 1 1 0 010 2zm0-4.5a1 1 0 110-2 1 1 0 010 2zm4.5 4.5a1 1 0 110-2 1 1 0 010 2zm0-4.5a1 1 0 110-2 1 1 0 010 2zm4.5 4.5a1 1 0 110-2 1 1 0 010 2zm0-4.5a1 1 0 110-2 1 1 0 010 2z\"\n      })) : h(\"g\", null, h(\"path\", {\n        \"fill-rule\": \"evenodd\",\n        d: \"M8 1.5v2h8v-2h1.5v2H22V19c0 1.65-1.35 3-3 3H5c-1.65 0-3-1.35-3-3V3.5h4.5v-2H8zM20.5 8h-17v11c0 .85.65 1.5 1.5 1.5h14c.85 0 1.5-.65 1.5-1.5V8zm-13 7.5a1 1 0 110 2 1 1 0 010-2zm4.5 0a1 1 0 110 2 1 1 0 010-2zm4.5 0a1 1 0 110 2 1 1 0 010-2zm-9-4.5a1 1 0 110 2 1 1 0 010-2zm4.5 0a1 1 0 110 2 1 1 0 010-2zm4.5 0a1 1 0 110 2 1 1 0 010-2z\"\n      })))));\n    }\n  }, {\n    key: \"hostElement\",\n    get: function get() {\n      return getElement(this);\n    }\n  }]);\n\n  return ContentCalendar;\n}();\n\nContentCalendar.style = iconCss;\nexport { DuetDatePicker as duet_date_picker, ContentCalendar as scale_icon_content_calendar };","map":null,"metadata":{},"sourceType":"module"}