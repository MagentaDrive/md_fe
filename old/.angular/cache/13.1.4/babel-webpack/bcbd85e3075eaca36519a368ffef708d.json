{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport _classCallCheck from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport { r as registerInstance, h, a as Host, g as getElement } from './index-f2e5998d.js';\nimport { c as classnames } from './index-713f92a5.js';\nimport { s as statusNote } from './status-note-d227f142.js';\nvar notificationMessageCss = \":host{--width:100%;--radius:var(--scl-radius-8);--border:1px solid var(--scl-color-white);--background-error:hsla(353.79999999999995, 100%, 88.6%, 0.35);--background-warning:hsla(33.5, 100%, 75.1%, 0.3);--background-informational:hsla(190.20000000000005, 100%, 92%, 0.75);--background-success:hsl(98.80000000000001, 49.7%, 61%, 0.2)}.notification-message{border:var(--border);border-radius:var(--radius);width:var(--width);position:relative}.notification-message--variant-error{background:var(--background-error)}.notification-message--variant-warning{background-color:var(--background-warning)}.notification-message--variant-informational{background-color:var(--background-informational)}.notification-message--variant-success{background-color:var(--background-success)}.notification-message__heading{margin:14px 48px 14px 48px;font-weight:var(--scl-font-weight-bold);line-height:var(--scl-font-line-height-125)}.notification-message__text{margin:8px 48px 15px 48px}::slotted(*){font-weight:var(--scl-font-weight-regular)}.notification-message__icon-close{position:absolute;top:8px;right:13.5px;color:hsl(0, 0%, 10%)}.notification-message__icon-close svg{height:19px;width:19px;padding:6.5px;border-radius:20%}.notification-message__icon-close:hover svg{background-color:hsl(0, 0%, 100%);color:var(--scl-color-primary-hover)}.notification-message__icon-success{position:absolute;top:12.5px;left:17px;height:20px;width:20px;color:var(--scl-color-background-success)}.notification-message__icon-error{position:absolute;top:12px;left:17px;height:20px;width:20px;color:var(--scl-color-background-error)}.notification-message__icon-information{position:absolute;top:12px;left:17px;height:20px;width:20px;color:var(--scl-color-text-info)}@media screen and (forced-colors: active), (-ms-high-contrast: active){.notification-message__icon-close{color:hsl(0, 0%, 100%)}}\";\n\nvar NotificationMessage = /*#__PURE__*/function () {\n  function NotificationMessage(hostRef) {\n    var _this = this;\n\n    _classCallCheck(this, NotificationMessage);\n\n    registerInstance(this, hostRef);\n    this.variant = 'informational';\n    this.dismissible = false;\n    this.autoHide = false;\n    this.autoHideDuration = 3000;\n\n    this.close = function () {\n      _this.opened = false;\n    };\n  }\n\n  _createClass(NotificationMessage, [{\n    key: \"componentWillLoad\",\n    value: function componentWillLoad() {\n      this.hasSlotText = !!this.hostElement.querySelector('[slot=text]');\n    }\n  }, {\n    key: \"componentDidRender\",\n    value: function componentDidRender() {\n      if (this.autoHide === true) {\n        setTimeout(this.close, this.autoHideDuration);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.hasSlotText = !!this.hostElement.querySelector('[slot=text]');\n    }\n  }, {\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      statusNote({\n        source: this.hostElement,\n        type: 'warn'\n      });\n    }\n  }, {\n    key: \"open\",\n    value: function () {\n      var _open = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.opened = true;\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function open() {\n        return _open.apply(this, arguments);\n      }\n\n      return open;\n    }()\n  }, {\n    key: \"handleIcons\",\n    value: function handleIcons() {\n      if (this.variant) {\n        switch (this.variant) {\n          case 'success':\n            return h(\"scale-icon-alert-success\", {\n              class: \"notification-message__icon-success\",\n              color: \"#187431\",\n              \"accessibility-title\": \"success\"\n            });\n\n          case 'informational':\n            return h(\"scale-icon-alert-information\", {\n              class: \"notification-message__icon-information\",\n              \"accessibility-title\": \"information\"\n            });\n\n          case 'error':\n            return h(\"scale-icon-alert-error\", {\n              class: \"notification-message__icon-error\",\n              \"accessibility-title\": \"error\"\n            });\n\n          case 'warning':\n            return h(\"scale-icon-alert-error\", {\n              class: \"notification-message__icon-information\",\n              color: \"#AE461C\",\n              \"accessibility-title\": \"information\"\n            });\n        }\n      }\n\n      return;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!this.opened) {\n        return null;\n      }\n\n      return h(Host, null, h(\"div\", {\n        part: this.getBasePartMap(),\n        class: this.getCssClassMap(),\n        tabindex: \"0\"\n      }, h(\"div\", {\n        part: \"container\",\n        class: \"notification-message__container\"\n      }, this.handleIcons(), h(\"div\", {\n        part: \"heading\",\n        class: \"notification-message__heading\"\n      }, h(\"slot\", null, \"\\u2003\"), this.dismissible && h(\"scale-icon-action-circle-close\", {\n        tabindex: \"0\",\n        class: \"notification-message__icon-close\",\n        onClick: function onClick() {\n          _this2.close();\n        },\n        onKeyDown: function onKeyDown(e) {\n          if (e.key === 'Enter') {\n            _this2.close();\n          }\n        },\n        \"accessibility-title\": \"close\"\n      })), this.hasSlotText && h(\"div\", {\n        part: \"text\",\n        class: \"notification-message__text\"\n      }, h(\"slot\", {\n        name: \"text\"\n      })))));\n    }\n  }, {\n    key: \"getBasePartMap\",\n    value: function getBasePartMap() {\n      return this.getCssOrBasePartMap('basePart');\n    }\n  }, {\n    key: \"getCssClassMap\",\n    value: function getCssClassMap() {\n      return this.getCssOrBasePartMap('css');\n    }\n  }, {\n    key: \"getCssOrBasePartMap\",\n    value: function getCssOrBasePartMap(mode) {\n      var name = 'notification-message';\n      var prefix = mode === 'basePart' ? '' : \"\".concat(name, \"--\");\n      return classnames(name, this.variant && \"\".concat(prefix, \"variant-\").concat(this.variant));\n    }\n  }, {\n    key: \"hostElement\",\n    get: function get() {\n      return getElement(this);\n    }\n  }]);\n\n  return NotificationMessage;\n}();\n\nNotificationMessage.style = notificationMessageCss;\nexport { NotificationMessage as scale_notification_message };","map":null,"metadata":{},"sourceType":"module"}