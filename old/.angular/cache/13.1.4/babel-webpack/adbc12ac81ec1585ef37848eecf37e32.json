{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\Thomas\\\\Desktop\\\\md_fe\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { r as registerInstance, h, a as Host, g as getElement } from './index-f2e5998d.js';\nimport { c as classnames } from './index-713f92a5.js';\nimport { s as statusNote } from './status-note-d227f142.js';\nvar calloutCss = \":host{--inner-width-small:var(--scl-spacing-80);--inner-height-small:var(--scl-spacing-80);--inner-width-large:126.5px;--inner-height-large:96px;--width-small:120px;--height-small:120px;--height-large:160px;--width-large:160px;--color-blue:var(--scl-color-blue-60);--color-white:var(--scl-color-white);--color-black:var(--scl-color-grey-90);--color-primary:var(--scl-color-primary);--font-family:var(--scl-font-family-sans);--font-size:calc(var(--scl-font-size-20) * 3);--font-size-prefix:var(--scl-font-size-20)}.callout{display:flex;justify-content:center;align-items:center;border-radius:100%;background:var(--color-primary);font-family:var(--font-family);color:var(--color-white);text-align:center}.callout.callout--color-primary{background:var(--color-primary)}.callout.callout--color-white{background:var(--color-white);color:var(--color-black)}.callout.callout--color-blue{background:var(--color-blue)}.callout.callout--color-black{background:var(--color-black)}.callout.callout--size-large{width:var(--width-large);height:var(--height-large)}.callout.callout--size-small{width:var(--width-small);height:var(--height-small)}.callout.callout--size-large .callout__inner{width:var(--inner-width-large);height:var(--inner-height-large)}.callout.callout--size-small .callout__inner{width:var(--inner-width-small);height:var(--inner-height-small)}.callout__inner{transform:rotateZ(var(--rotation));overflow:hidden}.callout__prefix{font-size:var(--font-size-prefix);font-weight:400}.callout__text{font-size:var(--font-size);font-weight:700}.callout__sup{font-size:30px;cursor:help}.callout.callout--size-large.callout--asterisk .callout__prefix{margin-bottom:10px}.callout.callout--size-small .callout__prefix{margin-bottom:10px}\";\n\nvar Callout = /*#__PURE__*/function () {\n  function Callout(hostRef) {\n    _classCallCheck(this, Callout);\n\n    registerInstance(this, hostRef);\n    /** (optional) Variant size of the callout itself */\n\n    this.size = 'large';\n    /** (optional) Variant rotation of the callout/circle */\n\n    this.rotation = 0;\n  }\n\n  _createClass(Callout, [{\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      statusNote({\n        source: this.hostElement,\n        tag: 'beta'\n      });\n    }\n  }, {\n    key: \"displayStyle\",\n    value: function displayStyle() {\n      return \":host {\\n      --rotation: \".concat(this.rotation, \"deg;\\n    }\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return h(Host, null, h(\"style\", null, this.displayStyle()), h(\"div\", {\n        part: this.getBasePartMap(),\n        class: this.getCssClassMap()\n      }, h(\"div\", {\n        part: \"inner\",\n        class: \"callout__inner\"\n      }, h(\"div\", {\n        class: \"callout__prefix\"\n      }, h(\"slot\", {\n        name: \"prefix\"\n      })), h(\"div\", {\n        class: \"callout__text\"\n      }, h(\"span\", null, h(\"slot\", null)), this.asterisk && h(\"sup\", {\n        title: this.asterisk,\n        class: \"callout__sup\"\n      }, \"*\")))));\n    }\n  }, {\n    key: \"getBasePartMap\",\n    value: function getBasePartMap() {\n      return this.getCssOrBasePartMap('basePart');\n    }\n  }, {\n    key: \"getCssClassMap\",\n    value: function getCssClassMap() {\n      return this.getCssOrBasePartMap('css');\n    }\n  }, {\n    key: \"getCssOrBasePartMap\",\n    value: function getCssOrBasePartMap(mode) {\n      var name = 'callout';\n      var prefix = mode === 'basePart' ? '' : \"\".concat(name, \"--\");\n      return classnames(name, this.variant && \"\".concat(prefix, \"color-\").concat(this.variant), this.size && \"\".concat(prefix, \"size-\").concat(this.size), this.asterisk && \"\".concat(prefix, \"asterisk\"));\n    }\n  }, {\n    key: \"hostElement\",\n    get: function get() {\n      return getElement(this);\n    }\n  }]);\n\n  return Callout;\n}();\n\nCallout.style = calloutCss;\nexport { Callout as scale_callout };","map":null,"metadata":{},"sourceType":"module"}